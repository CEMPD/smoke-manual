<?xml version="1.0" encoding="UTF-8"?>

<chapter id="concepts">

<title>SMOKE Concepts</title>

<section>

<title>Introduction</title>

<para>The purpose of SMOKE is to convert the resolution of the data in an emission inventory to the resolution needed by an air quality model. Emission inventories typically have an annual-total emissions value for each emissions source, or perhaps an average-day emissions value. The AQMs, however, typically require emissions data on an hourly basis, for each model grid cell (and perhaps model layer), and for each model species. Consequently, to achieve the input requirements of the AQM, emissions processing must (at a minimum) transform inventory data by temporal allocation, chemical speciation, spatial allocation, and perhaps layer assignment.</para>

<para>In addition to changing the resolution of the data, SMOKE must also provide the AQM input files in the correct file format. SMOKE can create the Input/Output Applications Programming Interface (I/O API) Network Common Data Form (NetCDF) output format needed by the CMAQ and MAQSIP models. It can also create the Fortran binary format for the 2-D emissions needed by REMSAD, UAM, and CAM<subscript>X</subscript>, and the ASCII elevated-point-source format used by the PTSRCE preprocessor to these models. File format is also important for the input files used by SMOKE, most of which are ASCII files, but some of which are I/O API NetCDF files.</para>

<para>In this chapter, we introduce you to various concepts that are critical to understanding the technical description of emissions processing, as well as provide more detail about the processing capabilities of SMOKE. (Later, Chapters 5 through 10 give more specifics about each program's capabilities and each file's format.) This chapter provides the context and framework for the rest of the user's manual.</para>

<para>We begin this chapter describing the sparse matrix approach to emissions processing; understanding this approach is useful for comprehending the specifics of processing with SMOKE. Next, we provide an explanation of the overall file formats that SMOKE works with: ASCII, I/O API, and Fortran binary files. We then provide a brief introduction to source categories, which is such a basic concept in SMOKE that it needs to be described early on. Next, we describe cross-references and profiles, which is another basic concept upon which many emissions processing steps are based. Following this are several sections that describe each of the major processing steps: data import, temporal processing, chemical speciation processing, spatial processing (gridding), future and past year inventory growth, control processing, reactivity controls, and merging inventories with SMOKE matrices. In the final section, we describe many of the details of SMOKE processing for each source category, and further describe additional processing steps that are specific to each source category.</para>

</section>

<section>

<title>Assigns file and environment variables</title>

<para>The Assigns file is a script used to set up the parameters of a SMOKE run. The file configures the UNIX environment so that all of the correct input, intermediate, and output directories and files can be identified and used by the SMOKE programs. It also sets things like the name of the grid and the time period that you will run SMOKE for a given case. It does this by setting many UNIX environment variables, explained in the next paragraph. The Assigns file also uses environment variables to configure compiler options, so that SMOKE can be compiled on operating system other than the ones provided with the SMOKE distribution (PC Linux and SGI Irix as of August, 2003). More information on the Assigns file is provided in the scripts documentation in Chapter 4.</para>

<para>Environment variables are aliases that can be set by a UNIX (including Linux) operating system. These variables are defined during a user's UNIX session, usually defined by an xterm or other UNIX terminal window. The environment variables that SMOKE uses store the input, intermediate, and output files and directories. For example, the environment variable for the directory that is the SMOKE root directory is <envar>SMKROOT</envar>. At the UNIX prompt, this environment variable could be defined to an actual path such as <filename class="directory">/home/mylogin/smokev1</filename>. To set an environment variable, the UNIX <command>setenv</command> command is needed. In this example, the command to define <envar>SMKROOT</envar> as the given path is:</para>

<para><userinput>setenv SMKROOT /home/mylogin/smokev1</userinput></para>

<para>After this command is issued, the <envar>SMKROOT</envar> environment variable stores the characters <filename class="directory">/home/mylogin/smokev1</filename> as its value. To use the value of an environment variable, the dollar sign must proceed the variable name at the UNIX prompt. In the follow example, we give the UNIX command <command>echo</command> to print the contents of the <envar>SMKROOT</envar> environment variable at the UNIX prompt. Note the use of the dollar sign before the <envar>SMKROOT</envar> variable name.</para>

<para><userinput>echo $SMKROOT</userinput></para>

<para>When the UNIX system executes this command, the following is displayed at the UNIX prompt:</para>

<para><computeroutput>/home/mylogin/smokev1</computeroutput></para>

<para>The environment variables set by the Assigns file for directories are described in Chapter 3. The variables used by the SMOKE scripts for controlling SMOKE execution are described in Chapter 4. Finally, the environment variables that control program behavior are described in Chapters 5, 6, and 7.</para>

</section>

<section>

<title>Emission inventories</title>

<para>Emission inventories are the key input files to SMOKE and emissions modeling. The data types that these inventories contain are called inventory pollutants (e.g., carbon monoxide, ammonia, mercury). By itself, SMOKE does not require specific data types in the inventory files it reads. However, the AQMs that SMOKE supports do require certain input data, called model species, which in turn requires SMOKE to use certain inventory pollutants. This section and Sections 2.4 and 2.5 contain information about the inventory and ancillary files that SMOKE uses.</para>

<para>In this section, we focus on the inventory files. Subsection 0 describes the major inventory types useable by SMOKE. In Subsection 0, we describe the inventory source categories, and in Section 0, we discuss the inventory file formats. In Section 0 and 0, we describe the details of country/state/county codes and Source Classification Codes (SCCs). Finally, Sections 0, 0, and 0 describe Standard Industrial Classification (SIC) codes, Maximum Achievable Control Technology (MACT) codes, and source types, respectively.</para>

<section>

<title>Inventory data types</title>

<para>SMOKE processes criteria, particulate, toxics, and activity data inventories. Activity data will be discussed along with on-road mobile sources in the next section. By criteria inventories, we mean inventories containing EPA's criteria pollutants: carbon monoxide (CO), nitrogen oxides (NO<subscript>x</subscript>), and volatile organic compounds (VOC) or total organic gases (TOG). Particulate inventories contain ammonia (NH<subscript>3</subscript>), sulfur dioxide (SO<subscript>2</subscript>), particulate matter (PM) of size 10 microns or less (PM<subscript>10</subscript>), and PM of size 2.5 microns or less (PM<subscript>2.5</subscript>).</para>

<para>Additionally, SMOKE can process inventories with pre-speciated criteria and/or particulate emissions. For example, elemental carbon of size 2.5 microns or less can be provided as input to SMOKE directly, instead of letting SMOKE's speciation step compute it from the PM<subscript>2.5</subscript> total emissions. To ensure that SMOKE correctly processes the data when you are using pre-speciated emissions, other input files must be configured in specific ways, as explained in Chapter 4.</para>

<para>The toxics inventories that SMOKE can process are data from the National Emission Inventory (NEI) for Hazardous Air Pollutants (HAPs). This inventory contains hundreds of specific compounds representing the 188 HAPs. The original list of 189 HAPs and modifications representing the current list can be found at <ulink url="http://www.epa.gov/ttn/atw/orig189.html" />. The reason the inventory contains many more pollutants than 188 is because several on the list of 188 are pollutant groups, such as polycyclic organic matter, cyanide compounds and numerous metal compounds including chromium compounds, cadmium compounds, manganese compounds, and others. Note that because of these groups, specific compounds in the inventory in one inventory year may not exactly match the compounds in another inventory year. For example, one may have lead oxide reported one year but not in a subsequent year. However, those compounds not belonging to compound groups are likely to be in the inventory year after year, particularly the common gaseous HAPs emitted by mobile sources such as benzene, 1,3-butadiene, acrolein, formaldehyde, and acetaldehyde.</para>

<para>In the default configuration of SMOKE described in Chapter 3, a particular list of HAPs based on the draft 1999 NEI for HAPs (October 2002) was used to set up the INVTABLE ancillary file. It is important to understand that you may need to modify the default configuration to accommodate the particular toxics inventory you are inputting into SMOKE. For example, if you have cadmium chloride in your inventory, which was not in the draft 1999 NEI for HAPs, then you would need to add this pollutant to the INVTABLE. Please see the "How to" section of Chapter 4 for more details about making such changes. In addition, note that in the default configuration, not all of these pollutants are actually used because the CMAQ and REMSAD models (the two toxics models that SMOKE supports by default) do not use them all. In fact, most of the metal pollutant groups on the list of HAPs (lead compounds, cobalt compounds, manganese compounds, beryllium compounds, chromium compounds, and others) are not currently supported by the grid models.</para>

</section>

<section>

<title>Inventory source categories</title>

<section>

<title>Overview</title>

<para>Emission inventories are divided into several source categories. These divisions stem from both differing methods for preparing the inventories and from different characteristics and attributes of the categories (more on these terms later). Generally, emission inventories are divided into the following source categories:</para>

<itemizedlist>
<listitem>
<para><emphasis role="bold">Stationary area/Nonpoint sources:</emphasis> Sources that are treated as being spread over a spatial extent (usually a county or air district) and that are not moveable (as compared to nonroad mobile and on-road mobile sources). Because it is not possible to collect the emissions at each point of emission, they are estimated over larger regions. The EPA introduced the term "nonpoint" to replace "stationary area" in order to avoid confusion with the term "area source", which is used as a regulatory term in the toxics realm. However, "nonpoint" has not gained acceptance (thus far) by the criteria inventory/modeling community. Thus, in this manual we will use the term "stationary area" to refer to these sources when they are in criteria inventories, while we use the term "nonpoint" to refer to these sources when they are in toxics inventories. Examples of nonpoint or stationary area sources are residential heating and architectural coatings. Numerous sources, such as dry cleaning facilities, may be treated either as stationary area/nonpoint sources or as point sources; in particular, the toxics inventory contains numerous small sources (based on emissions) that are not inventoried as nonpoint sources because their locations are known and are provided.</para>
</listitem>

<listitem>
<para><emphasis role="bold">Nonroad mobile sources:</emphasis> Vehicular and otherwise movable sources that do not include vehicles that travel on roadways. These sources are also computed as being spread over a spatial extent (again, a county or air district). Examples of nonroad mobile sources include locomotives, lawn and garden equipment, construction vehicles, and boating emissions. These sources are included in both criteria and toxics inventories.</para>
</listitem>

<listitem>
<para><emphasis role="bold">On-road mobile sources:</emphasis> Vehicular sources that travel on roadways. These sources can be computed either as being spread over a spatial extent or as being assigned to a line location (called a link). Data in on-road inventories can be either emissions or activity data. Activity data consists of vehicle miles traveled (VMT) and, optionally, vehicle speed. Activity data are used when SMOKE will be computing emission factors via another model such as MOBILE6. Examples of on-road mobile sources include light-duty gasoline vehicles and heavy-duty diesel vehicles. On-road mobile sources are included in both criteria and toxics inventories.</para>
</listitem>

<listitem>
<para><emphasis role="bold">Point sources:</emphasis> These are sources that are identified by point locations, typically because they are regulated and their locations are available in regulatory reports. Point sources are often further subdivided into electric generating utilities (EGUs) and non-EGU sources, particularly in criteria inventories in which EGUs are a primary source of NOx and SO2. Examples of non-EGU point sources include chemical manufacturers and furniture refinishers. Point sources are included in both the criteria and toxics inventories.</para>
</listitem>

<listitem>
<para><emphasis role="bold">Wildfire sources with precomputed plume rise:</emphasis> Traditionally, wildfire emissions have been treated as stationary area sources. More recently, data have also been developed for point locations, with day-specific emissions and hour-specific plume rise (vertical distribution of emissions) being computed prior to input to SMOKE. In this case, the wildfire emissions are processed by SMOKE as point sources.</para>
</listitem>

<listitem>
<para><emphasis role="bold">Biogenic land use data:</emphasis> Biogenic land use data characterize the type of vegetation that exists in either county total or grid cell values. The biogenic land use data in North American is available using two different sets of land use categories: the Biogenic Emissions Landcover Database (BELD) version 2 (BELD2), and the BELD version 3 (BELD3).</para>
</listitem>
</itemizedlist>

<para>Emission processing in SMOKE is divided into four processing categories: area, biogenic, mobile, and point. The definitions of these categories that SMOKE uses are different than those used for defining emission inventories. <xref linkend="ch02_tbl_inv" /> lists the inventory source categories, the types of inventories (activity data, criteria, particulates, and toxics) that SMOKE can process, the temporal resolution that is acceptable to SMOKE, and the SMOKE processing category that should be used for processing the inventory.</para>

<table id="ch02_tbl_inv">
<title>Inventory source categories and SMOKE processing capabilities and categories.</title>

<tgroup cols="6">
<colspec colname="c1" />
<colspec colname="c2" />
<colspec colname="c3" />
<colspec colname="c4" />
<colspec colname="c5" />
<colspec colname="c6" />

<thead>
<row>
<entry morerows="1" valign="bottom">Inventory source category</entry>
<entry namest="c2" nameend="c5">Temporal resolution that SMOKE can process*</entry>
<entry morerows="1" valign="bottom">SMOKE processing category</entry>
</row>

<row>
<entry>Activity data</entry>
<entry>Criteria</entry>
<entry>Particulates</entry>
<entry>Toxics</entry>
</row>
</thead>

<tbody>
<row>
<entry>Nonpoint or stationary area</entry>
<entry align="center">N/A</entry>
<entry align="center">A, S</entry>
<entry align="center">A, S</entry>
<entry align="center">A, S</entry>
<entry>Area</entry>
</row>

<row>
<entry>Nonroad mobile</entry>
<entry align="center">N/A</entry>
<entry align="center">A, S</entry>
<entry align="center">A, S</entry>
<entry align="center">A, S</entry>
<entry>Area</entry>
</row>

<row>
<entry>On-road mobile</entry>
<entry align="center">A</entry>
<entry align="center">A, S</entry>
<entry align="center">A, S</entry>
<entry align="center">A, S</entry>
<entry>Mobile</entry>
</row>

<row>
<entry>EGU</entry>
<entry align="center">N/A</entry>
<entry align="center">A, S, D, H</entry>
<entry align="center">A, S, D, H</entry>
<entry align="center">A, S</entry>
<entry>Point</entry>
</row>

<row>
<entry>Non-EGU</entry>
<entry align="center">N/A</entry>
<entry align="center">A, S, D, H</entry>
<entry align="center">A, S, D, H</entry>
<entry align="center">A, S</entry>
<entry>Point</entry>
</row>

<row>
<entry>Wildfire with precomputed plume rise</entry>
<entry align="center">N/A</entry>
<entry align="center">D, H</entry>
<entry align="center">D, H</entry>
<entry align="center">N/A</entry>
<entry>Point</entry>
</row>

<row>
<entry>Biogenic land use</entry>
<entry align="center">N/A</entry>
<entry align="center">X</entry>
<entry align="center">N/A</entry>
<entry align="center">N/A</entry>
<entry>Biogenic</entry>
</row>
</tbody>

<tfoot>
<row>
<entry namest="c1" nameend="c6">* A = Supports annual data; S = Supports average-day data; D = Supports day-specific data; H = Supports hourly data; X = Supports available data</entry>
</row>
</tfoot>

</tgroup>
</table>

<para>Each inventory source category has source characteristics, source attributes, data values, and data attributes. <emphasis>Source characteristics</emphasis> are unique to each inventory source category and also distinguish one source in the inventory from another. <emphasis>Source attributes</emphasis> further describe the sources with other information that is useful for emissions processing, such as point-source flue gas exit height and temperature. The <emphasis>data values</emphasis> are either emissions values or activity values. The <emphasis>data attributes</emphasis> are additional information about the data values, such as the percentage reduction in emission from controls already applied to the source. In the following subsections, we summarize the source characteristics and attributes and the data values and attributes that are used by SMOKE for each of the inventory categories.</para>

</section>

<section>

<title>Detailed source category descriptions</title>

<section>

<title>Nonpoint/stationary area and nonroad mobile (SMOKE category: area)</title>

<para><emphasis role="bold">Source characteristics:</emphasis> For all typical inventories, the source characteristics that identify these sources are country/state/county code and SCC. <remark>See Section [insert here] for further information on SCC codes.</remark></para>

<para><emphasis role="bold">Optional source characteristics:</emphasis> SMOKE can also use pregridded data as a SMOKE area source<remark>; this is described in more detail in Section [insert here]</remark>. In this case, the country/state/county code and SCC are not used in SMOKE.</para>

<para><emphasis role="bold">Source attributes:</emphasis> The inventory year is associated with all sources in the inventory input files. In addition, SMOKE assigns a time zone and an approach for normalization of temporal profiles. In the nonpoint toxics inventory only, Standard Industrial Classification (SIC) codes, Maximum Achievable Control Technology (MACT) codes, and North American Industrial Classification System (NAICS) codes are optional source attributes; the NAICS code is read by SMOKE but not otherwise used at this time. Additionally, a "source type" field is available in the nonpoint inventory to identify major and Clean Air Act (CAA) Section 112 area sources. <remark>See Section 0 for a description of SIC codes, Section 0 for more about MACT codes, and Section 0 for more about source types.</remark> We will refer to the CAA Section 112 area sources as simply "section-112 area sources."</para>

<para><emphasis role="bold">Data:</emphasis> SMOKE can read emissions data for criteria, particulate, and toxics pollutants for nonpoint/stationary area and nonroad inventories. The SMOKE system is not constrained with regard to the pollutants read <remark>(although typical examples were given in Section 0)</remark>. SMOKE accepts annual emissions data, average-day emissions data, or both (though not all input formats support all types). An emission factor value can also be read by SMOKE, but SMOKE does nothing with it.</para>

<para><emphasis role="bold">Data attributes:</emphasis> Inventories for nonpoint/stationary area and nonroad mobile sources can contain control efficiency, rule penetration, and rule effectiveness information for each pollutant. SMOKE will use these data if provided; otherwise it will set default values that indicate that no control-based adjustments have been applied to the inventory pollutant data. The defaults are listed in the file formats.</para>

</section>

<section>

<title>On-road mobile (SMOKE category: mobile)</title>

<para><emphasis role="bold">Source characteristics:</emphasis> For on-road mobile inventories, the minimum source characteristics that identify these sources are country/state/county code and either SCC or road class and vehicle type codes. When the SCC is provided, it must follow a specific pattern in order to contain the road class and vehicle type codes <remark>(see Section 0)</remark>. When road class and vehicle type codes are provided to SMOKE directly, SMOKE translates these to SCC values.</para>

<para><emphasis role="bold">Optional source characteristics:</emphasis> A link code may also identify on-road sources. This code must be unique within each county and SCC (or road class/vehicle type combination).</para>

<para><emphasis role="bold">Source attributes:</emphasis> The inventory year is associated with all sources in the inventory input files. In addition, SMOKE assigns a time zone and an approach for normalization of temporal profiles. For sources with link codes, SMOKE will use the starting and ending coordinates of the link, using either latitude-longitude (lat-lon) values or coordinates in the Universal Transverse Mercator (UTM) coordinate system.</para>

<para><emphasis role="bold">Data:</emphasis> Emissions data for criteria, particulate, and toxics pollutants can be read for on-road mobile inventories. SMOKE is not constrained with regard to the pollutants read <remark>(although typical examples were provided in Section 0)</remark>. SMOKE accepts annual emissions data, average-day emissions data, or both (though not all input formats support all types).</para>

<para>Additionally, on-road mobile inventories can contain VMT and average speed activity data, which are needed when users would like SMOKE to run MOBILE6 to compute emissions. A combination of precomputed emissions and VMT data is also acceptable for input to SMOKE, but you are responsible for preventing duplication of emissions. Duplication could occur if you input precomputed emissions for the same sources for which you have SMOKE calculate emissions using VMT data and MOBILE6.</para>

<para><emphasis role="bold">Data attributes:</emphasis> No data attributes are associated with on-road mobile sources.</para>

</section>

<section>

<title>Point sources (SMOKE category: point)</title>

<para><emphasis role="bold">Source characteristics:</emphasis> The source characteristics for point sources depend on the inventory input format. The Inventory Data Analyzer (IDA) format and SMOKE one-record-per-line (ORL) format identify sources by country/state/county code, plant code, point code, stack code, segment code, and SCC. The Emissions Modeling System, '95 (EMS-95) format identifies sources by country/state/county code, facility code (same as plant code), stack code, device code, process code, and SCC.</para>

<para><emphasis role="bold">Optional source characteristics:</emphasis> SMOKE can support up to five location identifiers within a plant, although the most used in any currently implemented input file format is four.</para>

<para><emphasis role="bold">Source attributes:</emphasis> As with other source categories, inventory year is associated with all sources in the inventory input files. SMOKE also assigns a time zone and an approach for normalization of temporal profiles. In addition, point sources have the following required source attributes not associated with other source categories: latitude, longitude, stack height, stack diameter (at the exit location), flue gas exit velocity, and flue gas exit temperature. Finally, the following optional source attributes are also used by SMOKE: SIC codes, MACT codes, plant descriptions, emissions release type point (e.g., horizontal stack, fugitive), source type (major or section-112 area), Office of Regulatory Information Systems (ORIS) identification codes, and boiler identification codes. Not all input formats support all types of optional source attributes. In particular, the ORIS and boiler codes (which are necessary for SMOKE to use in matching with Continuous Emissions Monitoring [CEM] hour-specific EGU data) are supported only by the IDA format. Also, the MACT code and source types are supported only by the SMOKE ORL format. See Section 0 for a description of SIC codes, Section 0 for more about MACT codes, and Section 0 for more about source types.</para>

<para><emphasis role="bold">Data:</emphasis> Emissions data for criteria, particulate, and toxics pollutants can be read for point inventories. SMOKE is not constrained with regard to the pollutants read <remark>(although typical examples were provided in Section 0)</remark>. SMOKE accepts annual emissions data, average-day emissions data, or both.</para>

<para>Optionally, point-source emissions data can be provided using day-specific or hour-specific records. The formats for these data are included in Chapter 8.</para>

<para><emphasis role="bold">Data attributes:</emphasis> EGU and non-EGU point sources can contain control efficiency and rule effectiveness information for each pollutant. SMOKE will use these data if provided; otherwise it will set default values that indicate that no control-based adjustments have been applied to the inventory pollutant data. The defaults are listed in the file formats.</para>

</section>

<section>

<title>Wildfire with precomputed plumes (SMOKE category: point)</title>

<para><emphasis role="bold">Source characteristics:</emphasis> Wildfires with precomputed plumes are identified by the country/state/county code and the fire name.</para>

<para><emphasis role="bold">Optional source characteristics:</emphasis> There are no optional source characteristics for wildfire sources.</para>

<para><emphasis role="bold">Source attributes:</emphasis> Like other source categories, inventory year is associated with all sources in the inventory input files. SMOKE also assigns a time zone and an approach for normalization of temporal profiles. In addition, wildfire sources require the latitude and longitude source attributes. Finally, additional hour-specific source attributes for wildfire sources <emphasis>must</emphasis> be provided for the fraction of emissions in the surface layer, the height of the bottom of the plume, and the height of the top of the plume. These hour-specific attributes are provided to SMOKE using the point-source hour-specific formats described in Chapter 8.</para>

<para><emphasis role="bold">Data:</emphasis> Wildfire source inventories can contain criteria and particulate pollutants. SMOKE is not constrained with regard to the pollutants read <remark>(although typical examples were provided in Section 0)</remark>. These data must be provided as day-specific or hour-specific emissions values using point-source formats specified in Chapter 8.</para>

<para><emphasis role="bold">Data attributes:</emphasis> No data attributes are associated with wildfire sources.</para>

</section>

<section>

<title>Biogenic land use (SMOKE category: biogenic)</title>

<para><emphasis role="bold">Source characteristics:</emphasis> Biogenic emission data does not fit as neatly into the source-characteristic paradigm as the previously described source types. Emissions for biogenic sources are estimated starting with land use data, which are available for both BELD2 and BELD3 processing. The BELD2 data are available either by U.S. state/county and BELD2 land use category or by grid cell and BELD2 land use category. BELD3 land use data are available by 1-km grid cell over North and Central America and by BELD3 land use category.</para>

<para><emphasis role="bold">Optional source characteristics:</emphasis> Biogenic land use data do not include optional source characteristics. The data are either by state/county or by grid cell.</para>

<para><emphasis role="bold">Source attributes:</emphasis> There are no source attributes for biogenic land use data.</para>

<para><emphasis role="bold">Data:</emphasis> The biogenic land use data consist of fractions associated with each land use type within a county or grid cell.</para>

<para><emphasis role="bold">Data attributes:</emphasis> There are no data attributes for biogenic land use data.</para>

</section>

</section>

<section>

<title>Inventory file format</title>

<para>SMOKE supports a variety of inventory formats for criteria, particulate, toxics, and activity data inventories, which are described in detail in Chapter 8. Here, we provide a brief introduction to these formats, which will be helpful as you read more about SMOKE in the remainder of this chapter and the chapters before Chapter 8. All formats described here are text files. To convert your data to these formats, the best approach is to use a database or spreadsheet program to reformat and output the data in the requested format. There is not a standard format-conversion method that comes with SMOKE.</para>

<para>With the exception of the on-road mobile formats for activity data (i.e. VMT and speed), none of the SMOKE inventory formats require specific inventory pollutants or limit the inventory pollutant types that can be imported. However, all formats have their "typical" purpose. The IDA format is usually used for criteria and particulate inventories and is appropriate for them because most sources have emissions for all criteria and particulate pollutants. However, there is no reason that mercury data, for example, could not be provided to SMOKE using this format (provided that the user does not need to have the MACT code associated with mercury emissions for other processing steps, since MACT codes are not part of the IDA format). Similarly, the SMOKE ORL format is usually used for importing toxics data, but could also be used to import criteria inventories. In the following paragraphs, we describe the formats available for nonpoint/stationary area, nonroad mobile, on-road mobile, point, and point-wildfire sources.</para>

<para><emphasis>For nonpoint/stationary area sources,</emphasis> SMOKE supports three formats. The first is the IDA format, which is intended for input of the criteria and particulate National Emission Inventory for stationary area sources. The second is the EMS-95 format, which is provided only for backward compatibility for people using EMS-95 emission files. The key difference between the two formats is that the IDA format has all inventory pollutants for each source on a single line, whereas the EMS-95 format has a different inventory pollutant on each line. The third format, SMOKE ORL, is typically used for nonpoint sources for toxics inventories. This format can be created using data fields from the NEI for HAPs. In some cases, a version of this inventory known as the "modeler's files" may be available, but will still require conversion to the SMOKE ORL format; additional conversion is needed because the "modeler's files" contain extra information not needed for SMOKE, but needed by other users of the files. The SMOKE ORL and IDA formats may be used together to combine the criteria, particulate, and toxics inventories into a single SMOKE run. Like the EMS-95 format (and unlike the IDA format), the SMOKE ORL format has a different inventory pollutant on each line.</para>

<para><emphasis>For nonroad mobile sources,</emphasis> there are two available inventory formats. For criteria and particulate inventories, you can use the same IDA format or EMS-95 format as for stationary area sources. For toxics inventories, the SMOKE ORL format is available for providing nonroad data to SMOKE. These formats may be used together to combine the nonroad criteria, particulate, and toxics inventories into a single SMOKE run. Like the nonpoint toxics format, the nonroad mobile toxics format has a different inventory pollutant on each line and can be used to input any inventory data to SMOKE, including criteria or particulate emissions.</para>

<para><emphasis>For on-road mobile sources,</emphasis> four formats are possible. There is an IDA format for activity data and one for emissions data. The IDA activity data format is used to input VMT and speed data to SMOKE for criteria, particulate, and toxics modeling. The IDA emissions data format is intended for criteria and particulate inventories, though other data can be provided in this format as well; this format has all inventory pollutants on each line of the file. Third, there is a SMOKE ORL format for toxics emissions data, which can also be used for input of any inventory data to SMOKE. All three of these formats expect VMT or emissions data to be provided by road class and vehicle type. Fourth, there is an EMS-95 format that can be used to provide SMOKE VMT data that are aggregated by road class and <emphasis>not</emphasis> vehicle type. In this case, SMOKE requires another input file, called the "VMT Mix" file, to disaggregate the emissions by vehicle type for each road class. The EMS-95 format also permits providing data by link, which includes data regarding the coordinates of the link start and end points. The EMS-95 format is the only way to import data by link; note that use of link-based MOBILE6 processing is not yet supported by SMOKE.</para>

<para><emphasis>For point sources,</emphasis> SMOKE has formats for annual or average-day inventories, for day-specific inventories, and for hour-specific inventories. For annual or average-day inventories, the IDA format can be used for criteria and particulate inventories. An EMS-95 format can also be used for average-weekday criteria and particulate inventories; it requires five separate files for each state (SMOKE combines the information from these five files and across all of the states when importing the data). A SMOKE ORL format is available for importing toxics inventories. For day-specific data, we have adapted the EMS-95 format for use in all cases, whether the annual or average-day inventory is in IDA, EMS-95, or SMOKE ORL format. For hour-specific data, a very similar format can be used, again regardless of what format the annual or average-day emissions are provided in. Finally, the CEM data format can be used for day-specific or hour-specific data when using IDA-formatted annual inventories only; SMOKE uses the ORIS codes and boiler codes in the IDA files to match sources between the IDA and CEM data files.</para>

<para><emphasis>For wildfire sources,</emphasis> you can provide wildfire data that are being treated as point sources to SMOKE using the IDA point-source format. In this case, there are certain fields that must be left blank (such as stack parameters) because they do not apply to wildfire sources. When using wildfire data provided as point sources, you must also provide day-specific or hour-specific wildfire emissions and hour-specific precomputed plume rise using the EMS-95 day-specific and hour-specific formats.</para>

</section>

<section>

<title>Country, state, and county codes</title>

<para>SMOKE uses a 6-digit integer code to identify a country, state (or province), and county (or other region) for a particular source. Most U.S. inventories input to SMOKE have the 5-digit U.S. Federal Implementation Planning Standards (FIPS) state and county codes. All inventory input formats have been adapted to include a special header record with which you can specify the country, effectively allowing the inventories to be provided with the 6-digit code that SMOKE uses. The 6-digit system was designed for use in the United States with states and counties, as well as Canada and Mexico, but it can be adapted for other uses. The format used by SMOKE for the codes is as follows:</para>

<informaltable>
<tgroup cols="3">
<tbody>
<row>
<entry>C</entry>
<entry>SS</entry>
<entry>YYY</entry>
</row>
<row>
<entry>Country</entry>
<entry>State</entry>
<entry>County</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>The SMOKE installation is set up to use U.S.-centered codes as defined in the COSTCY file, which contains the codes and their associated names and time zone settings. In this file, the U.S. country code is zero, which allows the U.S. country/state/county codes to be the same as the FIPS state/county codes that appear in U.S. inventories. See Chapter 3 for more information about the default COSTCY file that comes with the SMOKE installation, and Chapter 8 for more information on the COSTCY file format.</para>

<para>To change the meaning of the country, state, or county codes in SMOKE, the COSTCY file must be modified to use different names associated with each country, state, and/or county number. All SMOKE input files must also use this new numbering scheme, including inventory files and cross-reference files.</para>

<para>Acceptable values in SMOKE for the country code are 0 through 9. Acceptable values of the state code are 1 through 99. Acceptable values of the county code are 1 through 999. No alphabetic codes are accepted, since SMOKE stores these values as integers.</para>

</section>

<section>

<title>Source Classification Codes</title>

<para>EPA uses Source Classification Codes (SCCs) and area and mobile source (AMS) codes to classify different types of anthropogenic emission activities. SCCs have 8 digits for point sources, while AMS codes have 10 digits, and sometimes include a leading "A" as an eleventh character. In SMOKE, we refer to both kinds of codes as "SCCs," and we ignore the leading "A" in the area and mobile codes. Additionally, SMOKE permits the nonpoint and point toxics inventories to use both 8-digit and 10-digit SCCs in the same inventory input file, because both 8- and 10-digit codes are contained in the nonpoint and point inventories in the 1999 NEI for HAPs. The maximum field width in SMOKE and its input files for SCCs is 10 characters.</para>

<para>The codes use a hierarchical system in which the definition of the code gets increasingly more specific as you move from left to right. It is important to understand the hierarchy of the codes, because you can take advantage of the hierarchy in building cross-reference files for assigning emissions processing factors to inventory emission sources. In the diagrams below, level 1 is the least specific and level 4 is the most specific.</para>

<para>The code structure for the 8-digit point-source codes is:</para>

<informaltable>
<tgroup cols="4">
<tbody>
<row>
<entry>A</entry>
<entry>BB</entry>
<entry>CCC</entry>
<entry>DD</entry>
</row>
<row>
<entry>Level 1</entry>
<entry>Level 2</entry>
<entry>Level 3</entry>
<entry>Level 4</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>An example point-source activity and corresponding SCC can be taken directly from SMOKE's SCC description file (SCCDESC): "External Combustion Boilers; Electric Generation; Lignite; Spreader Stoker" is represented by 10100306. Below we have mapped the levels of this description with the levels of the SCC:</para>

<informaltable>
<tgroup cols="4">
<tbody>
<row>
<entry>1</entry>
<entry>01</entry>
<entry>003</entry>
<entry>06</entry>
</row>
<row>
<entry>External Combustion Boilers</entry>
<entry>Electric Generation</entry>
<entry>Lignite</entry>
<entry>Spreader Stoker</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Similarly, the code structure for the 10-digit area- and mobile-source codes is:</para>

<informaltable>
<tgroup cols="4">
<tbody>
<row>
<entry>AA</entry>
<entry>BB</entry>
<entry>CCC</entry>
<entry>DDD</entry>
</row>
<row>
<entry>Level 1</entry>
<entry>Level 2</entry>
<entry>Level 3</entry>
<entry>Level 4</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>For more information on SCCs, please refer to <ulink url="http://www.epa.gov/ttn/chief/codes/" />. An "SCC Readme" file is provided on that web site that further explains the codes.</para>

<para>SMOKE treats SCCs as character strings, though in practice the values in the inventories and cross-reference files are usually numeric. In a later section on cross-references and profiles, we explain how these hierarchies are used by SMOKE and how you should use them in preparing SMOKE input files.</para>

<para>For on-road mobile sources, SCCs are treated somewhat differently than for other source categories. We explain more about this in a later section.</para>

</section>

<section>

<title>Standard Industrial Classification codes</title>

<para>Although SIC codes are being replaced by NAICS codes in building emission inventories at EPA, SIC codes are still used in emissions processing. These 4-digit codes use a 2-level hierarchy that is recognized by SMOKE for application of growth, control, and chemical speciation factors. The two code levels are illustrated below. More information on SIC codes is available at <ulink url="http://www.osha.gov/oshstats/sicser.html" />.</para>

<informaltable>
<tgroup cols="2">
<tbody>
<row>
<entry>AA</entry>
<entry>BB</entry>
</row>
<row>
<entry>Level 1</entry>
<entry>Level 2</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

<section>

<title>Maximum Achievable Control Technology codes</title>

<para>The following quote explaining MACT codes was taken from EPA's web site <ulink url="http://www.epa.gov/ttn/chief/codes/mact.txt" /> to explain what MACT codes are and why they are used in some inventories and not others:</para>

<blockquote>
<para>To evaluate EPA's progress in reducing air toxic emissions through the Maximum Achievable Control Technology (MACT) standards and to identify sources that may be modeled as part of residual risk assessments, operations within facilities that are subject to MACT standards are identified in the NTI by 4-digit MACT codes. <emphasis>[note that the term NTI (National Toxics Inventory) has since been replaced with NEI and that the codes are now 6 digits]</emphasis></para>

<para>A MACT category is one for which emissions limitations have been or are being developed under Section 112(d) of the Clean Air Act (National Emissions Standards for Hazardous Air Pollutants).  EPA sets source category, technology based standards through its MACT program that sharply reduce emissions of HAPs. EPA's ATW web site includes information on the MACT source categories and the MACT program (www.epa.gov/ttn/atw/eparules.html). The tagging of data with MACT codes allows EPA to determine reductions attributable to the MACT program. The NTI associates MACT codes corresponding to MACT source categories with stationary major and [section-112] area source data.  MACT codes are assigned at the process level or at the site level in the point source data, e.g., the MACT code for municipal waste combustors (MWCs) is assigned at the site level whereas the MACT code for petroleum refinery catalytic cracking is assigned at the process level. MACT codes are also assigned to source categories in the nonpoint source file.</para>
</blockquote>

<para>In SMOKE, MACT codes are treated as 6-character strings, with no internal hierarchy associated with the number.</para>

</section>

<section>

<title>Source types: major and section-112 area sources</title>

<para>For point and nonpoint toxics inventories, each source can be labeled as "major" or "section-112 area" for input to SMOKE (the following paragraph explains how the term "area" can be applied to a point-source inventory). The Clean Air Act defines major sources as those stationary facilities that emit or have the potential to emit 10 tons per year or more of any one toxic air pollutant or 25 tons per year or more of any combination of toxic air pollutants. Section-112 area sources include facilities that have air toxics emissions below the major source threshold as defined in Section 112 of the Clean Air Act and thus emit less than 10 tons per year of a single toxics air pollutant or less than 25 tons per year combined of multiple toxics air pollutants. Another source type exists in principle for nonpoint sources: the "other" source type; an example of this source type is wildfires. However, these source types are not labeled differently from the section-112 area sources in the nonpoint toxics inventories, so the "other" source type has not been included in SMOKE to date.</para>

<para>A note about the confusing use of "area" terminology to describe point sources: The designation of sources in the point inventories as section-112 area sources has no relationship whatsoever to SMOKE's area processing category. The point sources that are section-112 area sources are still processed by SMOKE as point sources using a lat-lon location and stack parameters.</para>

<para>In practice, all "major" sources should appear only in the point toxics inventory, but in some cases, "major" sources have shown up in the nonpoint inventory (specifically in inventory year 1996, in the July 2001 version of that inventory). Thus, the source type designation is provided in both the point and nonpoint toxics input formats.</para>

<para>The major and section-112 area designations are used when applying MACT-based control factors. These control factors are assigned based on a source's MACT code and may be applied to major sources only, to section-112 area sources only, or to both types of sources regardless of designation.</para>

</section>

</section>

</section>

<section>

<title>Cross-referencing and profiles</title>

<para>The emission inventories can contain hundreds of thousands or even millions of sources. Collecting specific information for each source about its temporal allocation, chemical speciation, and spatial allocation is not practical. Therefore, a part of emissions processing involves assuming that many sources share the same factors for these major processing steps. For example, we apply monthly, day-of-week, and hourly temporal factors (called profiles) to convert from an annual emissions value to an hour-specific emissions value. A limited set of monthly, day-of-week, and hourly diurnal profiles are available from various studies, and these profiles each have their own unique profile number (also called profile code or profile ID). This limited set of profiles is assigned to the much more numerous inventory sources using an approach called cross-referencing, which is implemented using cross-reference files.</para>

<para>The cross-reference files assign the profiles based on source characteristics such as country, state, and county codes and/or SCCs, using the profile numbers to associate source characteristics with the profiles. While the profile numbers are unique in the profile files, they will appear many times in the cross-reference--this is how SMOKE is able to group the sources to treat them in the same manner. This approach is used for temporal allocation profiles, chemical speciation profiles and the spatial "profiles," which are called spatial (or gridding) surrogates.</para>

<para>The cross-reference tables are applied to the sources in a stepwise manner, such that the most specific entry available is always applied. For example, if a cross-reference entry were available that matched a source by state, county, and SCC, SMOKE would apply that entry instead of a different cross-reference entry that matched that source only by SCC. The hierarchy that describes how each cross-reference file is applied to the inventory is described in Chapter 6.</para>

<para><xref linkend="ch02_xref" /> provides a generic example of how cross-reference files and profile files work together. In the example, the profile to be used for most of North Carolina is profile ID 16. Durham and Orange counties, however, are assigned profile 15, which would be preferentially applied to all sources in Durham and Orange counties, instead of using the general North Carolina profile. South Carolina sources would be assigned profile 17.</para>

<figure id="ch02_xref">
<title>Generic example of how cross-reference files and profiles work together.</title>

<mediaobject>
<imageobject>
<imagedata fileref="images/ch02_xref.png" />
</imageobject>
</mediaobject>
</figure>

<para>This example does not correspond to a particular processing step (i.e., temporal allocation, chemical speciation, or spatial allocation), but rather assigns generic "factors" from profiles 15, 16, and 17 based on the state and county information in the cross-reference file. (Note that we have used the state and county names in this example, whereas real cross-reference files would use the country, state, and county codes according to the file format of the actual cross-reference files.)</para>

<para>SMOKE handles cross-references and profile application in a very efficient manner. In reading a cross-reference file, SMOKE first sorts the cross-reference entries using the same sort criteria as are used for the inventory sources (e.g. by country/state/county code, then by SCC, then by remaining source characteristics if any). Next, the cross-reference entries are grouped according to the "level" of matching of each of the entries. For example, all entries that could match to the inventory using only state and county codes would be in one group, while entries that could match to the inventory using only SCCs would be in another group. Once the cross-reference entries are grouped, SMOKE processes each sources in the inventory, and attempts to find a matching entry in one of the cross-reference groups. The most specific groups are searched first, and when a match is found for a particular source, the other groups are not searched. This helps increase efficiency. In addition, because the cross-reference entries are sorted within each group, an efficient searching algorithm can be used for each individual search. When a match to one of the cross-reference groups has been found, SMOKE continues to the next source in the inventory until all sources have been processed.</para>

<para>Cross-references and profiles are used in the following SMOKE processing steps. These steps and their associated programs (listed in parentheses) will be described in the sections to come.</para>

<itemizedlist>
<listitem>Inventory import (Smkinven)
    <itemizedlist>
    <listitem>cross-references: NHAPEXCLUDE, VMTMIX, PSTK, ARTOPNT</listitem>
    <listitem>profiles: none (factors are included in the cross-reference files when needed)</listitem>
    </itemizedlist>
</listitem>
<listitem>Temporal allocation (Temporal)
    <itemizedlist>
    <listitem>cross-references: ATREF, MTREF, PTREF</listitem>
    <listitem>profiles: ATPRO, MTPRO, PTPRO</listitem>
    </itemizedlist>
</listitem>
<listitem>Chemical speciation (Spcmat)
    <itemizedlist>
    <listitem>cross-references: GSREF, GSCNV</listitem>
    <listitem>profiles: GSPRO</listitem>
    </itemizedlist>
</listitem>
<listitem>Spatial allocation (Grdmat)
    <itemizedlist>
    <listitem>cross-references: AGREF, MGREF</listitem>
    <listitem>profiles: AGPRO, MGPRO</listitem>
    </itemizedlist>
</listitem>
<listitem>Growth and controls (Cntlmat)
    <itemizedlist>
    <listitem>cross-references: GCNTL</listitem>
    <listitem>profiles: none (factors are included in the cross-reference files)</listitem>
    </itemizedlist>
</listitem>
<listitem>Mobile-source speed assignment (Mbsetup, Emisfac)
    <itemizedlist>
    <listitem>cross-references: SPDREF</listitem>
    <listitem>profiles: SPDPRO</listitem>
    </itemizedlist>
</listitem>
<listitem>Mobile-source temperature preprocessing (Mbsetup)
    <itemizedlist>
    <listitem>cross-references: MCREF, MVREF</listitem>
    <listitem>profiles: none needed (used for grouping sources)</listitem>
    </itemizedlist>
</listitem>
</itemizedlist>
    
<para>The hierarchies that each SMOKE program uses to assign cross-reference entries to sources are provided in Chapter 6, where the programs are described at length. The file contents and formats are described in more detail in Chapter 8.</para>

</section>

<section>

<title>Input and output file types</title>

<para>Before we describe more about the SMOKE processing, we first need to explain the types of files you will encounter in this documentation. SMOKE primarily uses two types of file formats: ASCII files and I/O API files. In addition, the output file format for the UAM-based air quality model is a Fortran binary file format. Chapters 8-10 describe all input, intermediate, and output files, including the file format for each one. Input files are files that are read by at least one "core" SMOKE program (listed in Chapter 6), but are not written by a core program. Intermediate files are files that are written by a core program and read by at least one other core program. Output files are files output by a SMOKE core program but not read by any of them; these files include reports, log files, and the model-ready files to be input to an air quality model. (Exception: one intermediate file [used by a core program] is also an output file [used by an AQM]: the STACK_GROUPS file, described in Chapter 10.) In this section, we further describe the ASCII and I/O API files, and then provide information about the two approaches for formatting the model-ready output files produced by SMOKE (the CMAQ/Models-3 approach and the UAM-based approach).</para>

<para>SMOKE's input files are primarily ASCII files, although a few I/O API files are used. The intermediate files in SMOKE are primarily I/O API files, although there are several important ACSII files as well. The output files from SMOKE are primarily I/O API files and Fortran binary files for model-ready emissions files, and ASCII files for reports and logs.</para>

<section>

<title>ASCII files</title>

<para>ASCII files are simply the text files with which most computer users are familiar. The ASCII files input by SMOKE come in two structures: <emphasis>column-specific</emphasis> and <emphasis>list-directed</emphasis>. In column-specific files, the fields in the files must appear in certain columns in the file. Each character on a line represents a single column. For example, if the diagram below represents a left-justified entry in a data set:</para>

<remark>original had picture here</remark>

<para>then the letters T-E-S-T are in columns 1 through 4 of the file:</para>

<remark>original had picture here</remark>

<para>In list-directed files, the exact positioning of the fields on a line is not important, but the order of the fields on that line is crucial. The fields must be delimited (separated) by special characters called delimiters; in SMOKE, valid delimiters are <emphasis role="bold">spaces</emphasis>, <emphasis role="bold">commas</emphasis>, or <emphasis role="bold">semicolons</emphasis>. If a particular field happens to contain any of these delimiters within it, then that field must be surrounded by single or double quotes in the input file.</para>

</section>

<section>

<title>I/O API files</title>

<para>I/O API files are read and written by the I/O API library used by SMOKE and other Models-3 programs. A library is a set of programs that have been created and compiled for use by multiple programs. The I/O API library, in turn, is built upon yet another library called the NetCDF library. For this reason, I/O API files are also referred to as I/O API NetCDF files. More information on both of these libraries is available at <ulink url="http://www.baronams.com/products/ioapi/" />. Chapter 12 contains instructions for obtaining the I/O API and NetCDF libraries.</para>

<para>The I/O API files cannot be viewed with a text editor because they are binary files. These binary files use less disk space than ASCII files containing the same data. They also allow much more efficient input and output of the data, and the I/O API library provides many quality assurance (QA) features useful for all input and output (I/O), including I/O for emissions processing.</para>

<para>The basic I/O API file has a limitation of 120 variables per file. To overcome this, SMOKE uses a wrapper called the FileSetAPI that creates and manages multiple I/O API files when more than 120 variables are needed in a single I/O API dataset in SMOKE. For example, if the SMOKE speciation matrix requires 140 pollutant-to-species variables, SMOKE will open by default two standard I/O API files: one with 120 variables and one with 20 variables. This resulting "file set" will be treated by other SMOKE programs as a single file, which enables processing of any number of pollutants and species in a single run, despite the I/O API variable limitation.</para>

<para>Some I/O API files can be viewed by the Package for Analysis and Visualization of Environmental data (PAVE). In SMOKE, any gridded output file from the Smkmerge, Mrggrid, or Smk2emis programs can be viewed by PAVE.</para>

<para>In some cases, it can be helpful to directly view the contents of the I/O API files in text form. This provides a quick way to check grid settings, time period, or species names in the model-ready output files. By viewing the text version of the model-ready output files produced by SMOKE, you can easily confirm that the correct species have been created or that the emission units are correct. To convert the I/O API files to text, one can use a combination of the NetCDF-provided <command>ncdump</command> utility and UNIX commands. The ncdump utility is created when you compile the NetCDF library, or you can download it from the NetCDF web site. The command to convert the files to text format is:</para>

<para><userinput>ncdump &lt;infile&gt; | cut -c1-80 &gt; &lt;outfile&gt;</userinput></para>

<para>Replace the &lt;infile&gt; in the command above with your input I/O API file name, and the &lt;outfile&gt; with your desired ACSII output file name. The output file contains all the applicable data stored in the I/O API file including grid information, time period, variable names, etc.</para>

</section>

<section>

<title>Model-ready files</title>

<para>SMOKE supports two major approaches for formatting its output files that are used as inputs to air quality models (i.e., model-ready files): the CMAQ/Models-3 approach and the UAM-based approach. The CMAQ/Models-3 approach is used for the CMAQ and MAQSIP models, and the UAM-based approach is used for the UAM models, REMSAD, and CAM<subscript>X</subscript>.</para>

<para>The CMAQ/Models-3 approach uses one required 3-D I/O API file that contains the gridded, hourly, speciated, and vertically distributed emissions. In SMOKE, it is called the EGTS3D_L file. To create the 3-D model-ready emissions file, SMOKE computes plume rise for some or all point sources. For CMAQ, two additional optional files can be provided for plume-in-grid (PinG) processing. The first must contain locations and stack parameters for PinG sources and is called the STACK_GROUPS file. The second must contain the hourly, speciated emissions for the same PinG sources in a file called the PINGTS_L file. The MAQSIP model does not support PinG sources.</para>

<para>The UAM-based approach has two required files: (1) a 2-D emissions Fortran binary file with all sources other than point sources and all low-level point sources, and (2) an elevated-point-source Fortran binary file. The SMOKE program Smk2emis can create the 2-D emissions Fortran binary file (called the UAM_EGTS file) by converting a 2-D EGTS_L file from an I/O API format. To obtain the elevated-point-source Fortran binary file, the SMOKE program Smkmerge can create an ASCII elevated-point-source file, which can then be converted to the required binary format using the UAM preprocessor PTSRCE.</para>

</section>

</section>

<section>

<title>Modeling parameters</title>

<para>Emissions modeling requires information about the subsequent air quality modeling that will be done. For example, to produce appropriate model-ready files using SMOKE, you must know which AQM will be used, the model grid and map projection, the episode dates, and the chemical mechanism to be used. In this manual, we refer to these settings collectively as "modeling parameters." In this section, we provide information on what these modeling parameters are and SMOKE's capabilities to support them.</para>

<para>SMOKE reads in the modeling parameters from both script settings (environment variables) and input files. In the subsections below, we provide the relevant settings and files that control the modeling parameters. More information about how to configure your scripts and files to change these parameters can be found in Chapter 4; how the settings affect the programs is described in Chapters 5 and 6.</para>

<section>

<title>Map projections and model grids</title>

<para>A map projection is the mathematical representation of the spherical surface of the earth on a 2-D plane. SMOKE supports Lambert conformal, lat-lon, and UTM map projections. There are many different settings that you may use to define your Lambert conformal and UTM projections, to make these projections match the one being used by your meteorology model and AQM.</para>

<para>A model grid is a two-dimensional region overlaid on a map projection. It is defined by the starting <emphasis>x-y</emphasis> coordinates, the number of grid cells in each direction, and the physical size of the grid cells. Figure 2-2 shows an example of a model grid that includes most of the eastern U.S. This example has 81 grid cells in the <emphasis>x</emphasis>-direction and 75 in the <emphasis>y</emphasis>-direction. Each set of 10 cells by 10 cells (counting from the starting coordinates) is enclosed in black grid lines.</para>

<remark>insert picture of grid here</remark>

<para>The model grid is set in SMOKE using the IOAPI_GRIDNAME_1 setting to select a grid and map projection from among those defined in the GRIDDESC input file. The name of the grid set with the IOAPI_GRIDNAME_1 setting must match a grid name in the GRIDDESC file to allow SMOKE to obtain the grid and map projection parameters from the GRIDDESC file.</para>

</section>

<section>

<title>Base year and past/future years</title>

<para>For any modeling effort, the emissions base year and future year are key modeling parameters needed for performing emissions processing. The base year is usually the year for which the air quality model is being run in order to compare modeling results with observed air quality data. Such comparisons allow modelers to tune the emissions data and air quality model, to ensure that the AQM is performing adequately during the modeling episode.</para>

<para>The base year is most often a year for which an emission inventory is available. This is usually the same year for which the meteorology model has been run to prepare input to SMOKE and an AQM and for which air quality observations are available. Of course there are exceptions to this principle, but generally that is how one establishes a base year. <remark>At the time of this writing, versions of the 1996 criteria and particulate inventory and 1999 criteria, particulate, and toxics inventories are available from EPA.</remark></para>

<para>Several different files and settings are used to set the base year in SMOKE, each of which should be consistent with each other for ideal results.</para>

<itemizedlist>
<listitem>
<para>The YEAR setting in the SMOKE Assigns file is the reference point used by the scripts to determine the base year and set the names of various year-specific input files.</para>
</listitem>
<listitem>
<para>The episode and run settings (sec Section 0) determine the base year that will be used in the model-ready output files. This base year must match the YEAR setting so that the correct input files are used.</para>
</listitem>
<listitem>
<para>The input emissions files should ideally contain data for the same base year, and the #YEAR header setting in those files should be consistent with the YEAR environment variable in the Assigns file. If the years in the annual inventory files are not consistent with each other, SMOKE will determine the year used by the most sources and set that as the base year. If day-specific or hour-specific data are used, all years in those files must be consistent with the base year of the annual emissions.</para>
</listitem>
<listitem>
<para>The MOBILE6 input data, if they are being used, should also be consistent with the base year. SMOKE is capable of running MOBILE6 with inputs from a different year, but certain inputs may not be correct.</para>
</listitem>
<listitem>
<para>Finally, the dates in the I/O API meteorology data from the Meteorology-Chemistry Interface Processor (MCIP) must be consistent with both the base year and the episode and run settings.</para>
</listitem>
</itemizedlist>

<para>The future year is a chosen year in the future for which a modeler needs to run an air quality model--for example, to model the future effects of particular emission control strategies. To model a future year with SMOKE, you must have either an inventory that has been computed for a future year, or growth and control factors to project the base-year inventory to the future year. The settings and files that must be considered are as follows:</para>

<itemizedlist>
<listitem>
<para>The setting FYEAR is set in the run script and is used by the script to automatically assign the name of the Cntlmat input file GCNTL (see Chapter 4), which contains the growth factors. FYEAR must be set to the future year even if a future-year inventory is not being created because it has already been provided to you.</para>
</listitem>
<listitem>
<para>If you already have a future-year inventory and so do not need to use SMOKE to project one from the base year inventory, then the emissions data year should match the future year, and the #YEAR header in the inventory file must match that year as well. In this case, the SMK_BASEYR_OVERRIDE setting should also be used to indicate what the base year is (which will be the same as the year of the meteorology data).</para>
</listitem>
<listitem>
<para>The MOBILE6 input data, if they are being used, must also include the correct settings for the future year of interest.</para>
</listitem>
<listitem>
<para>The episode and run settings, meteorology files, and day- or hour-specific inventories should <emphasis>not</emphasis> match the future year, but rather should use the base-year episode dates.</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>Modeling episodes</title>

<para>The modeling episode is the total time period for which you will run SMOKE and your AQM. Unless the episode is just a few days long, users typically set up SMOKE to create emissions files of a shorter duration than their modeling episode, often creating one-day files for each day of their episode. Though SMOKE can create a single file for an entire episode, the file often becomes too large for some computers to handle (the limit for 32-bit operating systems is 2 GB files), so necessity rather than preference dictates that smaller files (usually one-day files) be created by SMOKE. We use the term "run period" to distinguish between these shorter durations and the full modeling episode; unless otherwise noted, we will assume that the run period is one day. For example, a typical SMOKE episode might cover July 1, 1996 through July 31, 1996. There will be 31 run periods (days) within this episode, the first starting on July 1, 1996 and the last starting on July 31,1996.</para>

<para>In the SMOKE Assigns file, there are several settings that you need to change to cause SMOKE to create emissions for the episode of interest. Chapter 4 provides more guidance on the particular form and approaches needed for using these settings.</para>

<itemizedlist>
<listitem>
<para>The episode start date (EPI_STDATE), episode start time (EPI_STTIME), episode duration in hours (EPI_RUNLEN), and the episode number of days (EPI_NDAY) all must be set to cover the modeling episode. Note that SMOKE can only be run for periods contained within a single calendar year. It cannot, for example, start in December of 1996 and run through January of 1997. Two separate episodes would need to be set up in this case, with the first ending on December 31, 1996, and the second starting on January 1, 1997.</para>
</listitem>
<listitem>
<para>The start date of the first run period needs to be set using the G_STDATE and ESDATE settings. The G_STDATE is the year and Julian day setting used by the SMOKE programs; in our example above, G_STDATE would be set to 1996183, since July 1 is the 183rd day of 1996. The ESDATE is the Gregorian date used in naming the SMOKE intermediate and output files; for our example, ESDATE would be 19960701. The SMOKE scripts will use the EPI_NDAY setting to automatically loop through the number of run periods in the episode, starting with the first G_STDATE value in the Assigns file. The G_STDATE and ESDATE settings are changed for each run period.</para>
</listitem>
<listitem>
<para>The run period start time (G_STTIME) and duration (G_RUNLEN) must also be set to indicate the start time and length of each run period. Both values are provided as a number of hours, using a HHMMSS (hours, minutes, seconds) format.</para>

<para>The run period duration (G_RUNLEN) is usually not the same as the episode duration (EPI_RUNLEN). For example, if the episode length is 30 days (720 hours), the run period duration setting could be just 1 day (25 hours), 2 days (49 hours), or three days (73 hours) (the reason for the extra hour in each case is explained below). In the first case, SMOKE would create thirty 25-hourfiles; in the second case, fifteen 49-hour files; and in the third case, SMOKE would create ten 73-hour files.</para>
</listitem>
<listitem>
<para>The NDAYS, MSDATE, and MDAYS settings are used for naming files. The NDAYS setting should be set to the number of days in each run period, and is used by default for naming time-based files. The NDAYS setting is also used along with the EPI_NDAY setting to loop through the run periods in the episode. The MSDATE and MDAYS settings can be used for naming the meteorology input files, but are not being used by the default Assigns files provided with SMOKE.</para>
</listitem>
</itemizedlist>

<para>There are a few key things to remember when you are verifying that you have the correct episode settings:</para>

<itemizedlist>
<listitem>
<para>SMOKE cannot process emissions over a calendar-year break. Thus, the longest run that can be done is for 365 days, with the episode start date being January 1. If a modeling episode spans multiple years, then a different Assigns file, script, and sets of input files must be created for each year.</para>
</listitem>
<listitem>
<para>The AQMs supported by SMOKE always need one extra hour in each emissions input file due to how they calculate boundary conditions. Therefore, if you are inputting emissions to run a 24-hour period, the G_RUNLEN setting should be 250000 for 25 hours.</para>
</listitem>
<listitem>
<para>The CMAQ, REMSAD, and CAM<subscript>X</subscript> models can accept emissions files for multiple days, but the UAM must have 25-hour files only. As stated earlier, however, all of these models are often run using 25-hour files, with one file for each day of the episode.</para>
</listitem>
<listitem>
<para>All times are associated with a time zone, including the episode and run period start time settings. These settings must be consistent with the time zone of the meteorology files. If the meteorology data were created using MM5, the time zone is most likely Greenwich Mean Time (GMT); therefore, the EPI_STDATE, EPI_STTIME, G_STDATE, and G_STTIME settings would have to be provided in that same time zone. Whatever time zone is inherent in the meteorology files and these date settings will also be the time zone of the dates and times in the output emissions files from SMOKE. This ensures that the dates and times of the emissions and meteorology files are consistent for input to the AQM.</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>Chemical mechanisms</title>

<para>SMOKE can accommodate a variety of chemical mechanisms for the models it supports. From the emissions processing perspective, the chemical mechanism is the mapping of the pollutants provided in the emissions inventory to the species needed by the AQM of interest. For example, SMOKE can support by default five chemical mechanisms for the CMAQ model: Carbon Bond 4 (CB4), CB4 with particulates, Regional Acid Deposition Model, 2 (RADM2), RADM2 with particulates, and an early research version of CB4 with toxics. Note that the early version of CB4 with toxics has already been changed to an updated research version during the writing of this manual. The default version of SMOKE will not be able to support this newer version; however, as described in the next paragraph, it is possible to run SMOKE for the newer research version, as well as for any other chemical mechanism. For example, there are versions of CMAQ available at EPA that include mercury species as additional species in several of the chemical mechanisms.</para>

<para>In Chapter 4, we provide the settings needed in the Assigns file in order to use one of the default chemical mechanisms with SMOKE. However, SMOKE is not constrained to the default mechanisms provided with it. If you need to process other data (e.g., a tracer species) with SMOKE, they can be added to several input files, including the chemical mechanism file, to be output to the AQM. Some additions to chemical mechanisms are easier than others, and we explain in Chapter 4 how to determine whether you can create the files you need for your situation. Also in Chapter 4, we give instructions on how add species to the chemical mechanism files and how to make sure that the inventory pollutants are mapped to the correct chemical species.</para>

<para>SMOKE users must know what chemical mechanism will be used in the AQM for which the SMOKE output emissions are intended. Once that has been determined, the following files must be configured to be consistent with the inventory being used and the chemical mechanism: the inventory table (INVTABLE), speciation profiles (GSPRO), speciation cross-reference (GSREF), and the mobile processes file (MEPROC) when creating on-road mobile emissions with MOBILE6 through SMOKE.</para>

</section>

<section>

<title>Layer structures</title>

<para>SMOKE needs information on layer structures for processing elevated point sources' plume rise in the Laypoint program and creating the ASCII elevated-point-source file (ELEVTS_L or ELEVTS_O) with the Smkmerge program. The way SMOKE obtains the layer information differs depending on whether you are creating emissions using a CMAQ-based or UAM-based approach <remark>(see Section 0)</remark>. For the CMAQ-based approach, SMOKE determines the layer structure from the structure included in the header of the GRID_CRO_3D meteorology file. For the UAM-based approach, SMOKE does not really need to know the layer structure, except to output it to the ASCII elevated-point-source file. In this case, there are many settings obtained by Smkmerge from environment variable names starting with UAM_. These appear in the REMSAD run scripts provided with SMOKE and must be set to be consistent with the layer information expected by UAM, CAM<subscript>X</subscript>, or REMSAD.</para>

</section>

</section>

<section>

<title>Sparse matrix approach to emissions modeling</title>

<para>The paradigm for atmospheric emissions models prior to SMOKE was a network of pipes and filters. This means that at any given stage in the processing, an emissions file includes self-contained records describing each source and <emphasis>all</emphasis> of the attributes acquired from previous processing stages. Each processing stage acts as a filter that inputs a stream of these fully-defined records, combines it with data from one or more ancillary files, and produces a new stream of these records. Redundant data are passed down the pipe at the cost of extra I/O, storage, data processing, and program complexity. Using this method, all processing is performed one record at a time, without necessarily a structure or order to the records.</para>

<para>This old paradigm came about as a way to avoid repeatedly searching through data files for needed information, which would be very inefficient. It is admirably suited to older computer architectures with very small available memories and tape-only storage, but is not suitable for current desktop machines or high-performance computers. SMOKE developers demonstrated this when the Emissions Preprocessor System (EPS) 2.0 was run on a Cray Y-MP. It ran four times slower on the Cray machine (a much faster computer) than on a desktop 150MHZ DEC Alphastation 3000/300. This paradigm also fostered a serial approach to the emissions processing steps, as shown in Figure 2-3.</para>

<remark>figure</remark>

<para>The new paradigm implemented in SMOKE came about from analyses indicating that emissions computations should be quite adaptable to high-performance computing if the paradigm were appropriately changed. For each SMOKE processing category (i.e., area, biogenic, mobile, and point sources), the following tasks are performed:</para>

<itemizedlist>
<listitem>
<para>read emissions inventory data files;</para>
</listitem>
<listitem>
<para>optionally grow emissions from the base year to the (future or past) modeled year (except biogenic sources);</para>
</listitem>
<listitem>
<para>transform inventory species into chemical mechanism species defined by an AQM;</para>
</listitem>
<listitem>
<para>optionally apply emissions controls (except for biogenic sources);</para>
</listitem>
<listitem>
<para>model the temporal distribution of the emissions, including any meteorology effects;</para>
</listitem>
<listitem>
<para>model the spatial distribution of the emissions;</para>
</listitem>
<listitem>
<para>merge the various source categories of emissions to form input files for the AQM; and</para>
</listitem>
<listitem>
<para>at every step of the processing, perform quality assurance on the input data and the results.</para>
</listitem>
</itemizedlist>

<para>Each processing category has its particular complexities and deviations from the above list<remark>; these are described in Section 2.8</remark>. For all categories, however, most of the needed processing steps are <emphasis>factor-based</emphasis> - that is, they are linear operations that can be represented as multiplication by matrices. Further, some of the matrices are <emphasis>sparse</emphasis> matrices (i.e., most of their entries are zeros).</para>

<para>SMOKE is designed to take advantage of these facts by formulating emissions modeling in terms of sparse matrix operations, which can be performed by optimized sparse matrix libraries. Specifically, the inventory emissions are arranged as a vector of emissions sorted in a particular order, with associated vectors that include characteristics about the sources such as the state/county and SCCs. SMOKE then creates matrices that apply the gridding, speciation, and temporal factors to the vector of emissions. In many cases, these matrices are independent from one another, and can therefore be generated in parallel and applied to the inventory in a final "merge" step, which combines the inventory emissions vector (now an hourly inventory file) with the control, speciation, and gridding matrices to create model-ready emissions. Figure 2-4 shows how the matrix approach allows for a more parallel approach to emissions processing, in which fewer steps depend on other needed steps.</para>

<para>Note that in Figure 2-4, temporal allocation outputs hourly emissions instead of a temporal matrix. This is because of some peculiarities with temporal modeling for point sources, which can use hourly emissions as input data. To be able to overwrite the inventory emissions with these hourly emissions, the temporal allocation step must output the emissions data. The matrix approach is used internally in the temporal allocation step.</para>

<remark>figure</remark>

<para>Several benefits can be realized from this more parallel approach. For example, given a single emissions inventory, temporal modeling is performed only once per inventory and episode (though in practice, this step is often performed once per episode day). Also, gridding matrices typically need only be calculated once per inventory and model grid definition, without having to reprocess other steps. As shown in Figure 2-5, SMOKE usually needs to rerun only the gridding and merge steps to process a different grid for the same inventory. The merge step in the figure will read the previously created results from the temporal allocation, chemical speciation, and control processing steps.</para>

<remark>figure</remark>

<para>In addition, speciation matrices need only be calculated once per inventory and chemical mechanism. Similar to the gridding example, Figure 2-6 shows the SMOKE steps that generally need to be rerun for running an additional chemical mechanism.</para>

<remark>figure</remark>

<para>A final example of how this approach is beneficial is processing with a control strategy. Because of SMOKE's parallel processing, changing a control strategy requires only the control and merge steps to be processed again (Figure 2-7). In serial processing, on the other hand, the growth and controls step occurs as the second processing step, which requires that all downstream steps be redone. In Figure 2-6, the speciation, temporal allocation, and gridding steps have already been run, and can be fed to the merge step without being altered or regenerated.</para>

<remark>figure</remark>

<para>Although SMOKE processing generally follows the structure shown in Figures 2-4 through 2-7, there are some exceptions. In the list below, we summarize these exceptions and provide references to the sections of this chapter where these exceptions are explained and shown through diagrams. <remark>These exceptions are also described in more detail in Sections 0 through 0.</remark></para>

<para><emphasis role="bold">On-road mobile processing with MOBILE6:</emphasis> One way of processing on-road mobile-source emissions is to have SMOKE run the MOBILE6 model based on hourly, gridded temperature data. To run a different grid or control strategy using this approach, users usually need to run a number of additional processing steps that we have not yet discussed. <remark>These differences from the standard processing approach are described in Section 0.</remark></para>

<para><emphasis role="bold">Biogenics processing:</emphasis> Biogenics processing uses different processors than those for anthropogenic sources. The emissions from biogenic sources are based on land use data and meteorology data instead of on actual emission inventories. <remark>For more information, please see Section 0.</remark></para>

<para><emphasis role="bold">Toxics processing for different chemical speciation mechanisms:</emphasis> Toxics processing may require some special processing steps during import of the inventory data when integrating the criteria and toxics inventories. This step depends on which chemical speciation approach is going to be used. Therefore, when changing the toxics speciation mechanism, it is sometimes necessary to rerun the data import step.</para>

<para><emphasis role="bold">Point-source processing for CMAQ or MAQSIP versus UAM, REMSAD, or CAMX:</emphasis> Point-source processing for CMAQ or MAQSIP uses some different programs than processing for UAM, REMSAD, or CAMX. In some cases, it may be necessary to rerun several programs in order to run for one model rather than another. <remark>Further details on this additional processing can be found in Section 0.</remark></para>

<para><emphasis role="bold">Adding hour-specific or day-specific point-source data:</emphasis> If you want to add hour-specific or day-specific point-source data after a point source run has already been performed, several processing steps must be rerun. <remark>Further details on this additional processing can be found in Section 0.</remark></para>

</section>

<section>

<title>Area, biogenic, mobile, and point processing summaries</title>

<section>

<title>Summary of SMOKE processing categories</title>

<para>Each SMOKE processing category is defined by its source <emphasis>characteristics</emphasis>, which correspond to the identifiers used in creating the emission inventory (e.g., state/county FIPS code and SCC). The processing categories also have source <emphasis>attributes</emphasis>, which are the other useful data in the emission inventories that SMOKE uses; examples are point-source flue gas exit height and temperature. Source characteristics <emphasis>define</emphasis> the sources as area, biogenic, mobile, or point sources and also distinguish one source in the inventory from another. Source attributes are additional data about the source that do not contribute to the source's uniqueness in SMOKE. We have previously described the data types and the data attributes that are contained in the inventories that SMOKE uses. In the subsections below, we summarize the source characteristics of area, biogenics, mobile, and point sources. Please refer to Table 2-1 for more information about how SMOKE processing categories map to the inventory source categories.</para>

<para>In SMOKE, each processing category is defined by source characteristics as follows:</para>

<para><emphasis role="bold">Area sources</emphasis> are defined by (1) country, state, and county codes, (2) SCCs, and (3) optionally, grid cell.</para>

<para><emphasis role="bold">Biogenic sources</emphasis> are defined differently depending on the type of processing you are using. They can be defined either by (1) country, state, and county codes and (2) land use code, or by (1) grid cell and (2) land use code.</para>

<para><emphasis role="bold">Mobile sources</emphasis> are defined by (1) country, state, and county codes, (2) SCCs, and optionally (3) link codes.</para>

<para><emphasis role="bold">Point sources</emphasis> are defined by (1) country, state, and county codes, (2) plant/facility codes, and (3) characteristics 1 through 5, one of which should be the SCC.</para>

</section>

<section>

<title>Area-source processing</title>

<para>In SMOKE, there are two major processing routes that you can take for area sources: the typical route and the pregridded data route. (Recall that by "area sources" in SMOKE we mean stationary area/nonpoint sources and nonroad mobile sources.)</para>

<section>

<title>Typical route</title>

<para>The typical route involves processing data identified by country/state/county codes and SCCs. The processing steps vary depending on whether you are doing base-case processing or future- or past-year processing. The steps for base-year processing are shown in Figure 2-8. In Figure 2-4, we also included the major intermediate vectors and matrices; please refer to that diagram for those details. The inventory import step reads the raw emissions data, screens them, processes them, and converts the raw data to the SMOKE intermediate inventory file (inventory vectors in Figure 2-3). The emissions in the inventory file are subdivided to hourly emissions during temporal allocation; assigned chemical speciation factors during speciation, and assigned spatial allocation factors during gridding. The merge step combines the hourly emissions, speciation matrix, and gridding matrix to create model-ready emissions.</para>

<remark>figure</remark>

<para>In Figure 2-9, we show the area-source processing steps for future- or past-year processing. This processing is similar to the base-year processing flow, except the inventory growth step is added to convert the inventory from the base year to a future or past year. Also, the controls step can be optionally run to apply control factors to the future- or past-year emissions. The steps shown with dashed lines represent steps that can be reused from the base-year processing because they do not depend on any of the new steps.</para>

<remark>figure</remark>

<para>Finally, inventory controls as well as growth can be applied at the front end of processing if such a scheme is needed (Figure 2-10). This method permits up to 80 growth and/or control matrices to be applied to an inventory, whereas the method shown in Figure 2-9 allows only one each of the multiplicative and reactivity control matrices in the merge step, although any number of projection matrices on the front end. The processing scheme shown in Figure 2-10 can therefore be useful when mixing and matching many control strategies for simulations.</para>

<remark>figure</remark>

<para>In sections later in this chapter, we describe the SMOKE programs that are needed for each of these processing steps and additional details about what activities are accomplished during each step. These sections are:</para>

<itemizedlist>
<listitem>Inventory import</listitem>
<listitem>Temporal allocation</listitem>
<listitem>Chemical speciation</listitem>
<listitem>Spatial allocation</listitem>
<listitem>Growth</listitem>
<listitem>Controls</listitem>
<listitem>Creating model-ready emissions</listitem>
<listitem>Quality assurance</listitem>
</itemizedlist>

<para>During the temporal allocation, speciation, gridding, growth, and control steps, the SMOKE programs use a cross-reference and profile approach. This approach involves comparing the source characteristics in the inventory with a more limited list of source characteristics or partial source characteristics (e.g., state-specific entries without SCC information), and matching the most specific entry in the cross-reference file to the inventory to assign the factors needed for a processing step. The factors are stored in separate files called profile files. <remark>This cross-reference and profile approach is described in more detail in Section 2.4.</remark></para>

</section>

<section>

<title>Pregridded data route</title>

<para>The second processing approach for area sources involves using pregridded data. <remark>As indicated in Section 0,</remark> area sources can be specified by grid cell instead of by country/state/county code and SCC. This optional approach to modeling area sources requires the inventory emissions data to be gridded prior to inventory import. The gridded area sources do <emphasis>not</emphasis> have country/state/county codes or SCCs, and can be provided via an I/O API time-independent gridded data file. Users are responsible for getting their data into this format, which is described in more detail in Chapter 8. The flow diagrams that describe this type of processing are identical to those in Figures 2-8 through 2-10. Although the gridding step is quite trivial when the grid cell numbers are already specified, the gridding step must still be run to create a gridding matrix required for the merge step.</para>

<para>The disadvantage of using pregridded emissions for area-source processing is that there are no country/state/county codes and SCCs to use in the cross-referencing of any processing step. Therefore, temporal profiles, speciation profiles, projection factors, and control factors must be applied uniformly across the model grid by pollutant.</para>

</section>

</section>

<section>

<title>Biogenic-source processing</title>

<para>SMOKE biogenic emissions modeling can be accomplished with two different approaches to the science used. The first is the Biogenic Emissions Inventory System, version 2 (BEIS2) approach, which uses an adaptation of the BEIS2 model that fits within the data flows of SMOKE and works compatibly with the meteorology and AQMs used with Models-3. The second approach uses version 3.09 of BEIS, which was developed as part of the SMOKE system and is therefore the original version of BEIS3. For either approach, the processing scheme is the same (Figure 2-11). The raw land use inventory data are imported and output as normalized emissions. Meteorology adjustments are then applied to the normalized emissions to create hourly model-ready emissions estimates.</para>

<remark>figure</remark>

<para>For BEIS2 processing, the land use import can start with either the county-total land use data or gridded land use data. In both cases, the land use import step produces the same gridded normalized emissions output file (BGRD), which contains gridded time-independent emissions for groups of land use biomass data. The emissions are computed using emission factors from either a summer or winter emission factor lookup table, which are specific to BEIS2. BEIS2 processing uses the BELD2 land use categories. It is also possible to use the BELD3 land use data in BEIS2 processing by applying the Beld3to2 SMOKE utility described in Chapter 5. Meteorology adjustments and a single chemical speciation profile are applied to these normalized emissions to calculate model-ready emissions.</para>

<para>For BEIS3 processing, the land use import can start only with gridded BELD3 land use data and uses BEIS3 summer and winter emission factors. Otherwise, the processing approach for BEIS3 is the same as for BEIS2, except for some of the details.</para>

<para>For both BEIS2 and BEIS3, a variation can be run on the processing steps shown in Figure 2-11 (see Figure 2-12). In this variation, some grid cells use summer emission factors and some use winter emission factors. This is useful during the changes of seasons. Based on guidance from EPA, the summer emissions factors are to be used for time periods after the last frost of the spring until the first frost of the fall, and winter emission factors should be used at other times of the year. To make such assignments by grid cell, it is necessary to analyze the meteorology data for the entire year (or the period of interest) to establish which days each grid cell should use winter and summer emission factors. The results of the meteorology analysis can then be used in the Figure 2-12 processing approach, in which both the summer and winter normalized emissions are provided to the meteorology adjustments step, along with the winter/summer switch file. The resulting model-ready emissions data have used the winter emission factors for all grid cells of the domain that have experienced the first freeze date of the year but not the last (within a calendar year, this is the time periods January through March and November through December in many regions), and the summer emission factors for all grid cells between the last and first freeze dates.</para>

<remark>figure</remark>

<para><remark>In Section 2.17 we describe the SMOKE programs that are needed for each of these processing types, and additional details about what activities are accomplished during each step.</remark></para>

</section>

<section>

<title>Mobile-source processing</title>

<para>SMOKE provides two ways of processing mobile sources. (Recall that by "mobile sources" in SMOKE we mean on-road mobile sources.) The first approach is to compute mobile emissions values prior to running SMOKE and provide them to SMOKE as input; we call this the precomputed-emissions approach. The second approach is to provide SMOKE with VMT data, meteorology data, and MOBILE6 inputs, and have SMOKE compute the mobile emissions based on these data; this is called the VMT approach. These approaches are not mutually exclusive, so it is possible to provide both precomputed emissions and VMT data to SMOKE and have the system compute only some of the emissions using MOBILE6. Both processing approaches can produce criteria, particulate, and toxics emissions results.</para>

<para>The precomputed-emissions approach is quite similar to the processing method for area sources. In fact, Figures 2-8 through 2-10 <remark>from Section 0</remark> show exactly the processing steps needed for processing mobile sources using SMOKE and the precomputed-emissions approach. As in base-case processing for area sources, emissions in the inventory file are subdivided to hourly emissions during temporal allocation, assigned chemical speciation factors during speciation, and assigned spatial allocation factors during gridding. The merge step combines the hourly emissions, speciation matrix, and gridding matrix to create model-ready emissions. For future- or past-year processing, again the projection and inventory growth steps are added to convert the inventory from the base year to a future or past year, and the controls step can be optionally run to apply control factors to the future- or past-year emissions. Note that, unlike the VMT approach, in the precomputed-emissions approach SMOKE will not model the variations in emissions caused by temperature, humidity, or other meteorological settings.</para>

<para>The VMT approach is much different from the precomputed-emissions approach. Figure 2-13 summarizes the VMT approach. First, VMT data (both link and county-total) by road class and vehicle type are input to SMOKE. Then, MOBILE6 preprocessing is performed on the standard MOBILE6.2 input files to provide input to SMOKE's driver for MOBILE6.2. The gridding step allocates the link sources to grid cells and uses spatial surrogates to allocate county-total emissions to grid cells, storing the factors (not emissions) needed for these allocations. The gridding step also determines how the meteorology data can be averaged over counties, which results in "ungridding" factors. The meteorology preprocessing step uses these "ungridding" factors and the prognostic meteorology data to compute county-specific hourly temperatures, which are fed to the MOBILE6.2 driver to compute hour-specific emission factors. The temporal allocation step combines the VMT and emission factors and makes other temporal adjustments to obtain hour-specific emissions for each emissions process (e.g., exhaust start, exhaust running, evaporative, hot soak, diurnal). The chemical speciation step computes the chemical speciation factors for each county, road class, vehicle type, emissions process, and pollutant and stores the necessary factors for this transformation. Finally, the merge step combines the hourly emissions by process, spatial allocation factors, and chemical speciation factors to calculate model-ready emissions.</para>

<remark>figure</remark>

<para>In addition to base-case processing, the VMT approach can also be used for future- or past-year processing and for control cases. Figure 2-14 summarizes the steps needed for such processing. In addition to the steps in Figure 2-13, the projection step is used to grow the VMT data to the future year. In the MOBILE6 driver step, the system can use MOBILE6.2 entries that contain settings for the future/past year, as well as control settings such as inspection and maintenance programs. The control step, which takes its input from the inventory growth program, can optionally be used to further adjust the mobile-source emissions, such as reducing them by some percentage in specific counties.</para>

<remark>figure</remark>

<para>In sections later in this chapter, we describe the SMOKE programs that are needed for each of the processing steps just described for mobile sources, and additional details about what activities are accomplished during each step. These sections are:</para>

<itemizedlist>
<listitem>Inventory import</listitem>
<listitem>Temporal allocation</listitem>
<listitem>Chemical speciation</listitem>
<listitem>Spatial allocation</listitem>
<listitem>Growth</listitem>
<listitem>Controls</listitem>
<listitem>On-road mobile processing with MOBILE6</listitem>
<listitem>Creating model-ready emissions</listitem>
<listitem>Quality assurance</listitem>
</itemizedlist>

<para>Processing mobile sources involves a number of concepts that are unique to mobile sources. These include the link optional source characteristic, a special approach for on-road mobile SCCs, special codes used for road classes and facility types, road types in MOBILE6, SMOKE and MOBILE6 vehicle types, emissions processes, MOBILE6 emission factors, reference counties, and the use of gridded meteorology data. The following subsections explain these topics in more detail.</para>

<section>

<title>Links</title>

<para>As mentioned previously, mobile sources have an optional source characteristic known as link sources. For SMOKE purposes, links are straight road segments within a county and are defined by starting and ending lat-lon or UTM coordinates. Curved roads must be broken into several straight segments to approximate the curved shape. A Geographical Information Systems (GIS) program and a travel demand model are typically used to perform link-source input preparation; these activities are not integrated into SMOKE. The link coordinates must be provided as input data to SMOKE if you want to use link data. This approach provides the advantage of improved spatial allocation for model-ready emissions, because the VMT and therefore emissions are assigned directly to grid cells using the coordinates, rather than relying on spatial surrogates.</para>

<para>In SMOKE, links are identified by 15-character alphanumeric link IDs, which must be unique for each combination of FIPS code and SCC. SMOKE contains its own line-grid intersection routines to allocate the link emissions into each grid cell. The links are allocated to the cells by the fraction of length of each segment within each grid cell; this allocation is performed by the Grdmat program, which assumes that VMT or emissions data are uniformly distributed over the link.</para>

</section>

<section>

<title>Special approach for on-road mobile SCCs</title>

<para>SMOKE handles SCCs differently foron-road mobile sources compared with all other source categories. SMOKE programs assume that on-road mobile SCCs take the following form:</para>

<informaltable>
<tgroup cols="4">
<tbody>
<row>
<entry>22</entry>
<entry>VVVV</entry>
<entry>X</entry>
<entry>RRR</entry>
</row>
<row>
<entry>Identifies mobile sources</entry>
<entry>Vehicle code</entry>
<entry>Unused</entry>
<entry>Road class code</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>The Smkinven program populates SMOKE's internal fields for vehicle type (vehicle code) and road type by extracting them from the SCC and converting the 3-digit road class to the 2-digit road type (using the mapping provided in the MCODES file). During cross-referencing for any mobile-source processing step, SMOKE builds internal SCCs that take the form:</para>

<informaltable>
<tgroup cols="3">
<tbody>
<row>
<entry>0000</entry>
<entry>RR</entry>
<entry>VVVV</entry>
</row>
<row>
<entry>Unused</entry>
<entry>Roadway type</entry>
<entry>Vehicle code</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>These internal SCCs are created by SMOKE for both the inventory file and the cross-reference file. Therefore, any information included in the unused "X" portion of the SCC will be ignored during the cross-referencing. If you refer to the on-road mobile cross-referencing hierarchies provided with each program that uses cross-referencing in Chapter 6, the vehicle type and road class are a part of the hierarchy, but the SCC code is not. The internal SCCs are used so that the correct hierarchy can be utilized (in which the vehicle type is a more specific descriptor).</para>

<para>In some cases, SMOKE errors and warnings that appear when processing on-road mobile sources will contain the internal SCC instead of the source's SCC. The information provided in this section can help you determine which inventory SCC is actually a concern.</para>

<para>Although the "X" portion of the SCC is not used as part of the cross-referencing assignments in SMOKE, it is important that any SCC that appears in the cross-reference file also appear in the inventory in exactly the same way. This is because SMOKE filters the cross-reference files before using them by comparing the SCC in the cross-reference file to the complete list of SCCs in the inventory. This comparison considers the "X" portion of the SCC, and if the SCC that you want to use is in the cross-reference with a different "X" than what is in the inventory, the cross-reference record will be dropped and will not be applied to the sources.</para>

</section>

<section>

<title>Road classes</title>

<para>The AIRS AMS road class code is the same as the last three digits in the 10-digit SCC expected by SMOKE. Within SMOKE, the road class is stored as the combination of the area type code and facility type code. Other SMOKE inputs can use either the AIRS code or the area/facility codes. Descriptions of the road classes and their associated numeric codes are as given in the table below.</para>

<informaltable>
<tgroup cols="4">
<thead>
<row>
<entry>Name</entry>
<entry>AIRS AMS road class code</entry>
<entry>Area type code</entry>
<entry>Facility type code</entry>
</row>
</thead>

<tbody>
<row>
<entry>Rural Interstate</entry>
<entry>110</entry>
<entry>0</entry>
<entry>1</entry>
</row>
<row>
<entry>Rural Principal Arterial</entry>
<entry>130</entry>
<entry>0</entry>
<entry>2</entry>
</row>
<row>
<entry>Rural Minor Arterial</entry>
<entry>150</entry>
<entry>0</entry>
<entry>6</entry>
</row>
<row>
<entry>Rural Major Collector </entry>
<entry>170</entry>
<entry>0</entry>
<entry>7</entry>
</row>
<row>
<entry>Rural Minor Collector </entry>
<entry>190</entry>
<entry>0</entry>
<entry>8</entry>
</row>
<row>
<entry>Rural Local </entry>
<entry>210</entry>
<entry>0</entry>
<entry>9</entry>
</row>
<row>
<entry>Urban Interstate </entry>
<entry>230</entry>
<entry>1</entry>
<entry>1</entry>
</row>
<row>
<entry>Urban Freeway </entry>
<entry>250</entry>
<entry>1</entry>
<entry>2</entry>
</row>
<row>
<entry>Urban Principal Arterial </entry>
<entry>270</entry>
<entry>1</entry>
<entry>4</entry>
</row>
<row>
<entry>Urban Minor Arterial </entry>
<entry>290</entry>
<entry>1</entry>
<entry>6</entry>
</row>
<row>
<entry>Urban Collector </entry>
<entry>310</entry>
<entry>1</entry>
<entry>7</entry>
</row>
<row>
<entry>Urban Local </entry>
<entry>330</entry>
<entry>1</entry>
<entry>9</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

<section>

<title>Road types in MOBILE6</title>

<para>MOBILE6 can model five different road types: freeway, arterial, local, freeway ramp, and none (used for emission processes that are not road dependent, such as exhaust start and hot soak). The table below indicates how the 12 SMOKE road types are mapped to the five MOBILE6 types. Local roads can be modeled using either (1) MOBILE6's local road type, which applies an average speed of 12.9 mph, or (2) the arterial road type and the average speed given in the mobile-source inventory.</para>

<informaltable>
<tgroup cols="2">
<thead>
<row>
<entry>SMOKE Name</entry>
<entry>MOBILE6 Road Type</entry>
</row>
</thead>

<tbody>
<row>
<entry>Rural Interstate </entry>
<entry>freeway, freeway ramp</entry>
</row>
<row>
<entry>Rural Principal Arterial </entry>
<entry>arterial</entry>
</row>
<row>
<entry>Rural Minor Arterial </entry>
<entry>arterial</entry>
</row>
<row>
<entry>Rural Major Collector </entry>
<entry>arterial</entry>
</row>
<row>
<entry>Rural Minor Collector </entry>
<entry>arterial</entry>
</row>
<row>
<entry>Rural Local </entry>
<entry>local or arterial</entry>
</row>
<row>
<entry>Urban Interstate </entry>
<entry>freeway, freeway ramp</entry>
</row>
<row>
<entry>Urban Freeway</entry>
<entry>freeway, freeway ramp</entry>
</row>
<row>
<entry>Urban Principal Arterial </entry>
<entry>arterial</entry>
</row>
<row>
<entry>Urban Minor Arterial </entry>
<entry>arterial</entry>
</row>
<row>
<entry>Urban Collector </entry>
<entry>arterial</entry>
</row>
<row>
<entry>Urban Local </entry>
<entry>local or arterial</entry>
</row>
</tbody>
</tgroup>
</informaltable>

<para>Note that SMOKE assumes that a portion of the VMT data supplied for interstates and freeways are attributable to freeway ramps.  Therefore, SMOKE computes a composite emission factor from the freeway and freeway ramp emission factors from MOBILE6 and maps the composite to the interstates and freeways.</para>

</section>

<section>

<title>Vehicle types in SMOKE</title>

<para>The vehicle types used in SMOKE's on-road mobile source processing are described in the following table. The codes (e.g., 0100) should be used in the cross-reference files.</para>

<informaltable>
<tgroup cols="2">
<thead>
<row>
<entry>Code</entry>
<entry>Description</entry>
</row>
</thead>

<tbody>
<row>
<entry>0100</entry>
<entry>LDGV: Light Duty Gasoline Vehicles</entry>
</row>
<row>
<entry>0102</entry>
<entry>LDGT1: Light Duty Gasoline Trucks 1</entry>
</row>
<row>
<entry>0104</entry>
<entry>LDGT2: Light Duty Gasoline Trucks 2</entry>
</row>
<row>
<entry>0107</entry>
<entry>HDGV: Heavy Duty Gasoline Vehicles</entry>
</row>
<row>
<entry>3000</entry>
<entry>LDDV: Light Duty Diesel Vehicles</entry>
</row>
<row>
<entry>3006</entry>
<entry>LDDT: Light Duty Diesel Trucks</entry>
</row>
<row>
<entry>3007</entry>
<entry>HDDV: Heavy Duty Diesel Vehicles</entry>
</row>
<row>
<entry>0108</entry>
<entry>MC: Motorcycles</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

<section>

<title>Vehicle types in MOBILE6</title>

<para>MOBILE6 produces emission factors for a total of 28 vehicle types. For SMOKE to assign these emission factors to the mobile sources, the emission factors must be aggregated to the eight vehicle types listed in the table below. To perform this aggregation, the emission factors for each MOBILE6 vehicle type are weighted by the percentage of VMT assigned to that vehicle type (using the default MOBILE6 values or values assigned by the VMT FRACTIONS command), then summed over the vehicle types to create emission factors for the eight SMOKE vehicle types. The following table lists the MOBILE6 vehicle types and the corresponding SMOKE vehicle types.</para>

<informaltable>
<tgroup cols="2">
<thead>
<row>
<entry>MOBILE6 Vehicle Types</entry>
<entry>SMOKE Vehicle Type</entry>
</row>
</thead>

<tbody>
<row>
<entry>LDGV: Light Duty Gasoline Vehicles (Passenger Cars)</entry>
<entry>LDGV</entry>
</row>
<row>
<entry>LDGT1: Light Duty Gasoline Trucks 1 (0-6,000 lbs. GVWR, 0-3,750 lbs. LVW)</entry>
<entry>LDGT1</entry>
</row>
<row>
<entry>LDGT2: Light Duty Gasoline Trucks 2 (0-6,000 lbs. GVWR, 3,751-5,750 lbs. LVW)</entry>
<entry>LDGT1</entry>
</row>
<row>
<entry>LDGT3: Light Duty Gasoline Trucks 3 (6,001-8,500 lbs. GVWR, 0-5,750 lbs. ALVW)</entry>
<entry>LDGT2</entry>
</row>
<row>
<entry>LDGT4: Light Duty Gasoline Trucks 4 (6,001-8,500 lbs. GVWR, >5,751 lbs. ALVW)</entry>
<entry>LDGT2</entry>
</row>
<row>
<entry>HDGV2b: Class 2b Heavy Duty Gasoline Vehicles (8,501-10,000 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGV3: Class 3 Heavy Duty Gasoline Vehicles (10,001-14,000 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGV4: Class 4 Heavy Duty Gasoline Vehicles (14,001-16,000 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGV5: Class 5 Heavy Duty Gasoline Vehicles (16,001-19,500 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGV6: Class 6 Heavy Duty Gasoline Vehicles (19,501-26,000 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGV7: Class 7 Heavy Duty Gasoline Vehicles (26,001-33,000 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGV8a: Class 8a Heavy Duty Gasoline Vehicles (33,001-60,000 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGV8b: Class 8b Heavy Duty Gasoline Vehicles (>60,000 lbs. GVWR)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>HDGB: Gasoline Buses (School, Transit, and Urban)</entry>
<entry>HDGV</entry>
</row>
<row>
<entry>LDDV: Light Duty Diesel Vehicles (Passenger Cars)</entry>
<entry>LDDV</entry>
</row>
<row>
<entry>LDDT12: Light Duty Diesel Trucks 1 and 2 (0-6,000 lbs. GVWR)</entry>
<entry>LDDT</entry>
</row>
<row>
<entry>LDDT34: Light Duty Diesel Trucks 3 and 4 (6,001-8,500 lbs. GVWR)</entry>
<entry>LDDT</entry>
</row>
<row>
<entry>HDDV2b: Class 2b Heavy Duty Diesel Vehicles (8,501-10,000 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDV3: Class 3 Heavy Duty Diesel Vehicles (10,001-14,000 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDV4: Class 4 Heavy Duty Diesel Vehicles (14,001-16,000 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDV5: Class 5 Heavy Duty Diesel Vehicles (16,001-19,500 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDV6: Class 6 Heavy Duty Diesel Vehicles (19,501-26,000 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDV7: Class 7 Heavy Duty Diesel Vehicles (26,001-33,000 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDV8a: Class 8a Heavy Duty Diesel Vehicles (33,001-60,000 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDV8b: Class 8b Heavy Duty Diesel Vehicles (>60,000 lbs. GVWR)</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDBT: Diesel Transit and Urban Buses</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>HDDBS: Diesel School Buses</entry>
<entry>HDDV</entry>
</row>
<row>
<entry>MC: Motorcycles (Gasoline)</entry>
<entry>MC</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</section>

<section>

<title>Emission processes</title>

<para>SMOKE can use all of the emissions-forming processes modeled in the MOBILE6 model. These processes are the following.</para>

<itemizedlist>
<listitem>
<para>EXR: exhaust running emissions</para>
</listitem>
<listitem>
<para>EXS: exhaust engine start emissions (trip start)</para>
</listitem>
<listitem>
<para>HOT: evaporative hot soak emissions (trip end)</para>
</listitem>
<listitem>
<para>DNL: evaporative diurnal emissions (heat rise)</para>
</listitem>
<listitem>
<para>RST: evaporative resting loss emissions (leaks and seepage)</para>
</listitem>
<listitem>
<para>EVR: evaporative running loss emissions</para>
</listitem>
<listitem>
<para>CRC: evaporative crankcase emissions (blow-by)</para>
</listitem>
<listitem>
<para>RFL: evaporative refueling emissions (fuel displacement and spillage)</para>
</listitem>
<listitem>
<para>BRK: particulate matter from brake component wear</para>
</listitem>
<listitem>
<para>TIR: particulate matter from tire wear</para>
</listitem>
</itemizedlist>

<para>"Emission types" are the combinations arising from combining the above emission-forming processes with each of the pollutants output by MOBILE6, for example, EXR__NOX or EVR__TOG. Each emission type is associated with emission factors produced by the MOBILE6 emission factor model. SMOKE currently supports many process-and-pollutant combinations that are output by MOBILE6; the list below indicates which pollutants can be combined with each process. Note that the list below does not include the user-defined toxics pollutants generated by using the "ADDITIONAL HAPS" command in SMOKE. Note also that only one hydrocarbon output can be used at a time (e.g., either VOC or TOG [total organic gases] but not both). In the examples below, TOG could be replaced with any of the other hydrocarbon pollutants available from MOBILE6.</para>

<itemizedlist>
<listitem>
<para>EXR: all pollutants except particulates from brake and tire wear</para>
</listitem>
<listitem>
<para>EXS: CO, NOX, TOG, BENZENE, MTBE, BUTADIENE, FORM, ACETALD, ACROLEIN </para>
</listitem>
<listitem>
<para>HOT: TOG, BENZENE, MTBE</para>
</listitem>
<listitem>
<para>DNL: TOG, BENZENE, MTBE</para>
</listitem>
<listitem>
<para>RST: TOG, BENZENE, MTBE</para>
</listitem>
<listitem>
<para>EVR: TOG, BENZENE, MTBE</para>
</listitem>
<listitem>
<para>CRC: TOG</para>
</listitem>
<listitem>
<para>RFL: TOG, BENZENE, MTBE</para>
</listitem>
<listitem>
<para>BRK: BRAKE25, BRAKEPMC</para>
</listitem>
<listitem>
<para>TIR: TIRE25, TIREPMC</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>MOBILE6 emission factors</title>

<para>Emission factors are created in SMOKE using MOBILE6, for a wide variety of emission processes and pollutants. Some of the MOBILE6 input commands implement control strategies (e.g., inspection and maintenance (I/M) programs, antitampering programs (ATPs), and reformulated gas (RFG)). Other MOBILE6 inputs define other factors contributing to the value of the emissions factors, such as vehicle registrations (which help define the mix of different vehicle types), fuel volatility parameters, speeds, and temperature. All of these different dependencies make mobile emissions processing more complex than other types of sources.</para>

</section>

<section>

<title>Reference counties</title>

<para>When running MOBILE6, each county in the mobile inventory is assigned a reference county using the MCREF file. All counties with the same reference county will then use the same MOBILE6 input scenario. The MOBILE6 input scenario defines many aspects to be modeled, including I/M programs, ATPs, and fuel parameters. Nearly all MOBILE6 commands can be used with the exception of header-level commands.</para>

<para>For a single county, SMOKE duplicates the MOBILE6 input scenario for all speeds in the inventory. It then inserts a 24-hour temperature profile, replaces speed information, and runs MOBILE6. The hourly emission factors are then matched to the individual sources and stored.</para>

</section>

<section>

<title>Use of gridded meteorology data</title>

<para>SMOKE retains its performance benefits when processing mobile sources through the use of "ungridded" temperatures. These temperatures are created by averaging the temperatures in the grid cells intersecting each county, weighted by the fraction of the VMT in that county intersecting those grid cells. The ungridding is implemented by building an "ungridding matrix," MUMAT, which must be created by the Grdmat program.</para>

<para>Because the MOBILE6 emission factors used by SMOKE are significantly influenced by temperature, the most desirable approach from an accuracy standpoint is to model mobile emissions using gridded, temporalized emissions from a meteorological model. However, to retain the performance benefits of source-based SMOKE processing, SMOKE has been designed to "ungrid" the temperatures to get a county temperature. For processing of all kinds, SMOKE expects data from one of the gridded, temporal temperature files MET_CRO_2D or MET_CRO_3D. The MET_CRO_2D file is used for surface or 1.5-meter temperature data. The MET_CRO_3D data file is used for ambient temperature data.</para>

<para>MOBILE6 has the ability to use 24-hour temperature profiles. SMOKE uses the gridded meteorology data to create these profiles for each county in the inventory. To save processing time, SMOKE can create spatially or temporally averaged 24-hour temperature profiles, resulting in fewer MOBILE6 runs.</para>

<itemizedlist>
<listitem>
<para><emphasis>Spatial averaging:</emphasis> For each reference county, SMOKE can either create separate temperature profiles for each inventory county, or it can create one profile by averaging temperatures from all counties sharing the reference county. Note that all counties sharing the same reference county are usually within the same state, so this kind of spatial averaging would not result in averaging counties from different states.</para>
</listitem>
<listitem>
<para><emphasis>Temporal averaging:</emphasis> Using this type of averaging, SMOKE can create a 24-hour temperature profile for each day of the episode (no averaging), or a temperature profile for each week or month in the episode. Finally, SMOKE can create one temperature profile for the entire episode, averaging over all days within the episode.</para>
</listitem>
</itemizedlist>

<para>Options for spatial and temporal averaging of temperatures are independent by county, and are set in the MVREF settings file.</para>

</section>

</section>

<section>

<title>Point-source processing</title>

<para>Point-source emissions processing in SMOKE focuses on converting annual, daily, or hourly emissions to hourly and gridded model-ready emissions of the chemical species used by an AQM. Recall that by "point sources" in SMOKE we mean point sources in the usual sense plus wildfires with precomputed plumes. SMOKE processing may be performed either with or without growth and control of emissions. SMOKE can process both criteria and toxics inventories for point sources and combine consistent criteria and toxics inventories in one run <remark>(as explained in more detail in Section 0)</remark>.</para>

<para>Point-source processing can be performed using a CMAQ-based approach or a UAM-based approach<remark>, as previously described in Section 0</remark>. The processing steps for CMAQ base-year processing are shown in Figure 2-15. In Figure 2-4, we also included the major intermediate vectors and matrices; please refer to that diagram for those details.</para>

<remark>figure</remark>

<para>The inventory import step reads the raw emissions data, screens them, processes them, and converts the data to the SMOKE intermediate inventory file (inventory vectors in Figure 2-4). The import can optionally include day-specific and hour-specific data. The emissions in the inventory file are subdivided to hourly emissions during temporal allocation; assigned chemical speciation factors during speciation, and assigned spatial allocation factors during gridding. The plume-rise computation estimates vertical plume rise of emissions sources and computes the fraction of emissions from the sources to go into the model layers. The results of these steps are combined in a merge step, which creates model-ready files for CMAQ or MAQSIP.</para>

<para>Users may optionally choose to select specific sources to be elevated sources and/or PinG sources. If this approach is taken, the selection process can optionally depend on daily-total emissions summed from the Temporal output files. Hence, Figure 2-15 shows that the elevated-source selection may optionally depend on the output from the Temporal program. If elevated-source selection is being included, the plume-rise computation uses that information to skip the point sources that have not been selected as elevated.  Thus, in this case, plume rise is only being computed for the elevated sources. The elevated-source selection also provides its results to the merge step, which is where the special PinG data files for CMAQ are created in addition to the 3-D model-ready file.</para>

<para>Figure 2-16 describes base-case processing for the UAM-based approach. For this type of modeling, the elevated-source selection step is required, and the plume rise computation is not performed. Otherwise, the major processing steps are the same as for the CMAQ-based approach.</para>

<remark>figure</remark>

<para>In Figure 2-17, we show the point-source CMAQ-based processing steps for future- or past-year processing. This processing is similar to the base-year processing flow, except the growth and inventory growth steps are added to convert the inventory from the base year to a future or past year. The control step can optionally be run to apply control factors to the future- or past-year emissions. The steps shown with dashed lines represent steps that can be reused from the base-year processing because they do not necessarily depend on any of the new steps. However, if the elevated-source selection is to be performed based on the grown emissions, then the elevated-source selection and plume rise computation steps would need to be redone.</para>

<remark>figure</remark>

<para>Growth and control can also be used for UAM-based processing (Figure 2-18). As with the other figures, the dashed lines indicate steps that may be reused from the base-case processing. If the elevated-source selection depends on the grown emissions then you may want to regenerate the elevated-source list, though it is the usual practice in modeling to use the same elevated-source list in both the base- and future-year modeling. This allows the air quality modeling results to be more comparable.</para>

<remark>figure</remark>

<para>As with area sources, you may apply many growth and control matrices at the front end of processing. The area-source diagram for this approach was provided as Figure 2-10, and the point-source approach is quite similar, with the addition of the elevated-source selection and plume rise computation steps.</para>

<para>In sections later in this chapter, we describe the SMOKE programs that are needed for each of the processing steps just discussed and additional details about what activities are accomplished during each step. These sections are:</para>

<itemizedlist>
<listitem>Inventory import</listitem>
<listitem>Temporal allocation</listitem>
<listitem>Chemical speciation</listitem>
<listitem>Spatial allocation</listitem>
<listitem>Growth</listitem>
<listitem>Controls</listitem>
<listitem>Elevated-source processing</listitem>
<listitem>Creating model-ready emissions
</listitem>
<listitem>Quality assurance</listitem>
</itemizedlist>

<para>Point-source processing includes a number of additional features that are not applicable for other SMOKE source categories:</para>

<orderedlist>
<listitem>Flexible source definitions</listitem>
<listitem>Stack parameters</listitem>
<listitem>Day- and hour-specific emissions</listitem>
<listitem>Different approaches for elevated sources for different AQMs, including the use of PinG sources</listitem>
<listitem>Elevated-source selection</listitem>
<listitem>Precomputed plume rise - explicit plume sources</listitem>
</orderedlist>

<section>

<title>Flexible source definitions</title>

<para>Depending on the input format of point-source emissions (e.g., IDA, EMS-95, SMOKE ORL), the unique set of characteristics that are used to uniquely identify a point source can be different. For example, the IDA-formatted inventories define a point source using a country, state, and county code, an SCC, a plant identifier, a stack number, a point identifier, and a segment number. The Emissions Modeling System, 95 (EMS-95), however, identifies a source using a FIPS state/county code, a plant code, a stack code, a device code, and a process code. To better support the formats and be adaptable if new formats are created in the future, SMOKE has been updated to permit a flexible definition of point sources. This definition now consists of the following source characteristics to uniquely define the sources:</para>

<itemizedlist>
<listitem>
<para>Country, state, and county code</para>
</listitem>
<listitem>
<para>Plant ID (15 characters or less)</para>
</listitem>
<listitem>
<para>Characteristics 1 through 5 (each 15 characters or less)</para>
</listitem>
</itemizedlist>

<para>Depending on the input format, SMOKE assigns different variables from the input format to the parts of the SMOKE point-source definition. For example, for EMS-95 input format, the SMOKE plant ID comes from the EMS-95 facility ID. The assignments for the remaining characteristics are as follows:</para>

<para><emphasis>IDA format and SMOKE ORL format:</emphasis></para>

<itemizedlist>
<listitem>Char 1: Point ID</listitem>
<listitem>Char 2: Stack ID</listitem>
<listitem>Char 3: Segment ID</listitem>
<listitem>Char 4: SCC</listitem>
</itemizedlist>

<para><emphasis>EMS-95 format:</emphasis></para>

<itemizedlist>
<listitem>Char 1: Stack ID</listitem>
<listitem>Char 2: Device ID</listitem>
<listitem>Char 3: Process ID</listitem>
</itemizedlist>

<para>The meaning of these source characteristics for a given inventory type needs to be considered when cross-reference files are created, if cross-reference entries other than state/county and SCC-specific entries are provided.</para>

</section>

<section>

<title>Point definition header row in cross-reference files</title>

<para>As just described, SMOKE uses a flexible definition of point sources. This definition may or may not include the SCC (although SCC is always at least a source attribute). Cross-reference files for point sources can contain source-specific records, and they usually use the SCC to perform the needed assignments during emissions processing. For the files to be self-describing, they use a header that indicates the number of characteristics in addition to the plant ID that are being used in the cross-reference file. This number needs to be consistent with the number of point-source characteristics used in the inventory files. In addition, the header indicates which, if any, of the point-source characteristics is the SCC. This header starts with the characters /POINT DEFN/, and the files that use it describe it as part of the file format definition in Chapter 8.</para>

</section>

<section>

<title>Stack parameters</title>

<para>Several of the source attributes for point sources are stack parameters--specifically, the stack height, stack diameter, and the stack flue gas exit temperature, velocity, and flow rate. SMOKE can use hourly data on the stack flue gas exit temperature, velocity, and flow rate when using the CMAQ-based approach to modeling with SMOKE computing hourly plume rise. The hourly stack parameters cannot be used when modeling using a UAM-based elevated-point-source approach.</para>

<para>During the Smkinven program's import of the stack parameters from the annual or average-day inventory file (i.e., not the hourly stack parameters), SMOKE needs to read or assign stack parameters for all point sources. <remark>Section 0 explains in greater detail what the Smkinven program does with stack parameters.</remark> The hourly stack parameters are read in without modification or adjustment.</para>

</section>

<section>

<title>Day-specific and hour-specific emissions</title>

<para>Emissions from point sources are sometimes available as day- or hour-specific values. Smkinven can import the day- and hour-specific data, and it can also convert the hour-specific data to hour-specific temporal profiles. When these data are available, the Temporal program overrides the annual or daily emissions with the most specific data available. If day-specific data are available, Temporal uses them to overwrite the annual or average-day emissions during the time periods that these data are available. If hour-specific data are available, Temporal uses them to overwrite the annual, average-day emissions, or day-specific emissions data.</para>

</section>

<section>

<title>Different approaches for elevated sources for different AQMs</title>

<para><remark>As introduced in Section 0,</remark> there are two different major approaches for creating emissions inputs to AQMs: the CMAQ-based approach and the UAM-based approach. The two approaches differ only on how point sources are being treated. In the CMAQ-based approach, SMOKE calculates the plume rise using an algorithm based on a Briggs plume rise formulation. SMOKE then includes the vertical distribution of the point-source emissions in the 3-D model-ready file for CMAQ or MAQSIP. For the CMAQ model only, SMOKE can also create two special PinG files: one to identify the sources, their locations, and their stack parameters, and the other to provide the hour-specific emissions for just these sources. In the UAM-based approach, SMOKE creates a special elevated-point-source file that both identifies the elevated and PinG sources and includes the hourly emissions values for those sources.</para>

<para>PinG sources are those sources that will be treated in greater detail by the AQM. In simple terms, the AQMs preprocess the chemistry of the plume emissions before those emissions are provided to the AQM grid cells and layers. The intent of the PinG approach is to provide more accurate modeling at and around very large point sources.</para>

<para>Section 2.12 describes in greater detail the steps taken by SMOKE in the layer fraction processing using a Briggs formulation and the elevated and PinG source selection.</para>

</section>

<section>

<title>Precomputed plume rise - explicit plume sources</title>

<para>You may also provide precomputed point-source plume rise to SMOKE with both the CMAQ-based and UAM-based approaches to modeling point sources. Sources that use this approach are called explicit plume sources. This capability was implemented for modeling wildfire sources as point sources in SMOKE using plume rise computed with a different approach from the Briggs-based approach used for stack-based plumes. The input data for this approach are the fraction of emissions in layer 1, the bottom of the plume, and the top of the plume. SMOKE distributes the emissions across the layers by weighting the emissions by the pressure difference in each layer over the total pressure difference between the top and bottom of the plume.</para>

<para>For the UAM-based modeling approach, the file format does not readily allow you to provide precomputed plume rise; in fact, the entire premise of the format is that the AQM will compute the plume rise. To enable you to provide precomputed rise for the UAM-based modeling approach, the Smkmerge program creates an ASCII elevated-point-source file with an imaginary stack for each layer of each source (e.g., each wildfire). The stack parameters of the imaginary stack are set to values that will ensure a zero plume rise will be computed for the stack, and the x-y location of the stacks are the same for all imaginary stacks representing the same source. The emissions associated with the imaginary stacks are provided based on the emissions values that are to be entered in each layer for the source. The emissions for layer 1 are written in the point-source file to the imaginary stack associated with layer 1, and the same is done for all of the other layers. SMOKE uses a zero value for the imaginary stack when the emissions from a given source are not in a layer for an hour or when the source stops (e.g., once a wildfire ends). While not particularly elegant, this approach permits providing precomputed plume rise to the UAM-based models without having to change those models.</para>

</section>

</section>

</section>

<section>

<title>Inventory import</title>

<para>The importing of emission inventory and related data is the first processing step needed for any emissions processing effort. The Smkinven program imports data for anthropogenic sources, theRawbio program imports BEIS2 land use data for biogenic sources, and the Normbeis3 program imports BEIS3 land use data for biogenic sources. In this section, we focus on the import of the anthropogenic inventories using Smkinven.</para>

<para>Smkinven performs many types of activities during import of the anthropogenic inventories.Though the primary purpose is reading the data from ASCII formats and outputting and I/O API SMOKE intermediate inventory, there are many other actions that need to be performed duringthe inventory import stage of processing. These actions are the following:</para>

<orderedlist>
<listitem>
<para>Check that the formats of the input files are correct and consistent, and ensure that alldata can be read properly.</para>
</listitem>
<listitem>
<para>Assign pollutant names to data input by code numbers.</para>
</listitem>
<listitem>
<para>Select pollutants from the input files to keep for further SMOKE processing.</para>
</listitem>
<listitem>
<para>When multiple files are provided, combine all annual and/or average-day data into aconsistent inventory. This includes checking for duplicates and possibly aborting, depending on program options set by the user.</para>
</listitem>
<listitem>
<para>Combine toxics and criteria inventories, and eliminate duplicate mass using either an integrate or no-integrate approach.</para>
</listitem>
<listitem>
<para>Sort the inventory records into the order expected by other SMOKE programs.</para>
</listitem>
<listitem>
<para>Aggregate or disaggregate toxics emissions data as specified by user inputs.</para>
</listitem>
<listitem>
<para>Assign point-source locations to area sources, when available.</para>
</listitem>
<listitem>
<para>Fill in and check point-source stack parameters.</para>
</listitem>
<listitem>
<para>Convert stack locations from UTM to lat-lon and optionally ensure that lat-lon coordinates are in the Western Hemisphere.</para>
</listitem>
<listitem>
<para>Convert units of emissions and activities to the units used in the SMOKE intermediate inventory.</para>
</listitem>
<listitem>
<para>Set the weekday averaging approach.</para>
</listitem>
<listitem>
<para>Assign country codes, years, and time zones.</para>
</listitem>
<listitem>
<para>Handle inventories that have data for multiple years.</para>
</listitem>
<listitem>
<para>Set the base year.</para>
</listitem>
<listitem>
<para>Report results of import including pollutant totals for toxics data and other information needed for quality assurance.</para>
</listitem>
<listitem>
<para>Import day-specific and hour-specific data, if available, and ensure that records in these files match inventory records provided in the annual or average-day inputs.</para>
</listitem>
</orderedlist>

<para>In the following subsections, we describe what SMOKE does for each of these necessary activities.</para>

<section>

<title>Check the correctness and consistency of input file formats</title>

<para>Smkinven can read the following ASCII formats for annual and average-day inventory data:</para>

<itemizedlist>
<listitem>
<para><emphasis role="bold">Inventory Data Analyzer format:</emphasis> The IDA format is the SMOKE input format that is most similar to the National Emission Inventory (NEI) "flat file" format. EPA typicallyprepares the IDA format for officially released versions of the NEI. There is a different IDA format for area (including nonroad mobile), point, and on-road mobile sources.</para>
</listitem>

<listitem>
<para><emphasis role="bold">SMOKE ORL format:</emphasis> This set of input formats is used for inputting point, nonpoint, on-road, and nonroad hazardous air pollutants (HAP) emissions inventories, also calledtoxics emission inventories. There is a different SMOKE toxics format for nonpoint, point, nonroad mobile, and on-road mobile sources.</para>
</listitem>

<listitem>
<para><emphasis role="bold">EMS-95 format:</emphasis> These are input formats used for EMS-95. They are provided to allow EMS-95 users to input their data to SMOKE. There are different formats for area(including nonroad mobile), point, and on-road mobile sources. The EMS-95 formats must be used in conjunction with the list format (below).</para>
</listitem>

<listitem>
<para><emphasis role="bold">List format:</emphasis> This is the input format used to provide multiple files of the previous three types to Smkinven in a single run. This format is simply an ASCII file that contains a listof other files.</para>
</listitem>

<listitem>
<para><emphasis role="bold">Gridded I/O API format:</emphasis> This format is a gridded I/O API file for allowing the importof pregridded data. This approach is described more in the section on area sources.</para>
</listitem>
</itemizedlist>

<para>Smkinven ensures that all file formats provided to SMOKE are correct and include the requireddata fields. The formats and their required fields are provided in Chapter 8.</para>

<para>Smkinven also ensures that the files listed in list-formatted input files do not include incompatible file formats. Usually, only one file format can be used for one Smkinven run. The major exception to this rule is that Smkinven can import the IDA and SMOKE toxics formats in the same run. The only other minor exception to the input rule is that the EMS-95 point-source format actually includes five separate formats, which can be input at the same time, when users follow the instructions about the order of these files provided in Chapter 8.</para>

</section>

<section>

<title>Assign pollutant names to data input by code numbers</title>

<para>The SMOKE toxics formats use code numbers (usually CAS numbers) to distinguish which chemical compound or inventory pollutant is provided on each line of the file. Smkinven matches these numbers with the CAS numbers from an inventory table (INVTABLE) file, described in Chapter 8. The CAS number does not necessarily have to be a valid CAS number; it can be any number as long as there is a match between the numbers in the SMOKE toxics file and the inventory table. The inventory table provides the inventory data names, such as the pollutant names that SMOKE uses in the remaining processing steps.  Note that the SMOKE inventory pollutants may not be identical to the pollutants in the inventory fed to SMOKE because of the aggregation/disaggregation that is performed by Smkinven.</para>

<para>For toxics processing, if multiple inventory data names apply for the same CAS number, the Factor column of INVTABLE will contain the split factor used by Smkinven to disaggregate the emissions from that CAS number to multiple inventory data values. If multiple CAS numbers apply for the same pollutant name, then Smkinven will sum these emissions, but will not report duplicate records unless there are indeed duplicates in the inventory file. <remark>This is described more fully in Section 0. Duplicate reporting is described more in Section 0.</remark></para>

<para>The use of the inventory data name as the unique pollutant identifier in SMOKE differs from the approach of EMS-HAP, in which the SAROAD code is the unique identifier for the pollutants to be modeled. Because we anticipated that some toxics pollutants that do not have unique SAROAD codes (e.g., divalent particulate mercury) would need to be modeled explicitly, we did not want to take this approach. If we had, the user would have been required to create fake and unique SAROAD codes to be able to model these emissions explicitly.</para>

</section>

<section>

<title>Select pollutants from the input files for further SMOKE processing</title>

<para>In version 1.5 and higher of SMOKE, users can specify the valid data (pollutants and activities) using the inventory table discussed in Section 2.8.2, as described in Chapter 8. Smkinven will read only those entries that have a "Y" (for "Yes") in the Keep column of the inventory table. If a pollutant has an "N" (for "No") in the Keep column, it will not be output to the SMOKE intermediate files, but will be included in the inventory reports that Smkinven creates. If the pollutant is not listed at all in the inventory table, it will be dropped as well; Smkinven will also write a warning message and will not include the pollutant in any reporting. It is a good work practice for users to put all pollutants in the input inventory in the inventory table even if it the pollutant will not be used  for the AQ model. Use of the INVTABLE file replaces the use of the SIPOLS and ACTVNAMS files from previous versions of SMOKE.</para>

</section>

<section>

<title>Check for duplicate records</title>

<para><remark>In Section 0, </remark>we explained that Smkinven ensures that the input files are correct and that the same format is used. In addition, Smkinven checks for duplicate records across the entire set of inventory input files. A duplicate record is one that has the same source characteristics and pollutants as another record in the inventory. Smkinven provides an option that allows you to instruct Smkinven whether duplicates should cause a warning message or an error. In some cases, users may not expect duplicates in their inventory, in which case Smkinven will abort after reporting all duplicates. In other cases, users want to instruct Smkinven to sum the emissions across all duplicate records. See the Smkinven options description for more information on the different approaches.</para>

</section>

<section>

<title>Combine toxics and criteria inventories</title>

<para>For point, nonpoint, on-road mobile, and nonroad-mobile sources, the toxics inventory contains emissions of VOC pollutants that are provided as explicit chemical compounds (for example, benzene). These same VOC emissions are also contained as an aggregated VOC value in the criteria emissions inventory. To be able to use these inventories together, Smkinven provides the necessary options to ensure that double counting of VOC emissions will not occur. These two options are the "integrate" and "no-integrate" options. The "integrate" option is used when the user would like to replace the VOC mass with toxics VOC. With this option the user must ensure that the sources in the toxics and criteria inventories match up one-to-one, so that Smkinven will not double count mass.  If there is a source in the toxics inventory but not in the criteria inventory, and the user chooses to integrate these sources, then mass will be double counted. If the user chooses the no-integrate option then mass will not be double counted. Please note that in any discussion of the toxics inventory we have assumed that all emissions are annual total emissions, because the toxics inventory that is currently available does not include average-day emissions. We have also assumed that the inventory contains VOC emissions, but the same approach can be used to process TOG emissions.</para>

<para>Only two chemical mechanisms support combining toxics and criteria inventories; both are for the CMAQ model. The first is the "current-CB4" mechanism, which can refer to either the released version of CMAQ with CB4, or to an unreleased version that includes mercury. The second chemical mechanism is the "toxics-CB4" mechanism, which refers to a different unreleased version of CMAQ that includes toxics species that have been integrated into the chemical mechanism; these "explicit" toxics species are formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene. This second chemical mechanism is expected to undergo some changes to a few of the model species (e.g., acetaldehyde) during the development of this user's guide; unfortunately, the default configuration of SMOKE will not be able to address these changes. This CMAQ version also includes benzene as a separate species, but the benzene chemistry has not been integrated with the chemical mechanism. The data files for these chemical mechanisms are provided with the SMOKE release and are described in Chapter 3. Note that the default files do not support all source categories in the same way.</para>

<para>During import of both toxics and criteria emission inventories, SMOKE matches the area/nonpoint, on-road mobile, and nonroad mobile emission inventories by country/state/county code and SCC. SMOKE also matches the toxics and criteria records for the point sources, provided that the point sources in the two inventories use identical fields for their source characteristics. You are required to ensure that the source characteristics for all source categories match between the two inventories for any sources that you wish to have matched. Once they are matched, SMOKE will have both a criteria VOC total emissions value and toxics emissions for individual VOC chemical compounds.</para>

<para>SMOKE can optionally compute a NONHAPVOC value by subtracting the sum of toxics VOC from the criteria VOC value. This same approach can be used to create a NONHAPTOG value if the inventory or MOBILE6 uses a TOG value instead of a VOC value. (We will not mention NONHAPTOG again, but it could be used to replace NONHAPVOC in any of the sentences of this section).</para>

<para>With this approach, the NONHAPVOC mass and the toxics VOC mass are independent from one another and will not double count emissions. The calculation must be performed for each source, and Smkinven sets the criteria VOC value to zero when it computes the NONHAPVOC value. Smkinven determines which pollutants should be subtracted from VOC using the "VOC or TOG" column in the inventory table (INVTABLE) file.</para>

<para>The case of computing NONHAPVOC is the "integrate" case because it involves integration of the VOC mass between the criteria and toxics inventories. Likewise, the case of not computing NONHAPVOC is the "no-integrate" case. The default SMOKE input files are set up to integrate on-road mobile and nonroad mobile sources except for some SCCs; this is explained in detail in Chapter 3.</para>

<para>Chemical speciation in SMOKE is greatly affected by the necessity of NONHAPVOC. Although we have not yet discussed much about chemical speciation, we provide information here about what happens in Smkinven and what happens in the chemical speciation step for the various possible cases of combining criteria and toxics inventories. This is intended to provide you with a complete picture of what happens to the emissions and sources when Smkinven imports both criteria and toxics inventories.</para>

<para>Since the chemical speciation step involves converting the inventory pollutants to the model species, the input files to this step must include the NONHAPVOC pollutant and revised conversion factors that have been adjusted for the reduced mass in NONHAPVOC instead of VOC. The GSREF file is the chemical speciation cross-reference file and the GSPRO file is the chemical speciation profiles file. A key concern with the NONHAPVOC approach is ensuring that the definition of NONHAPVOC is the same for the data import step and the chemical speciation step. To address this concern, the speciation step compares a header in the GSPRO file with the INVTABLE settings for defining NONHAPVOC.</para>

<para>There are some situations in which users cannot or do not want to compute NONHAPVOC from the emission inventories and hence would want the "no-integrate" approach. These situations are as follows:</para>

<orderedlist>
<listitem>
<para>There are no toxics records that match the criteria records. In other words, the county/SCC combination present in the criteria and particulate inventories is not present in the toxics inventory. In this case, NONHAPVOC should not be calculated, and the emissions should be left as VOC.</para>
</listitem>

<listitem>
<para>A particular SCC does not have the toxics mass provided with enough detail to properly compute NONHAPVOC. For instance, the "commercial marine, residual" SCCs for "port emissions" and "underway emissions" cannot be integrated because they contain the "grouped" pollutant 16-PAH (PAH stands for polynuclear aromatic hydrocarbons, and 16 refers to the "sum of 16" approach), only part of which is VOC. There is no way to know how much of 16-PAH is VOC, and subtracting all 16-PAH emissions would reduce the emissions too much. Consequently, we would want to exclude these SCCs from having NONHAPVOC computed, and leave the emissions as VOC. The toxics data should still be used to supply emissions to the toxics model species of formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene.</para>
</listitem>

<listitem>
<para>A particular state or county has provided toxics emissions data for one or more SCCs, and those data either are incomplete (not all toxics provided) or were created using a method that is not known to be consistent with the method used to create the VOC inventory. In this case, the state, county, and SCC combinations of state-provided data should be excluded from being integrated. The toxics data should still be used to supply emissions to the toxics model species of formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene.</para>
</listitem>
</orderedlist>

<para>To accommodate these situations, SMOKE includes a method that permits users to exclude sources from the NONHAPVOC calculation (the "no-integrate" approach). The NHAPEXCLUDE file, described in Chapter 8, is the mechanism to provide the information to Smkinven. Users can specify sources using a cross-reference approach that lists states, counties, SCCs, and combinations of these to prevent Smkinven from computing NONHAPVOC for a given source.</para>

<para>For handling the NONHAPVOC situations, SMOKE accounts for four cases: (1) current-CB4, integrate; (2) current-CB4, no-integrate; (3) toxics-CB4, integrate; and (4) toxics-CB4, no-integrate. For both of the CB4 mechnisms, both the integrate and no-integrate cases can be used for different sources in the same Smkinven run and inventory. The following subsections describe how the toxics and criteria inventories can be combined in these four cases, and the additional key SMOKE processing steps needed in each case.</para>

<section>

<title>Current-CB4, integrate</title>

<para>The current-CB4, integrate case applies when the user believes that substituting toxics VOC mass for part of the VOC mass, mapping the toxics to the model species, and speciating the non-HAP remainder of the VOC will improve the emission estimates. This case can be used when all of the following conditions apply:</para>

<orderedlist>
<listitem>
<para>VOC and HAP estimates were made on a consistent basis for the given emission source (e.g., same activity data and modeling approach). For state-provided data, we generally do not know whether the approach used was consistent; therefore, this case would not usually be applicable to state-provided data.</para>
</listitem>

<listitem>
<para>The emissions source has all of the gaseous HAP estimates that are expected.</para>
</listitem>

<listitem>
<para>If the source emits PAHs, the emissions of the PAH components are reported individually (i.e., not as a PAH group).</para>
</listitem>
</orderedlist>

<para>Note that these criteria will always be true when SMOKE is driving MOBILE6 for on-road mobile processing, because all of the appropriate VOC HAPs can be computed when running MOBILE6. There will therefore not be any question about where the data came from or whether they are consistent. For more information on using MOBILE6, please refer to the section on mobile sources.</para>

<para>When the three above conditions are met for a given source, then the following processing steps will occur in Smkinven and other SMOKE programs:</para>

<itemizedlist>
<listitem>
<para>Smkinven will compute NONHAPVOC, except when using VMT only for on-road mobile processing.</para>
</listitem>
<listitem>
<para>For on-road mobile sources with VMT data, SMOKE will run MOBILE6 to create NONHAPVOC and the individual gaseous toxics that come out of MOBILE6. For this case, the MOBILE6.2 input files must include the following specific pollutants using the ADDITIONAL HAPS command: ethylbenzene, hexane, toluene, xylene, styrene, 2,2,4-trimethylpentane (iso octane), propionaldehyde, and 13 of the 16 "16-PAHs" (all except benzo(a)pyrene, pyrene, and fluoranthene).</para>
</listitem>
<listitem>
<para>SMOKE will use the GSPRO file to map toxics pollutants to standard CB4 species.</para>
</listitem>
<listitem>
<para>For the CMAQ version of CB4 that includes mercury, SMOKE will use the GSPRO file to map the toxics mercury pollutants to the mercury species needed by CMAQ.</para>
</listitem>
<listitem>
<para>SMOKE will use the GSPRO file to also map NONHAPVOC to standard CB4 species.</para>
</listitem>
<listitem>
<para>SMOKE will use the GSREF file to assign all pollutants to the appropriate current-CB4 profiles.</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>Current-CB4, no-integrate</title>

<para>For the current-CB4 mechanism, if one or more of the three criteria <remark>listed in Section 0</remark> are not met for a given source, then "no-integrate" applies and the following processing steps will occur in Smkinven and other SMOKE programs:</para>

<itemizedlist>
<listitem>
<para>Smkinven will not compute NONHAPVOC; VOC will remain in the inventory for that source, and the NONHAPVOC value will be zero.</para>
</listitem>
<listitem>
<para>SMOKE will use the GSPRO file entries to map VOC to the standard CB4 species (same as current approach for ozone modeling using CB4).</para>
</listitem>
<listitem>
<para>SMOKE will zero out the toxics VOC pollutants.</para>
</listitem>
<listitem>
<para>For the CMAQ version of CB4 that includes mercury, SMOKE will use the GSPRO file to map the toxics mercury pollutants to the mercury species needed by CMAQ.</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>Toxics-CB4, integrate</title>

<para>The toxics-CB4, integrate case handles the situation in which the user wants to use the toxics inventory for modeling toxics pollutant species in CMAQ; these species could either be explicitly part of the chemical mechanism (e.g., formaldehyde), or simply added on as a model species but not part of the chemistry (e.g., benzene). In these cases, the non-toxics part of the VOC mass is retained as NONHAPVOC and mapped to the toxics-CB4 species. The toxics VOC mass is mapped to either (1) the explicit toxics species that are a part of the chemistry (formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene), or (2) to other toxics species (e.g., benzene), and/or (3) to altered CB4 species whose definitions have been altered to account for the four new mechanism species. If the VOC mass is mapped to the explicit toxics species, then it is not mapped to anything else, whereas if it is mapped to other toxics species, it can also be mapped to altered CB4 species. Also, please note that we refer to "altered CB4 species" to include all CB4 species, even if some of these did not actually require any adjustments because of the explicit toxics species.</para>

<para>The toxics-CB4, integrate case can be used when all of the following conditions apply:</para>

<orderedlist>
<listitem>
<para>VOC and HAP estimates were made on a consistent basis for the given emission source (e.g., same activity data and modeling approach). For state-provided data, we generally do not know whether the approach used was consistent; therefore, this case would not usually be applicable to state-provided data.</para>
</listitem>

<listitem>
<para>The emissions source has all of the gaseous HAP estimates that are expected.</para>
</listitem>

<listitem>
<para>If the source emits PAHs, the emissions of the PAH components are reported individually (i.e., not as a PAH group).</para>
</listitem>
</orderedlist>

<para>Note that these criteria will always be true when SMOKE is driving MOBILE6, because all of the appropriate VOC HAPs can be computed when running MOBILE6. There will therefore not be any question about where the data came from or whether they are consistent. For more information on using MOBILE6, please refer to the section on mobile sources.</para>

<para>When the three conditions just listed are met for a given source, then the following processing steps will occur in Smkinven and other SMOKE programs:</para>

<itemizedlist>
<listitem>
<para>Smkinven will compute NONHAPVOC, except when using VMT only for on-road mobile processing.</para>
</listitem>
<listitem>
<para>For on-road mobile sources with VMT data, SMOKE will run MOBILE6 to create NONHAPTOG and the individual gaseous toxics that come out of MOBILE6. For this case, the MOBILE6.2 input files must include the following specific pollutants using the ADDITIONAL HAPS command: ethylbenzene, hexane, toluene, xylene, styrene, 2,2,4-trimethylpentane (iso octane), propionaldehyde, and 13 of the 16 "16-PAHs" (all except benzo(a)pyrene, pyrene, and fluoranthene).</para>
</listitem>
<listitem>
<para>SMOKE will use the GSPRO file to map toxics pollutants to:</para>

<itemizedlist>
<listitem>
<para>Toxics-CB4 explicit species for formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene</para>
</listitem>
<listitem>
<para>Toxics-CB4 species for benzene</para>
</listitem>
<listitem>
<para>Toxics-CB4 VOC species that have been modified from the standard CB4 definitions to account for explicit formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene.</para>
</listitem>
</itemizedlist>

<para>SMOKE will also use the GSPRO file to map NONHAPVOC to VOC species that have been modified from the standard CB4 definitions to account for explicit formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene.</para>
</listitem>
<listitem>
<para>SMOKE will use the GSREF file to assign all pollutants to the appropriate toxics-CB4 profiles based on the pollutant and SCC combinations. State/county/SCC combinations are also valid in SMOKE, although the available data do not have that additional detail.</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>Toxics-CB4, no-integrate</title>

<para>For the toxics-CB4 mechanism, if one or more of the three criteria <remark>listed in Section 0</remark> are not met for a given source, then "no-integrate" applies and the following processing steps will occur in Smkinven and other SMOKE programs:</para>

<itemizedlist>
<listitem>
<para>SMOKE will not compute NONHAPVOC, and VOC will remain in the inventory for that source.</para>
</listitem>
<listitem>
<para>SMOKE will drop toxics emissions for toxics VOC pollutants if they are not part of the chemical mechanism or if they are not model species. Note that formaldehyde, acetaldehyde, 1,3-butadiene, and acrolein will not be dropped because they are part of the chemical mechanism.</para>
</listitem>
<listitem>
<para>SMOKE will rename the emissions by appending a "_NOI" (for no-integrate) to the pollutant name if the toxics pollutant is a model species but not part of the chemical mechanism (e.g., benzene).</para>
</listitem>
<listitem>
<para>SMOKE will use the GSPRO file to map toxics pollutants to toxics-CB4 explicit species for formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene.</para>
</listitem>
<listitem>
<para>SMOKE will use "_NOI" entries in the GSREF and GSPRO files to map these pollutants to the toxics-CB4 model species (e.g., benzene).</para>
</listitem>
<listitem>
<para>SMOKE will use the GSPRO file entries to map VOC (since we have not computed NONHAPVOC) to toxics-CB4 species that have been modified from the standard CB4 definitions to account for explicit formaldehyde, acetaldehyde, acrolein, and 1,3-butadiene.</para>
</listitem>
</itemizedlist>

<para>Note that in this case, if formaldehyde, acetaldehyde, acrolein, or 1,3-butadiene happen to be left out of the toxics inventory, then the overall mass of the VOC emissions will be reduced, because the VOC mass is being converted through the GSPRO file to adjusted CB4 species that are without mass for these compounds.</para>

</section>

</section>

<section>

<title>Sort the inventory</title>

<para>When Smkinven reads an inventory, it also puts its sources into a special sorted order prior to outputting the SMOKE intermediate inventory files. All programs that read Smkinven outputs, which includes most of the SMOKE programs, expect this order. The order is determined by sorting the source characteristics <remark>listed in Section 0</remark> in ascending order. For example, area sources will be sorted in order of increasing country/state/county code, and within a single country/state/county code will be sorted in order of increasing SCC. In Figure 2-19, we show how the sorted order may be completely different from the order of the files and records provided to Smkinven. The figure shows the unsorted ASCII input files at left (provided to Smkinven by logical files ARINV, MBINV, or PTINV) and how the records can be rearranged by Smkinven to create the sorted I/O API output files (output from Smkinven as AREA and ASRC, MOBL and MSRC, or PNTS and PSRC). Each record in this diagram represents a complete inventory record with all source characteristics, source attributes, and emissions.</para>

<remark>figure</remark>

<para>Having this sorted order is important because the programs that depend on Smkinven outputs also store their outputs in the same order. However, these other programs (such as Temporal for temporal allocation, Spcmat for chemical speciation, and Grdmat for spatial allocation) store their records using the record numbers to match their outputs with the Smkinven outputs. This means that the source characteristics that are stored in the Smkinven outputs are not also included in the outputs from Temporal, Spcmat, Grdmat and other programs; these programs rely on the sorted order in the Smkinven outputs not changing. Such an approach facilitates having minimal redundant data storage, this reducing disk space needs.</para>

<para>As explained previously, the records output from Smkinven are vectors of emissions and source characteristics that make up the SMOKE intermediate inventory files. Each record number in the file identifies an element of the vector. The outputs from Temporal are also vectors of hourly emissions. The record number in each hourly vector will match the record number in the intermediate inventory files. The outputs from Spcmat are a matrix of speciation factors, in which the record numbers (rows of the matrix) will match the record numbers of the intermediate inventory files. The columns of the matrix are each valid pollutant-to-species transformations. The outputs from Grdmat are a sparse matrix, but again the rows of the matrix match the rows of the intermediate inventory file.  Therefore, assignment of factors is a simple matter of selecting the same record number from the Smkinven output files; this is in fact one part of the vector-matrix multiplication used by SMOKE.</para>

<para>It is important to remember this sorted-order approach when you have run an inventory through all of the programs once, and then want to change your inventory and re-import the data with Smkinven. For the re-importing and subsequent rerun, if any source characteristics in the inventory change, or if any sources are added or removed, then the number and/or order of the output sources in the new Smkinven outputs will be different. This means that the outputs from all processing steps that depend on the Smkinven outputs will need to be rerun.</para>

</section>

<section>

<title>Aggregate or disaggregate toxics emissions</title>

<para>Smkinven also supports aggregation and disaggregation of toxics inventory pollutants to match the input needs for AQMs. There are two components of this aggregation and disaggregation. The first involves what to do during inventory import to resolve discrepancies between the inventory content and what data are most useful for further processing through SMOKE; this topic is addressed in this subsection. The second issue is conversion of the toxics inventory to the species needed by the AQM, which is handled by the Spcmat program in SMOKE<remark>, as described in Section 2.11</remark>.</para>

<para>Smkinven uses the inventory table (INVTABLE) file to determine what aggregation and disaggregation are needed. The INVTABLE file can have both multiple pollutant names per CAS number and multiple CAS numbers per pollutant name. In the first case, Smkinven disaggregates the emissions to two or more pollutants using the number provided in the "Factor" column of the INVTABLE file. In the second case, Smkinven combines the separate records in the inventory into the same pollutant. Depending on the relationship between the "Keep" column, the "Pollutant Name," and the "CAS Number" in the inventory table file, the reader routines ensure that they will keep emissions only for pollutants (not CAS numbers) with a "Y" in the "Keep" column. Smkinven can also tell the difference between two CAS numbers that are being aggregated for the same source and a duplicate record (two records for the same source and pollutant).</para>

</section>

<section>

<title>Assign point-source locations to area sources</title>

<para>Some area/nonpoint and nonroad mobile sources can be assigned point-source locations instead of being assigned spatial surrogates. At this time, the only allowable cases of this are for toxics processing for nonroad mobile and stationary area/nonpoint sources related to airport emissions processes. Smkinven has the capability to make such assignments for any area source from both the toxics and criteria inventories, but the default file that comes with SMOKE for this purpose (the ARTOPNT file) contains only entries for the airport emissions processes. Chapter 3 provides more information about the ARTOPNT file provided with SMOKE.</para>

<para>Because airport location data are readily available, this feature gives users the ability to model airport-related area-source emissions at airport locations, as opposed to spatially allocating them to grid cells using spatial surrogates. Although spatial surrogates could be (and have been) developed to reproduce the same or similar results as the point-source assignments for models such as CMAQ, other models that SMOKE may eventually support (namely, ISCST3) require that point-source inputs include the location coordinates. The area-to-point assignment feature in SMOKE will support such a need.  Note that for large airports and a small grid, one may want to have the airport emissions gridded since the airport can be large enough to encompass multiple grid cells.  Thus the user should decide whether and when to use this area-to-point feature as opposed to gridding using an airport area-type surrogate.</para>

<para>In SMOKE version 1.5 and higher, SMOKE can assign an area source to one or more locations in a county. For example, when multiple airports are in a county, SMOKE adds sources to the inventory and splits the county-total emissions among the locations based on a factor provided with the point locations. All sources remain with the area-source inventory in which they started; they are not moved to a point-source inventory. Any area sources that are assigned point locations are spatially allocated using those locations<remark>, as described in Section 2.11 on spatial processing</remark>. Sources that are not assigned point-source locations are allocated in the standard way using spatial surrogates.</para>

</section>

<section>

<title>Fill in and check point-source stack parameters</title>

<para>An additional action taken by the Smkinven program for point sources only is to check stack parameters and fill them in with valid values if they are missing. Smkinven performs the following steps on stack parameters from the annual or average-day inventory files (not the hour-specific stack parameters file.</para>

<itemizedlist>
<listitem>
<para>If the exit velocity is missing or zero and the exit flow is not, or if the VELOC_RECALC option is "Y" in the run script, Smkinven automatically calculates the exit velocity using the formula:</para>

<para>velocity = flow / (&Pi; . diameter<superscript>2</superscript>/4)</para>
</listitem>

<listitem>
<para>If the stack parameters are not missing or zero, Smkinven ensures that their values are within the allowed ranges. The range for each stack parameter is as follows:</para>

<itemizedlist>
<listitem>Height: 0.5 to 2100 meters</listitem>
<listitem>Diameter: 0.01 - 100 meters</listitem>
<listitem>Exit temperature: 260 to 2000 K</listitem>
<listitem>Exit velocity: 0.0001 to 500 m/s</listitem>
</itemizedlist>
</listitem>

<listitem>
<para>If the stack parameters are missing or zero, Smkinven uses the PSTK file to assign new stack parameters using country/state/county and SCC assignments. The default PSTK file is described in Chapter 3.</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>Convert coordinates from UTM to lat-lon and optionally ensure that lat-lon coordinates are in the Western Hemisphere</title>

<para>The SMOKE toxics and EMS-95 point-source formats permit stack coordinates to be provided in UTM or lat-lon coordinates, and the SMOKE intermediate inventory stores the coordinates as lat-lon values. Smkinven converts the UTM coordinates to lat-lon coordinates using the I/O API routine UTM2LL, which is documented at <ulink url="http://www.cep.unc.edu/empd/EDSS/ioapi/LL2UTM.html" />.</para>

<para>For any lat-lon coordinates input to Smkinven (point-source locations, link coordinates, and area-to-point coordinates), SMOKE can optionally ensure that the longitude values are in the Western Hemisphere. In some cases, the data prepared for input to SMOKE do not contain the negative sign on the longitude value that indicates the Western Hemisphere. If the modeling domain is in the Western Hemisphere, then Smkinven will convert all positive longitudes to negative ones when the WEST_HSPHERE option is set to Y.</para>

</section>

<section>

<title>Convert units of emissions and activities to the units used in the SMOKE intermediate inventory</title>

<para>Different input formats in SMOKE have different emissions units. The SMOKE intermediate inventory file stores all annual emissions values from the IDA and SMOKE toxics format in tons/year. These two formats also support average-day emissions values, which are stored separately in the SMOKE intermediate inventory in tons/day. The average-weekday emissions values input from EMS-95 format are also stored in tons/year, but SMOKE sets an internal variable called TPFLAG so that later SMOKE processing steps can properly treat the computed "annual" value as an average-day value. The annual VMT data are stored as miles/year. In all cases, Smkinven converts the units of the input emissions to the units used in the SMOKE intermediate inventory. When this conversion involves a day-to-year conversion, Smkinven considers leap years by using 366 instead of 365 days in the year.</para>

<para>When emissions are provided as average-day values from the IDA or SMOKE toxics formats and these emissions are then used in downstream processing steps, SMOKE does not further adjust the emissions using the monthly profiles. SMOKE assumes that the average-day emissions from these two formats have been adjusted to a specific month already. In addition, when Smkinven is configured using the FILL_ANN_WSEAS option to fill in missing annual values using average-day values, Smkinven sets the TPFLAG internal variable to indicate that monthly adjustments should not be applied and that the "annual" emissions should just be divided by the number of days of the year before being used. Smkinven makes this setting on a source-by-source basis.</para>

</section>

<section>

<title>Set the weekday averaging approach</title>

<para>There are two approaches for processing weekly temporal profiles: weekly normalization and weekday normalization. Although the actual normalization happens during temporal allocation, Smkinven sets the approach to use for each source. In the weekly approach, the Temporal program normalizes the weekly temporal profiles over every day of the week. This approach is appropriate for annual-total inventories or average-day inventories. Weekday normalization normalizes over just the weekdays (i.e., Monday through Friday) in the profile, or if the profile indicates no emissions on weekdays, then over just the weekend days in the profile. This approach is appropriate only for average-weekday inventories. <remark>Section 2.10 describes the two forms of weekly profile normalization in more detail.</remark></para>

<para>The default normalization setting for IDA and SMOKE toxics formats in Smkinven is weekly normalization. The default normalization setting for EMS-95 inventories is weekday normalization. The default settings can be changed using the WKDAY_NORMALIZE option in the SMOKE run scripts. When this option is set to "Y", the sources will be set to instruct Temporal to use weekday normalization, and when this option is set to "N", the sources will be set to cause weekly normalization. Smkinven gives a warning when an approach is being used that is inconsistent with the expected approach for the inventory format being used.</para>

</section>

<section>

<title>Assign country codes, years, and time zones</title>

<para>For all source categories, Smkinven assigns country codes, years, and time zones to inventory files that do not contain this information in the inventory records.</para>

<para>The user provides the country codes and years as header fields for each inventory file provided to Smkinven, because most inventory formats do not include a column for country or year. Users can provide data for up to 10 countries using as many separate files, or separate headers within a single file, as needed. The inventory file formats listed in Chapter 9 provide a further description of these country-setting headers and the valid country codes.</para>

<para>Users can also provide multiple inventory years in a single Smkinven run. This is necessary in some cases when an inventory for one region (e.g., Canada or Mexico) is unavailable for the same year as the majority of the inventory region (e.g., the U.S.). Smkinven stores the inventory year as part of the source attributes.</para>

<para>In addition to country codes and years, Smkinven assigns the time zone of the source based on the county. Smkinven uses the COSTCY file to get this information. It matches the county code from the inventory to the county code in this file. If a county code included in the inventory is missing from this file, or if the time zone is not provided in the COSTCY file, Smkinven uses the SMK_DEFAULT_TZONE setting to obtain a default time zone for sources in such a county. In some cases, the time zone set in the COSTCY file is an approximation, since counties that are bisected by two time zones have only the predominant zone represented in this file.</para>

</section>

<section>

<title>Handle inventories that have data for multiple years</title>

<para>In some cases, inventories may use data from multiple years; this can occur when inventory data are not available for the modeling year of interest, but data from another year are available. SMOKE can handle this case. Unless growth factors are available to grow the available data to the desired year, the SMOKE intermediate inventory may include data from two years. Usually, using data from a nearby year is preferable to not performing the modeling at all.</para>

<para>Smkinven can import data from two years and the Cntlmat and Grwinven programs can later be used to selectively grow only one of the years. This can be used to combine inventories from two years and update one part of the inventory to have a new year, or to grow both inventories to a new consistent year.</para>

</section>

<section>

<title>Set the base year</title>

<para>Smkinven imports all data and then sets the inventory base year in the file as the year that has the most data values. The year of the inventories is set using the #YEAR header for IDA and SMOKE toxics inputs, or the /INVYEAR/ packet for EMS-95 input files. Usually, the year of the data is the same for all sources, so you will know what Smkinven will assume is the base year. However, if multiple inventory years are provided, Smkinven will set it using the year that is associated with the largest number of sources.</para>

<para>If you provide a future-year inventory to SMOKE, you must override the base-year setting obtained from the values given by the #YEAR header or the /INVYEAR/ packet. This is accomplished with the SMK_BASEYR_OVERRIDE setting. This is necessary so that later SMOKE steps will be able to verify that the episode year is consistent with the base year.</para>

</section>

<section>

<title>Report results of import step</title>

<para>The Smkinven program writes several reports to help you determine what it has done.</para>

<orderedlist>
<listitem>
<para>A summary by CAS number of the emissions in tons/year. This includes the number of inventory records; whether all, some, or none of the pollutants associated with that CAS code are kept; and the CAS description. This report is written to a special report file (REPINVEN).</para>
</listitem>
<listitem>
<para>A summary of emissions by CAS number and pollutant before and after the application of disaggregation factors based on the inventory table. This report shows, for instance, how chromium emissions get split out into different pollutants. The report is written to the REPINVEN file.</para>
</listitem>
<listitem>
<para>A listing of the first 10 nonheader records in each inventory file. This information is written to the program log file.</para>
</listitem>
<listitem>
<para>For area-to-point conversions <remark>(from Section 0)</remark>, a list of the SCCs that have received the treatment, and the section number of the ARTOPNT input file used to assign the point locations. This information is written to the program log file.</para>
</listitem>
<listitem>
<para>For area-to-point conversions, a list of any SCCs included in the ARTOPNT input file that do not also appear in the inventory. This report is written to the REPINVEN file.</para>
</listitem>
<listitem>
<para>For area-to-point conversions, a summary of emissions totals by SCC and pollutant before and after the factors are applied, and the total number of country/state/county codes affected. A separate summary is provided that reports emissions by state, SCC, and pollutant, but that otherwise has the same information. These reports are written to the REPINVEN file.</para>
</listitem>
<listitem>
<para>For area-to-point conversions, a summary by SCC of the number of country/state/county codes being assigned area-to-point factors, and the number not being assigned those factors. This report is written to the REPINVEN file.</para>
</listitem>
<listitem>
<para>For import of CEM data, a summary of ORIS IDs from the CEM data that have been matched to the inventory, a summary of the ORIS IDs from the CEM data that have not been matched to the inventory, and power-generating inventory sources that have not been matched to the CEM data. This report is written to the REPINVEN file.</para>
</listitem>
</orderedlist>

<para>More information about these reports can be found in Chapter 10, which contains the REPINVEN output file description.</para>

</section>

<section>

<title>Import day-specific and hour-specific data</title>

<para>Another function of Smkinven for point sources only is importing day- and hour-specific data. It can read several input ASCII formats, including:</para>

<itemizedlist>
<listitem>
<para><emphasis role="bold">CEM data format:</emphasis> The CEM data format provides hourly emissions by ORIS identification code and boiler number. It was developed in conjunction with the Market Trading Division of EPA, and that division now provides this ASCII file format when the data are released. The CEM format is useable only with IDA-formatted annual and average-day inventories.</para>
</listitem>
<listitem>
<para><emphasis role="bold">EMS-95 format:</emphasis> The EMS-95 hour-specific format can be input to SMOKE using either the EMS-95 average-day format or the IDA format for annual and average-day inventories. This format has also been adapted to provide SMOKE with day-specific instead of hour-specific data.</para>
</listitem>
</itemizedlist>

<para>In addition to reading the files, Smkinven ensures that the records listed in day- and hour-specific files match records provided in the annual inventory inputs. This is necessary because SMOKE builds its list of all point sources based on the annual and/or average-day inventory files, and these are the only sources that will be listed in the SMOKE intermediate inventory file. Smkinven requires that the year associated with the date of the day-specific and hour-specific emissions is the same as the base year. Smkinven generates an error message when it cannot match a day- or hour-specific source with an inventory source. Please refer to the Smkinven documentation in Chapter 6 for more information about how Smkinven can be used to import these data.</para>

</section>

</section>

<section>

<title>Temporal processing</title>

<para>The temporal allocation of emission inventory data always occurs after the inventory import processing previously described in Section 2.9. The Temporal program processes data for anthropogenic sources, while the Tmpbio program allocates biogenic emissions. In this section, we focus on the temporal allocation of the anthropogenic inventories using Temporal. <remark>The biogenic import is further described in Section 2.17.</remark></para>

<para>The primary purpose of the Temporal program is to create an intermediate hourly emissions file (ATMP, MTMP, or PTMP). It also creates a supplementary intermediate file that indicates which monthly, day-of-week, and hourly profiles were assigned to each source (ATSUP, MTSUP, or PTSUP).</para>

<para>The temporal processing operation applies factors based on the source characteristics to the emissions data from the SMOKE inventory files. These factors can include monthly, day-of-week, and hourly temporal profiles. The resulting emissions data vectors (not a matrix) contain hourly emissions for the inventory species. SMOKE assumes an hourly time step (Even though the time step is an input setting to SMOKE, it currently cannot be changed.). Most of the calculations are implemented as sparse-matrix algebra based upon temporal cross-references and profiles, augmented by the substitution of values from day- and hour-specific emissions data sets. For mobile sources, hourly emissions values also depend on meteorology (e.g., the temperature dependence of evaporative emissions).</para>

<remark>figure</remark>

<para>Temporal processing also addresses the following issues that need to be considered during emissions processing:</para>

<orderedlist>
<listitem>
<para>Using annual or average-day data when both are available in the inventory</para>
</listitem>
<listitem>
<para>Applying monthly, weekly, and diurnal profiles</para>
</listitem>
<listitem>
<para>Using day- and hour-specific emissions</para>
</listitem>
<listitem>
<para>Time zone adjustments</para>
</listitem>
<listitem>
<para>Holiday processing</para>
</listitem>
<listitem>
<para>Processing inventories that have data for multiple years</para>
</listitem>
<listitem>
<para>Special steps for MOBILE6 processing</para>
</listitem>
<listitem>
<para>Monday-weekday-Saturday-Sunday (MWDSS) processing</para>
</listitem>
<listitem>
<para>Creating the intermediate files</para>
</listitem>
</orderedlist>

<para>In the subsections below, we address each of these issues in the same order as the list above.</para>

<section>

<title>Using annual or average-day data when both are available in the inventory</title>

<para>When using the IDA or SMOKE toxics inventory format, you may choose to use either the annual or the average-day emissions values when running the Temporal program. The default is to use the annual data. To apply average-day data instead, the SMK_AVEDAY setting is used (this setting is relevant only for IDA or SMOKE toxics inventories). These emissions are then used in the merge-processing step, resulting in model-ready emissions that depend on the data type selected. If part of your inventory is available as average-day data and part is available as annual data, you have used Smkinven to fill in annual values based on the average-day values. The Temporal program is then run using annual values. Temporal ensures that for those sources for which "annual" values were created, only day-of-week and hourly adjustments (not monthly profiles) are applied. Temporal assumes that any average-day data provided has already been adjusted for a specific month, and therefore does not apply the monthly profiles to them.</para>

</section>

<section>

<title>Applying monthly, weekly, and diurnal profiles</title>

<para>The Temporal program uses a cross-reference file and a temporal profiles file to assign the temporal profiles to the inventory sources. The cross-reference file can assign the profiles using a hierarchy that is based on the source characteristics. A detailed list of valid assignments is given in Chapter 8 with the detailed description of the Temporal program. The cross-reference assigns a monthly, weekly, and diurnal profile to each source, and can also assign a default profile to a source that doesn't get assigned a profile based on the cross-reference. When default assignments are made by the Temporal program, you can optionally choose to have warnings given for all of these assignments, using the REPORT_DEFAULTS option.</para>

<para>The temporal profiles file has different sections that contain the monthly, day-of-week, and diurnal profiles. Additionally, you may provide different weekend (Saturday, Sunday) and weekday (Monday through Friday) diurnal profiles, or you may provide a different set of diurnal profiles for each day of the week.</para>

<para>When using multiple diurnal profiles, Temporal expects that the profile codes across the profiles that apply to a given source for different days will be consistent. For example, if diurnal profile 1 is assigned to a source and profile 1 is provided separately for each day of the week, Temporal requires that profile 1 apply to that source from each of the separate day-specific diurnal profile sets. In other words, there is no way for Temporal to assign profile 1 on a Monday and profile 2 on a Tuesday. Therefore, when you are preparing inputs to SMOKE, profile 1 must be different on different days and must reflect the temporal profiles for those sources on each of the days.</para>

<para>For weekly profiles, Temporal evaluates the TPFLAG setting (set by Smkinven <remark>as explained in Section 0</remark>) and uses the weekly-normalized weekly profiles or weekday-normalized weekly profiles, depending on the setting. The formulas used are described with the Temporal program discussion in Chapter 8.</para>

<para>One limitation of using monthly, day-of-week, and hourly profiles is that each week within a month has the same distribution of emissions from week to week throughout that month. In other words, all Tuesdays within a month use the same emissions profile (unless one happens to be a holiday <remark>- see Section 0</remark>). This limitation can be overcome in SMOKE only by using day-specific emissions data, which can be done only for point sources.</para>

</section>

<section>

<title>Using day- and hour-specific emissions</title>

<para>SMOKE uses the most specific data available for any given source. For point sources, Temporal will read in the day-specific and hour-specific emissions and use these instead of the annual or average-day emissions that have been adjusted to hourly values. If both day-specific and hour-specific data are available for the same source, Temporal will use the hour-specific data. The settings that control the use of these emissions are HOUR_SPECIFIC_YN and DAY_SPECIFIC_YN.</para>

</section>

<section>

<title>Time zone adjustments</title>

<para>You can use the OUTZONE setting to control the output time zone that defines the hours in the output files. The one constraint on this setting is that it must be consistent with the time zone of the hours in the meteorology files. These files are used only when processing on-road mobile sources with MOBILE6 (optional), processing elevated point sources for the CMAQ-based approach (required), or processing biogenic emissions with SMOKE BEIS2 or BEIS3 (required). The time zones must be consistent among all source categories processed, so that if one source category depends on the meteorology file, then all source categories must be processed with the same OUTZONE setting.</para>

<para>Temporal compares the OUTZONE value with the time zone of the source, which was set in Smkinven (see Section 0) based on the county. Additionally, it assesses and accounts for whether the date being processed falls within the range of Daylight Savings Time, and whether the county of the source uses Daylight Savings Time. Temporal uses the COSTCY file to determine which counties use Daylight Savings Time and which do not; for example, the state of Arizona does not use it. Using these pieces of information, Temporal interprets the diurnal profiles assuming that they are local profiles in order to map the correct adjustment to the correct output hour in the output time zone. Temporal also uses the time zone of the source and the output time zone to determine the correct hour for switching from one month to the next and from one day of the week to the next.</para>

<para><xref linkend="ch02_tbl_zone" /> lists a sampling of OUTZONE settings and the time zones that they represent. Note that SMOKE expects OUTZONE to be set as a positive number for time zones in the Western Hemisphere, although standard notation would list these as negative values. For example, Eastern Standard Time is listed in this table as -5:00 hours from GMT, but OUTZONE for EST in SMOKE is 5. One result of this implementation is that SMOKE does not work correctly for time zones east of GMT.</para>

<table id="ch02_tbl_zone">
<title>Example OUTZONE settings and their associated time zones.</title>

<tgroup cols="4">
<thead>
<row>
<entry>OUTZONE</entry>
<entry>GMT</entry>
<entry>Time zone</entry>
<entry>Description</entry>
</row>
</thead>

<tbody>
<row>
<entry>0</entry>
<entry>+0:00</entry>
<entry>GMT</entry>
<entry>Greenwich Mean Time (also known as Zulu time)</entry>
</row>
<row>
<entry>4</entry>
<entry>-4:00</entry>
<entry>AST</entry>
<entry>Atlantic Standard Time</entry>
</row>
<row>
<entry>5</entry>
<entry>-5:00</entry>
<entry>EST</entry>
<entry>Eastern Standard Time</entry>
</row>
<row>
<entry>6</entry>
<entry>-6:00</entry>
<entry>CST</entry>
<entry>Central Standard Time</entry>
</row>
<row>
<entry>7</entry>
<entry>-7:00</entry>
<entry>MST</entry>
<entry>Mountain Standard Time</entry>
</row>
<row>
<entry>8</entry>
<entry>-8:00</entry>
<entry>PST</entry>
<entry>Pacific Standard Time</entry>
</row>
<row>
<entry>9</entry>
<entry>-9:00</entry>
<entry>YST</entry>
<entry>Yukon Standard Time</entry>
</row>
<row>
<entry>10</entry>
<entry>-10:00</entry>
<entry>HST</entry>
<entry>Hawaiian Standard Time</entry>
</row>
<row>
<entry>10</entry>
<entry>-10:00</entry>
<entry>CAT</entry>
<entry>Central Alaska Time</entry>
</row>
<row>
<entry>11</entry>
<entry>-11:00</entry>
<entry>NT</entry>
<entry>Nome Time</entry>
</row>
</tbody>
</tgroup>
</table>

</section>

<section>

<title>Holiday processing</title>

<para>Some holidays have different activity patterns than regular weekdays because commercial and commuting activities are altered. Temporal uses the HOLIDAY file to identify which user-defined dates should be processed as holidays and to determine which day of the week (Saturday or Sunday) to use to model each holiday. Usually, holidays are modeled as if they were a Sunday; this attempts to account for things like plants being closed and traffic patterns being different. Of course, you can also set up specific temporal profile inputs for a specific holiday and model that day separately, but this is not automated in SMOKE. Users therefore simply pick Saturday or Sunday as an alternative date treatment in the hope that it will somewhat better represent the emissions than using a weekday.</para>

<para>Holidays processing happens automatically if you are running the Temporal program for every day of your episode. If you are using the Monday- weekday-Saturday-Sunday approach <remark>described in Section 0</remark>, then additional scripting steps must be taken to ensure that the holidays are modeled properly. In particular, for inventories that span multiple time zones and/or when the output time zone is not the same as at least one time zone in the inventory, the scripts must be configured to model the holiday and the next day, so that the final hours in the holiday that are west of the output time zone will be included in the next day's file.</para>

</section>

<section>

<title>Special steps for MOBILE6 processing</title>

<para>On-road mobile processing using MOBILE6 requires a number of additional steps in the Temporal program. First, Temporal must determine which hours of emission factors are needed. Since emission factors are stored by local time, Temporal determines which hours are needed based on start and end time and output time zone. The earliest time needed will be the start time in the time zone farthest from the output time zone. If this time is before 6:00 a.m. local time, then Temporal needs the previous day's emission factors as well because the emission factor files start at 6:00 a.m. (based on the MOBILE6 convention). The latest time needed is the end time in the time zone closest to the output time zone; if this time is before 6:00 a.m. local time, then the last day is not needed because the previous day's emission factor file will cover through 5:00 a.m.</para>

<para>Temporal also uses the ungridding matrix (MUMAT) from the Grdmat program to identify sources that are outside of the grid. This is needed because the meteorology data used for computing emission factors depend on the grid, so emission factors are available only for those sources that are inside the grid.</para>

<para>Temporal must determine the correct names of the emission factors that it will use. To do this, it first reads the emission processes file (MEPROC) and creates a list of valid emission factor names. This file describes the correct process-pollutant combinations that are available from MOBILE6 for the pollutants of interest. Not all pollutants requested exist for all processes, so it is important for Temporal to know from this file what emission factors must be read. Temporal also checks the inventory table (INVTABLE) file to determine whether NONHAPVOC was calculated. This allows Temporal to know whether it should also expect and use emission factors for NONHAPVOC.</para>

<para>Temporal also must open and use the emission factor files, which are listed in a text file called the MEFLIST file. It checks to see which days each file covers and makes sure that all hours needed are covered. There can be emission factor files that use different temporal averaging for the meteorology data: episode average, monthly average, weekly average, and day-specific. If the correct time period of data is available, Temporal reads the emission factors for each source from the appropriate file, because different sources can use different temporal averaging approaches. Finally, Temporal multiplies the correct hourly emission factor for each source by that source's VMT to compute the hourly emissions by process and pollutant.</para>

</section>

<section>

<title>Monday, weekday, Saturday, Sunday processing</title>

<para>The weekly temporal variation is the same from week to week within a month because SMOKE uses the weekly profiles. Also, it is common that the weekly profiles do not have variation in the emissions from Monday through Friday. Consequently, it is often desirable for long (e.g., annual) simulations to use a Monday-weekday-Saturday-Sunday (MWDSS) approach. With this approach, SMOKE computes emissions for a representative Monday, weekday, Saturday, and Sunday within each month. The representative days cannot be the first day of the month (to prevent effects from the previous month from being included in the emissions data), a holiday (as set in the HOLIDAY file), or the day after the holiday. Monday is distinguished from other weekdays because in multi-time zone cases in the Western Hemisphere with OUTZONE set to 0 (i.e. GMT), a few late-night Sunday hours are included in the hours at the start of the Monday file. In addition, one must specifically process the holidays and the day after holidays as separate runs for all holidays set by the HOLIDAY file. During merging of emissions, the Monday, weekday, Saturday, and Sunday files are reused to create model-ready emissions for every day and hour needed. The holiday and day-after files are used for the holiday and day-after dates only.</para>

<para>This approach relies heavily on scripting to select dates for each month's representative days and to ensure that the days that are run are consistent with the dates in the HOLIDAYS file. Scripting is also responsibly for ensuring that the correct files are merged together by Smkmerge to create the model-ready files for all days of the episode. These scripting issues are described in more detail in Chapter 4.</para>

<para>There are some situations in which you cannot use the MWDSS approach. In particular, on-road processing with MOBILE6 must be run for all days of the episode, although some steps can be hastened by using the temperature averaging approach. Additionally, biogenic emissions processing obtains all of its temporal variation from the meteorology data, and therefore must be run for all days. Fortunately, biogenic emissions processing is very fast compared to processing for other source categories.</para>

</section>

<section>

<title>Creating the intermediate files</title>

<para>Finally, the Temporal program must output intermediate files. The hourly emissions are written to the ATMP, MTMP, and PTMP I/O API files. Unlike the other major SMOKE intermediate files (e.g., the matrices), the actual emissions (not the factors) are written to this file. This is because day-specific and hour-specific emissions can be impossible to convert into factors since the annual inventory emissions for the day- or hour-specific sources could be zero and factors would not be able to change that.</para>

<para>If Temporal has more than 120 variables to output (the limit for the number of variables in an I/O API file), Temporal opens as many files (using the FileSetAPI wrapper) as are needed to store the data. SMOKE also estimates how large the output files will be using 120 variables per file and automatically lowers the number of variables that will be put in each I/O API output file to ensure that the files use less than 2 gigabytes of disk space. In addition, Temporal writes the supplementary files ATSUP, MTSUP, or PTSUP, which contain the temporal profiles assigned to each source. The structures of all SMOKE intermediate files output by Temporal are provided in Chapter 9.</para>

</section>

</section>

<section>

<title>Chemical speciation processing</title>

<para>An emission inventory is built and reported for a variety of pollutants, such as CO, NO<subscript>x</subscript>, VOC, PM<subscript>10</subscript>, and SO<subscript>2</subscript>. However, model chemical mechanisms (e.g., CB4) contain a simplified set of equations that use "model species" to represent atmospheric chemistry. Therefore, emissions processing requires speciation profiles to convert the emissions in terms of pollutant values to the species used in the photochemical mechanism. The purpose of the chemical speciation processing program Spcmat is to produce matrices that contain the factors for converting the input emissions pollutants to the model species used in the AQM. These species include organics, PM species, and toxics species.</para>

<para>The speciation matrices that Spcmat creates are used transform column vectors of inventory-pollutant emissions into column vectors of model-species emissions. As shown in Figure 2-21, the speciation matrix consists of columns for each required pollutant-to-species transformation and includes an entry for each source. The actual speciation matrix contains the factors for the pollutant-to-species calculation instead of the source numbers shown in the figure. Note that speciation matrices depend only upon the chemical mechanism and the inventory, and they are therefore independent of the other factor-based operations for emissions processing.</para>

<remark>figure</remark>

<para>Chemical speciation processing addresses the following issues during emissions processing:</para>

<orderedlist>
<listitem>
<para>Splitting inventory pollutants into chemical species</para>
</listitem>
<listitem>
<para>Pollutant-to-pollutant conversions</para>
</listitem>
<listitem>
<para>Checking the consistency of the speciation profiles with the inventory</para>
</listitem>table
<listitem>
<para>Setting the order of the output species</para>
</listitem>
<listitem>
<para>Creating speciation output files</para>
</listitem>
</orderedlist>

<para>In the subsections below, we provide additional detail about each of these steps, in the order in which they are listed above.</para>

<section>

<title>Splitting inventory pollutants into chemical species</title>

<para>SMOKE supports run-time, user-selected inventory pollutants and chemical mechanisms. Before running the chemical speciation step, the only relevant information that SMOKE has is information about the inventory pollutants. After Spcmat runs, SMOKE then has the instructions for supporting a specific chemical mechanism, and through the speciation matrices, SMOKE will be able to generate model-ready emissions for the specific chemical mechanism set by the user. The inventory pollutants relate to the chemical mechanism because certain pollutants are needed to create certain species, but the pollutants do not dictate the chemical mechanism. As a SMOKE user, you must be aware of what pollutants are required to generate the model species needed by a chemical mechanism requires.</para>

<para>As we just mentioned, SMOKE learns of the species being created for a given run through the Spcmat program. The chemical speciation profiles input file (GSPRO) is the data file that controls the chemical species SMOKE will create. It contains the chemical speciation profile code, the pollutant-to-species relationships, and both mole-based and mass-based conversion factors. The format and contents of this file are described in detail in Chapter 8. SMOKE includes several default GSPRO files to support many chemical mechanisms; these default files are described in Chapter 3. How to select an existing chemical mechanism or specify a new one, and how to ensure that the GSPRO file is consistent with other input files, are described in Chapter 4.</para>

<para>Spcmat uses a cross-reference file to assign the chemical speciation profiles to the inventory sources and pollutants. The cross-reference file can assign the profiles using a hierarchy that is based on the source characteristics; a detailed list of valid assignments is given in Chapter 8 as part of the Spcmat program description. All assignments are pollutant-specific, such that each pollutant for a source can (and often should) use a different speciation profile. The cross-reference file can also assign a default profile, and some pollutants that have only one way of being speciated (e.g., mapping the CO pollutant to the CO species) receive a default profile for every source. When Spcmat makes default assignments, you can optionally choose to have warnings given for all of these assignments using the REPORT_DEFAULTS option. Spcmat will also produce a warning about any inventory pollutants that are not assigned a speciation profile, because this will result in the emissions for that pollutant being dropped by SMOKE.</para>

<para>Spcmat creates two speciation matrices for each run: a mole-based matrix and a mass-based matrix. The speciation profile file (GSPRO) has different factors for mass- and mole-based conversions. It is not trivial to convert between mass- and mole-based factors for some chemical mechanisms like CB4, which use aggregates of chemical compounds or parts of compounds to define the model species. One cannot simply use a molecular weight to convert accurately, because the molecular weight of the chemical species is different for every speciation profile. This is because different proportions of chemical compounds are present in each speciation profile, so even though the species are the same, their molecular weights are different from profile to profile. This is why SMOKE has the two speciation matrices. The mole-based matrices are used to create the model-ready files, and the mass-based matrices are used only to create the reports that require tons, kilograms, grams, or other mass units. One peculiarity of the mole-based matrix is that particulate species emissions cannot be expressed in moles, so the units are still grams in the mole-based matrices for particulate species.</para>

<para>Chemical speciation has both similarities and differences from the aggregation and disaggregation that is performed during inventory import <remark>(see Section 0)</remark>. It is similar in that it involves separating one data value into more than one data value. For example, inventory disaggregation can split Mercury &amp; Compounds (CAS=199) into elemental mercury, divalent gaseous mercury, and divalent particulate mercury during inventory import of nonroad mobile sources. Similarly, NOx can be split into nitrogen oxide (NO) and nitrogen dioxide (NO<subscript>2</subscript>) during chemical speciation. Aggregation is also similar to speciation because it can map multiple pollutants or parts of pollutants into the same chemical compound, just as speciation can map parts of the different pollutants (e.g., HGSUM and HG) to the same model species (e.g., HG). On the other hand, the two concepts are different for three reasons. First, the pollutants aggregated and disaggregated by Smkinven are still considered by SMOKE to be pollutants, not species, to pass to downstream processing steps. Second, chemical speciation allows multiple split factors to be used for the same pollutant-to-species conversion, whereas inventory aggregation/disaggregation uses just one factor across the whole inventory for each pollutant-to-pollutant conversion. Third, chemical speciation also converts the units of the pollutants (tons) to the units of the species (moles for gaseous species and grams for particulate species).</para>

<para>Speciation profiles do not necessarily conserve mass. For example, it is possible to input 100 tons of VOC into the Spcmat program and have it output factors that will produce 70 tons of VOC-based species or 110 tons of VOC-based species The reduced mass occurs when some of the pollutant's mass does not map to chemically reactive species in the inventory. In some cases, the nonreactive (NR) species is included in the speciation profiles so that the speciation profiles do sum to 1. Increased mass happens because some compounds that are part of VOC may have chemical reactivity associated with two model species. Since this one part of the VOC is mapped to two model species, its mass appears to be double-counted when summing the model-species mass. This is merely an artifact of how the model species are defined and implemented in the AQM, and the AQM is responsible for accounting for such issues in its chemical mechanism.</para>

</section>

<section>

<title>Pollutant-to-pollutant conversions</title>

<para>In some cases, the pollutant available in the inventory is not the same as the pollutant for which speciation profiles have been developed. At this time, the only known case of this situation is when the inventory is collected for VOC (or ROG) but the speciation profiles are available for TOG. For this situation, VOC-to-TOG factors have been developed that Spcmat assigns to the inventory sources based on the sources' SCCs. The factors are input using the GSCNV file, which can support multiple pollutant-to-pollutant conversions in the same file. Currently, the default SMOKE GSCNV file has sections for ROG-to-TOG and VOC-to-TOG; it is described further in Chapters 3 and 8.</para>

</section>

<section>

<title>Checking the consistency of the speciation profiles with the inventory table</title>

<para>The Spcmat program checks to be sure that the two definitions of the NONHAPVOC pollutant--one from the speciation profiles (GSPRO) file and the other from the inventory table (INVTABLE) file--are consistent. When you are modeling with both criteria and toxics inventories and using toxics VOC (i.e., "integrating" toxics VOC), you must ensure that the definition of toxics VOC used in the INVTABLE file is consistent with the definition in the GSPRO file. Spcmat cannot assure that these files are consistent with each other, but does ensure that the information provided by the user is consistent; it is up to you to make sure that the information provided is correct and consistent with what is actually in the files.</para>

<para>These files need to be consistent because the same pollutants that SMOKE subtracts out of the VOC to create NONHAPVOC must also be removed when the speciation profiles are being computed. This assures that there will be no double-counting of mass when calculating model species from both toxics VOC and from the criteria aggregated VOC value. The GSPRO file format includes a header that allows you to define the toxics VOC that were removed when creating the NONHAPVOC speciation profiles. This is intended to help you ensure that the NONHAPVOC definition in the GSPRO file is consistent with the inventory table file. One important detail of how this is implemented is that Spcmat will not include inventory pollutants in the consistency check that are not actually in the inventory, even if the pollutant is listed in the NONHAPVOC definition in the GSPRO file.</para>

</section>

<section>

<title>Setting the order of the output species</title>

<para>The Spcmat program controls the order of the species in the output files. The order does not matter to any of the AQMs that SMOKE supports, so there is not very much user control of the order. Spcmat arranges the output species first by the order in which their associated pollutants appear in the inventory table (INVTABLE) file, and next in alphabetical order. For example, if an inventory included CO, NO<subscript>x</subscript>, and VOC, the CO species from the CO pollutant would be first, followed by the NO and NO<subscript>2</subscript> species for NO<subscript>x</subscript>. After that, all of the VOC species would be output in alphabetical order (e.g., ALD2, ETH, FORM, ISOP, NR, OLE, PAR, TOL, XYL). If two pollutants create the same species, the first pollutant in the INVTABLE file with which the species is associated will determine its output order.</para>

</section>

<section>

<title>Creating speciation output files</title>

<para>The last task for the chemical speciation processing is creating the speciation output files. The Spcmat program creates a mole-based speciation matrix (ASMAT_L, MSMAT_L, or PSMAT_L) and a mass-based speciation matrix (ASMAT_S, MSMAT_S, or PSMAT_S), as previously mentioned. These matrices can have any number of pollutant-to-species conversions; the Spcmat program will open multiple speciation matrix output files if the number of pollutant-to-species conversions is greater than 120 (the limit for the number of variables in an I/O API file). Spcmat opens and writes as many files with 120 variables (using the FileSetAPI wrapper) as are needed to store the data. In addition, the Spcmat program writes a supplementary speciation file (ASSUP, MSSUP, or PSSUP) that contains the speciation profile assignments for each source. The structures of all SMOKE intermediate files output by Spcmat are provided in Chapter 9.</para>

</section>

</section>

<section>

<title>Spatial processing</title>

<para>The spatial processing operation, or <emphasis>gridding</emphasis>, combines the grid specification for the air-quality modeling domain with source locations from the SMOKE inventory file. The resulting gridding matrix is a sparse matrix that describes in which grid cells the emissions for each source occur within the modeling domain. The gridding matrix is applied to the inventory emissions to transform source-based inventory emissions to gridded emissions.</para>

<para>The SMOKE Grdmat program creates the gridding matrix for area, mobile, and point sources. The gridding step is different depending on the type of source being processed.</para>

<itemizedlist>
<listitem>
<para>For area sources, county-total emissions are spread among the cells intersecting the county through the use of gridding surrogates.</para>
</listitem>
<listitem>
<para>For mobile sources, the data can be provided by county (as area sources are), or the data can be provided as line sources ("links"). County-based mobile emissions are apportioned with gridding surrogates, preferably with surrogates based on the different road types for which the mobile emissions are provided. The line-source emissions are apportioned depending on the length of the link in each cell. For on-road mobile sources, Grdmat also computes an ungridding matrix, which is needed for processing using MOBILE6.</para>
</listitem>
<listitem>
<para>For point sources, emissions are apportioned to the grid cell intersecting the point.</para>
</listitem>
</itemizedlist>

<para>As shown in Figure 2-22, the gridding matrix contains the SMOKE source IDs that intersect each grid cell, and the source-to-cell factors for each. The gridding matrix is a sparse matrix because each source intersects only a small number of cells relative to the total number of cells in the domain, and the storage format shown in the figure reflects a sparse storage format. In the example in Figure 2-22, source 1 intersects cells 1 and 2, with 10% of the emissions in cell 1 and 30% of the emissions in cell 2. The remainder of the source's emissions (60%) are either outside the grid or in other cells not shown in this example. Source 2 is completely inside the domain; 40% of its emissions are in cell 1, 30% are in cell 2, and 30% are in cell 4. If this were a point-source speciation matrix, there would be only one cell associated with each source because each point source exists in only one cell.</para>

<remark>figure</remark>

<para>Note that the gridding matrix depends only upon the source locations, the grid definition, and in some cases gridding surrogates and cross-references. It is therefore independent of the other steps of emissions processing.</para>

<para>Spatial processing addresses the following issues during emissions processing:</para>

<orderedlist>
<listitem>
<para>Defining the gridded region to output from SMOKE</para>
</listitem>
<listitem>
<para>Assigning sources to grid cells</para>
</listitem>
<listitem>
<para>Computing an ungridding matrix for on-road mobile sources</para>
</listitem>
<listitem>
<para>Creating the spatial allocation output files</para>
</listitem>
</orderedlist>

<section>

<title>Defining the gridded region to output from SMOKE</title>

<para>The grid for which the spatial allocation step outputs the gridding and ungridding matrices depends upon the IOAPI_GRIDNAME_1 environment variable setting and the GRIDDESC input file. The file contains all of the settings needed by the I/O API to define each grid (together, these settings are called a grid definition), and it contains many such grid definitions. The IOAPI_GRIDNAME_1 setting selects the specific grid to use during a specific run, and it must match the grid name provided in the GRIDDESC file. The settings used by the I/O API to define a grid are documented as part of the I/O API at <ulink url="http://www.cep.unc.edu/empd/EDSS/ioapi/GRIDS.html" />.</para>

<para>There is another file format, called the G_GRIDPATH file, that can be provided to Grdmat instead of the GRIDDESC file. However, the G_GRIDPATH format allows only one grid per file. It is included as an acceptable input to SMOKE to allow SMOKE to be backwardly compatible with previous versions. All new users are advised to use a single GRIDDESC file to store all of their modeling grids, instead of using multiple G_GRIDDPATH files, one for each grid. The IOAPI_GRIDNAME_1 setting is not used by Grdmat when the G_GRIDPATH format is used.</para>

<para>The gridded region selected at run time does not need to cover all of the counties in the inventory. If the gridded region is smaller than the inventory, this processing step will still include the counties or parts of counties that do not overlap the grid. This allows users who are performing emissions processing using nested grids to import the inventory once and apply gridding matrices for each grid to the same inventory, creating gridded emissions for all nested grids without having to adjust the inventory files. The downside of this approach is that SMOKE does not give a warning if a county that is in the inventory is not in the spatial surrogates, or if a lat-lon coordinate is not inside the grid. It assumes that these sources are intended to be dropped and proceeds without comment. Thus, you must ensure that your surrogate files contain the counties in your inventory that are inside the grid and that your lat-lon coordinates for point and link sources are correct.</para>

</section>

<section>

<title>Assigning sources to grid cells</title>

<para>SMOKE takes a different approach to assigning sources to grid cells for each SMOKE source category and some special cases. In the following subsections, we describe the concepts of spatial allocation of (1)  area/nonpoint, nonroad, mobile, and on-road mobile nonlink sources; (2) area-to-point sources; (3) pregridded area sources, (4) on-road mobile link sources, and (5) point sources.</para>

<section>

<title>Spatial allocation of area/nonpoint, nonroad mobile, and on-road mobile nonlink sources</title>

<para>The area/nonpoint, nonroad mobile, and on-road mobile nonlink sources all have emissions in the inventory with county-total values. To spatially allocate these emissions, factors must be assigned to each source to distribute the county-total emissions across the grid cells that intersect the county. This is accomplished using a cross-referencing approach that assigns a spatial surrogate to each source in the inventory.</para>

<para>The general case of cross-referencing and profiles was described in Section 2.4. During spatial allocation with the Grdmat program, the spatial cross-reference file (AGREF or MGREF) assigns spatial surrogates for area/nonpoint, nonroad mobile, and on-road mobile nonlink sources. The spatial cross-reference file associates SCCs with a spatial surrogate code, which is an arbitrary positive integer code that also appears in the spatial surrogates file along with the spatial surrogate data. It is important to ensure (if possible) that the spatial surrogate codes assigned to each SCC are actually available in the surrogate file for all counties in the inventory with that SCC. For example, if the water surrogate is assigned to motorboat sources in a given county, the spatial surrogate file should have values for the water surrogate in that county. If this is not the case, SMOKE will be forced to use a "fallback" surrogate, set with the SMK_DEFAULT_SRGID environment variable setting, which assigns a surrogate that is defined for every county in the domain (population, for example). This fallback approach prevents the emissions for that county and source category from being dropped from the emissions processing. Grdmat produces warnings in the log file whenever the fallback surrogate is used. If the fallback surrogate also causes the emissions to go to zero, an additional warning that indicates the emissions are being dropped is also written to the Grdmat log file.</para>

<para>The spatial surrogates files (AGPRO or MGPRO) contain factors for allocating emissions from a county-total to a gridded value, and there are usually many sets of factors available for each county. The data in this file are used to estimate the spatial distribution of county-total emissions inside the county. These sets of factors are calculated from other data that are available at a finer resolution than the county data, such as census tracks. Examples of commonly available surrogates are population, housing, urban area, rural area, agriculture, water, railroads, major highways, airports, ports, and forest. To ensure correct emissions processing, it is essential that all counties within the inventory and domain be included in the spatial surrogates file. If any counties inside the domain are left out of the file, then SMOKE will not be able to detect this; instead, it will act as though the county is outside of the domain and drop the emissions.</para>

<para>Because the surrogate codes are arbitrarily assigned, you need to make sure that the spatial cross-reference is developed in conjunction with the spatial surrogates so that the surrogate codes used in each are consistent. It is not generally wise to develop surrogates without a cross-reference, unless the surrogate codes used in the surrogates file are set to the same values that are in a spatial cross-reference file that is already available.</para>

<para>Figure 2-23 illustrates spatial allocation of all county-based emissions sources. The box at the left represents a grid with a single county, shaded in gray to represent an emissions value in that county. The arrow represents the spatial allocation steps. The box at right shows that all grid cells that intersect the county have emissions contributed by the county. The two darker cells could represent cells in which a large city causes the population surrogate to concentrate the emissions in those two cells, while the surrounding regions within the county have lower emissions.</para>

<remark>figure</remark>

</section>

<section>

<title>Spatial allocation of area-to-point sources</title>

<para>In some cases, the inventory import processing (Smkinven program) will have assigned point locations to some of the county-based inventory sources such as airports. Spatial allocation for these sources ignores the assigned surrogate, sets the surrogate assignment to 0, and uses the point-source locations and assigned fractions to determine the cells and associated magnitudes of the emissions from the county-total source.</para>

</section>

<section>

<title>Spatial allocation of pregridded sources</title>

<para>When pregridded data are provided to SMOKE, the spatial allocation step must still be run. In this case, Grdmat just maps the pregridded emissions to the correct cells and outputs a simple gridding matrix that is used in downstream processing steps to maintain the pregridded nature of the inventory.</para>

</section>

<section>

<title>Spatial allocation of on-road mobile link sources</title>

<para>On-road mobile link sources are straight line segments within a county that have emissions and/or VMT data associated with them as well as the latitudes and longitudes of the starting and ending positions of the link. SMOKE determines the fraction of each link within each grid cell, and then assigns the emissions or VMT from the link to those grid cells that the link intersects, by weighting the emissions according to the length of the link within a grid cell divided by the total length of the link.</para>

<para>As shown in Figure 2-24, three link sources in the left-hand diagram are joined at their ends to represent a road cutting through the county. As shown in the figure, link sources do not bisect county boundaries (new link sources would be used to continue the road into an adjoining county). The three portions of the link have different VMT values, as represented by the three different shades of gray that highlight the link. The arrow represents the spatial allocation step; the details of the calculation are included in Chapter 6 where the Grdmat program is described in more detail. In the right-hand diagram, the cells that intersect the link sources are shaded, with darker shading used in cells in which the link intersects the cell more and the link has higher VMT.</para>

<remark>figure</remark>

</section>

<section>

<title>Spatial allocation of point sources</title>

<para>Spatial allocation of point sources in Grdmat is very straightforward. The Grdmat program simply determines which cell the lat-lon coordinates are in and assigns all emissions from that source to a single grid cell. Except for (1) plume-in-grid sources for all models and (2) elevated sources for UAM-based models <remark>(both addressed in Section 2.12)</remark>, this means that the AQMs do not have information about where in the grid cell the point source is located.</para>

</section>

</section>

<section>

<title>Computing an ungridding matrix for on-road mobile sources</title>

<para>For on-road mobile sources when using MOBILE6, the gridded temperature data must be converted to county-specific temperature data to facilitate the very large number of MOBILE6 runs that will ultimately be performed. This is done in SMOKE by computing a weighted-average temperature for each county, with the weighting calculation being done using the VMT data. Each weighting factor is the VMT in the grid cell divided by the total county VMT, resulting in a factor for each grid cell that intersects the county. These factors are stored in the "ungridding" matrix created during spatial allocation by the Grdmat program when running on-road mobile sources in SMOKE. Figure 2-25 shows how the spatially varied temperatures at left would be averaged using the averaging weights to calculate a temperature for each county in the domain.</para>

<remark>The handling of temperatures for MOBILE6 by SMOKE is further described in Section 2.16.</remark>

<remark>figure</remark>

</section>

<section>

<title>Creating the spatial allocation output files</title>

<para>The last task for the spatial allocation processing is creating the gridding output files. The Grdmat program creates a gridding matrix (AGMAT, MGMAT, or PGMAT) and for on-road mobile sources an ungridding matrix (MUMAT). These matrices contain all of the factors needed to calculate gridded emissions from a source-based inventory. In addition, the Grdmat program writes a supplementary output file (AGSUP or MGSUP) that contains the spatial surrogates assigned for each source, indicates whether the assignment was a primary or a fallback, and identifies area-to-point sources. The structures of all SMOKE intermediate files output by Grdmat are provided in Chapter 9.</para>

</section>

</section>

<section>

<title>Growth processing</title>

<para>Growth processing creates emission data sets for years other than a year for which an emissions inventory is available. For example, if an inventory is available for 1996, but the modeling effort involves predicting ozone levels in 2007, then the emissions inventory must be grown to the year 2007. Previous versions of this document used the term "projection" for this function; in this version, however, "projection" refers to both growth of emissions (which is covered in this subsection) and control of emissions (addressed in Section 2.13). The Cntlmat program performs both growth and control functions. In growth processing, Cntlmat creates a growth matrix that contains the growth factors for each source and pollutant in the inventory. The Grwinven program then combines the growth matrix with the emission inventory to create a grown emission inventory.</para>

<para>If no new sources are being added when moving from the inventory year to the future year, then Grwinven can be used with the base case inventory and the growth matrix based on it. If new sources must be added, then the data structuring step (performed by Smkinven) must be rerun for the new number of sources, followed by running Cntlmat to create the growth matrix; then Grwinven applies the matrix to the new inventory file. Alternatively, users may elect to prepare a future-year inventory and import it directly with Smkinven, which skips the Cntlmat and Grwinven steps.</para>

<para>Figure 2-26 shows the relationship between the inventory and the growth matrix created by Cntlmat, which consists of columns for each pollutant being grown from one year to another. The actual growth matrix contains the growth factors instead of the source numbers shown in the figure. If the growth factors are the same for every pollutant in the inventory, then only one column, called "pfac," is included in the growth matrix, instead of using duplicate columns for every pollutant. The growth matrix depends only upon the growth factors and the inventory, so it is therefore independent of other factor-based operations for emissions processing; however, growth of the inventory (using the Grwinven program) must occur before the temporal allocation step when creating model-ready emissions using inventories grown with SMOKE.</para>

<remark>figure</remark>

<para>Grwinven combines the intermediate inventory files with one or more growth matrices to create a new intermediate inventory file with the same structure as the original file but with a future (or past) year stored in the header of this file.</para>

<para>In growth processing, the Cntlmat program addresses the following emissions processing needs when creating the growth matrix:</para>

<orderedlist>
<listitem>
<para>Assigning growth factors</para>
</listitem>
<listitem>
<para>Reporting on the factors assigned to each source in the inventory</para>
</listitem>
<listitem>
<para>Creating the growth matrix</para>
</listitem>
</orderedlist>

<para>The Grwinven program addresses the remaining needs to create a grown inventory:</para>

<orderedlist continuation="continues">
<listitem>
<para>Applying the growth matrix</para>
</listitem>
<listitem>
<para>Creating a grown inventory file</para>
</listitem>
</orderedlist>

<para>Each of the issues in the list above is addressed in the following subsections, in the order in which they appear in the list.</para>

<section>

<title>Assigning growth factors</title>

<para>The Cntlmat program assigns growth factors using a cross-reference approach similar to the approaches used for chemical speciation and gridding. Cntlmat reads the information about the growth factors from the /PROJECTION/ packet in the control input file (GCNTL). As described in detail in the Cntlmat section of Chapter 6, GCNTL can assign growth factors by state/county FIPS code, SCC, SIC, MACT, pollutant, and various combinations of these. The most specific entry is selected by Cntlmat based on the hierarchy described in Chapter 6. Since the /PROJECTION/ packet includes the growth factors, there is no need for a profile file (like those used for chemical speciation).</para>

<para>Part of the /PROJECTION/ packet indicates the base year (the year from which emissions will be grown) and the future or past year (the year to which the emissions will be grown). Having the dates in this packet ensures that Cntlmat will apply the growth factors to only those sources with a base year that matches the growth factors. If there are multiple base years in the inventory file, only some of the sources (those with a year that matches the base year in the packet) will be assigned a growth factor.</para>

<para>Only one /PROJECTION/ packet may be input to Cntlmat for a given run. This means that if several inventory years need to be grown to a single year, several steps will need to be taken. The best approach in this case is to first import the inventory data for all years into a single inventory. Then, you would run the Cntlmat program with different /PROJECTION/ packets, once for each year-to-year transformation. Finally, the Grwinven program would be used to apply all resulting growth matrices to the inventory in a single run. This approach will work only if the destination years from all of the /PROJECTION/ packets are the same.</para>

<para>The growth factors may include both positive growth (factors greater than 1) or negative growth (factors less than 1) or no growth (factors equal to 1). The /REACTIVITY/ packet can also be used to grow emissions to a future or past year, but a different approach is used that includes a "phase-in" period and other differences. <remark>We describe this packet in Section 2.14.</remark></para>

</section>

<section>

<title>Reporting on the factors assigned to each source in the inventory</title>

<para>In addition to actually applying the growth factors, the growth processing reports the factors that were applied to each source. Cntlmat writes a report that includes the source characteristics and the factor from the /PROJECTION/ packet assigned to the source. For example, the area-source report would include the state, county, and SCCs along with the factor assigned to the source. Only those sources that have growth factors applied are included in the report. This report permits you to verify that the assignments you intended were in fact made by the program. The report is called the APROJREP, MPROJREP, or PPROJREP file for SMOKE area, mobile, and point sources, respectively.</para>

</section>

<section>

<title>Creating the growth matrix</title>

<para>The growth matrix created by Cntlmat contains the growth factors for each source and pollutant. If pollutant-specific growth factors are used, the growth matrix contains one column for each pollutant that is grown. The names of the columns are the same as the names of the pollutants from the SMOKE inventory file, so that the Grwinven program knows which column to apply to which inventory pollutant. If the growth factors are applied uniformly to all pollutants in the inventory, then Cntlmat does not output a separate but identical factor for each pollutant. Instead, it writes only one column in the matrix, with the name "pfac."</para>

</section>

<section>

<title>Applying the growth matrix</title>

<para>The Grwinven program applies the growth factors to the inventory pollutants by simply multiplying the growth matrices for the pollutants with the annual and average-day emission values. It reads in the SMOKE intermediate inventory file and up to 80 growth matrices, then applies the growth factors from all growth matrices to the appropriate pollutants. If a growth matrix has the "pfac" variable, Grwinven applies the factors to all pollutants in the inventory; if instead the matrix has pollutant-specific entries, the factors are applied by matching the pollutants between the matrix and the inventory.</para>

<para><remark>As is further described in Section 2.14, </remark>Grwinven can also apply the multiplicative control matrix at the same time it applies the growth matrix, and the total number of growth and control matrices that can be applied in one run is 80. The Grwinven program cannot be applied to a SMOKE intermediate file that Grwinven has created, because of the /FYEAR/ header element.</para>

</section>

<section>

<title>Creating a grown inventory file</title>

<para>After applying the growth factors to the SMOKE intermediate inventory file, the Grwinven program writes a new SMOKE intermediate inventory file that contains the new, grown emissions. Grwinven writes only the I/O API part of the inventory and not the ASCII part, because the ASCII part that contains the state/county codes, SCCs, and other character strings does not change between the base and future or past year. All of the sources in the base and grown inventory files are the same; the difference is in their emissions values.</para>

<para>Grwinven adds a header element to the I/O API part of the inventory file that indicates the file was created using Grwinven and a growth matrix. The header element is the /FYEAR/ element, which is followed by the date of the future year (for example, /FYEAR/ 2018). Other programs (such as Temporal) will recognize the /FYEAR/ header element and alter its messages to indicate that a future year is being processed.</para>

<para>Grwinven can also output the IDA inventory format (in addition to I/O API format), which is also a SMOKE input format. This is possible only for inventories imported in EMS-95, IDA, or the nonroad SMOKE toxics format. Because the point and nonpoint toxics inventories contain additional fields that are not supported by the IDA format, Grwinven cannot output IDA format when these formats were used to create the SMOKE intermediate inventory file.</para>

</section>

</section>

<section>

<title>Control processing</title>

<para>The control processing operation applies control factors from a control input file (GCNTL) based on source characteristics in the inventory. The control scenario definition contains instructions on how to change the values of emissions based on regulations affecting industrial activities or personal behaviors. The resulting control matrix, created by the Cntlmat program, takes the form of the matrix shown in Figure 2-26. The control matrix depends only upon the source characteristics in the SMOKE inventory and the set of controls chosen, so control processing can therefore be decoupled from the rest of the processing steps. The Cntlmat program performs control processing for SMOKE area, mobile, and point sources; however, much more complex controls for on-road mobile sources can also be implemented when using MOBILE6 through SMOKE to calculate emission factors and apply them to VMT.</para>

<para>The emissions control factors can be applied in addition to the emissions growth factors <remark>(described in Section 2.13)</remark>, and the net effect of this growth and control is called "projection." SMOKE control processing can create two types of control matrices during a given run: a multiplicative control matrix and a reactivity control matrix.</para>

<para>The Cntlmat program performs the following emissions processing steps in creating the control matrices:</para>

<orderedlist>
<listitem>
<para>Assigning control factors from six control packets to the sources</para>
</listitem>
<listitem>
<para>Reporting on factors assigned to each source in the inventory</para>
</listitem>
<listitem>
<para>Creating the multiplicative control matrix</para>
</listitem>
<listitem>
<para>Creating the reactivity control matrix</para>
</listitem>
</orderedlist>

<para>The Grwinven program can also address the following control processing steps:</para>

<orderedlist continuation="continues">
<listitem>
<para>Applying the multiplicative control matrices to the inventory</para>
</listitem>
<listitem>
<para>Creating a controlled intermediate inventory file</para>
</listitem>
</orderedlist>

<para>Finally, the Smkmerge program optionally addresses the following control processing step:</para>

<orderedlist continuation="continues">
<listitem>
<para>Applying the multiplicative and/or reactivity control matrices to the inventory to create model-ready inputs.</para>
</listitem>
</orderedlist>

<para>The next seven subsections explain the concepts involved with these processing steps in more detail.</para>

<section>

<title>Assigning control factors from six control packets to the sources</title>

<para>SMOKE provides six control packets with which users can control emissions:</para>

<itemizedlist>
<listitem>
<para>/MACT/ contains MACT-based assignments for toxics inventories and can be used to apply general MACT controls to sources affected by MACT regulations. This packet contributes to the multiplicative control matrix.</para>
</listitem>
<listitem>
<para>/CONTROL/ contains settings for control efficiency, rule effectiveness, and rule penetration that can be applied by nearly any combination of source characteristics, even targeting a specific source. This packet contributes to the multiplicative control matrix. This packet cannot appear in the same input file with an /EMS_CONTROL/ packet.</para>
</listitem>
<listitem>
<para>/EMS_CONTROL/ contains settings for control efficiency, rule effectiveness, and rule penetration for both the base year <emphasis>and</emphasis> a future year. It also contains a point-source conversion factor and an aggregated control factor that can override everything else in the packet. This packet contributes to the multiplicative control matrix. This packet cannot appear in the same input file with a /CONTROL/ packet, and it can be used for point sources only.</para>
</listitem>
<listitem>
<para>/CTG/ contains settings for control technology guideline (CTG) controls, MACT controls, and reasonably available control technology (RACT) controls. It contributes to the multiplicative control matrix.</para>
</listitem>
<listitem>
<para>/ALLOWABLE/ contains county-specific, SIC-specific, SCC-specific controls, caps, and replacement emissions. It contributes to the multiplicative control matrix.</para>
</listitem>
<listitem>
<para>/REACTIVITY/ contains settings needed for reactivity-based controls and creates the reactivity control matrix.</para>
</listitem>
</itemizedlist>

<para>Chapter 6 describes the Cntlmat program in more detail, including the cross-reference hierarchy of these packets and how they relate to one another. All packets can be included in a single Cntlmat run, with the exception of the /CONTROL/ and /EMS_CONTROL/ packets (either one or the other of these can be included, but not both). In general, these packets can assign control factors by state/county FIPS code, SCC, SIC, MACT, pollutant, other plant-specific source characteristics, and various combinations of these. Some packets have more limitations on the source characteristics and attributes that can be included in the assignment.</para>

</section>

<section>

<title>Reporting on factors assigned to each source in the inventory</title>

<para>In addition to applying the factors, the control processing also reports the factors that were applied to each source. The Cntlmat program writes reports that include the source characteristics and the factors from some of the packets assigned to the sources. The reports include:</para>

<itemizedlist>
<listitem>
<para><emphasis role="bold">ACREP, MCREP, or PCREP:</emphasis> For area and mobile sources, this report includes emissions before and after all multiplicative controls have been applied by state, county, and SCC. For point sources, the report includes emissions before and after all multiplicative controls by facility.</para>
</listitem>
<listitem>
<para><emphasis role="bold">AREACREP, MREACREP, PREACREP:</emphasis> For pollutants controlled with reactivity controls (usually VOC), this report includes source number, base-year emissions, replacement base-year emissions, projection factor, future-year SCC, future-year speciation profile number, and market penetration rate of reactivity control. This report is the only reactivity report that can be generated by SMOKE because the Smkreport program cannot yet import and apply the reactivity matrix to generate reports.</para>
</listitem>
<listitem>
<para><emphasis role="bold">ACSUMREP, MCSUMREP, PCSUMREP:</emphasis> For each source, this report includes the specific multiplicative controls that were applied to each source. It includes the emissions before and after each control, as well as the control factor that was applied. The control packet from which each control came is included in the report. The reactivity controls are not included in this report.</para>
</listitem>
</itemizedlist>

</section>

<section>

<title>Creating the multiplicative control matrix</title>

<para>Cntlmat creates the multiplicative control matrix based on the information contained in the control packets. The multiplicative control matrix contains one column of control factors for each pollutant that is grown during growth processing, and each row in the matrix represents a source. The names of the columns are the same as the names of the pollutants from the SMOKE inventory file, so that either the Grwinven or the Smkmerge program knows which control column to apply to which inventory pollutant.</para>

</section>

<section>

<title>Creating the reactivity control matrix</title>

<para>Reactivity controls have been included in SMOKE to allow users to examine what happens to the air quality modeling results when the chemical mixture of the emissions is changed to reduce its ozone-forming potential. Examining the effect of reactivity controls is known as "reactivity assessment." The implementation of this type of control includes permitting users to reset the base-year emissions, reset the SCC, and reset the chemical speciation profile. The controls can be applied to all sources that match an SCC or a specific facility or process within a facility.</para>

<para>Several issues are important when addressing emissions processing requirements for reactivity assessments. Reactivity assessment involves replacing one compound in the inventory by another compound. This replacement can impact emission projections, the total magnitude of the inventory pollutants, and the associated SCCs. The market penetration of the replacement compound may vary in time and space, which affects the future-year emissions. Also, the replacement compound may be needed in much greater or much smaller amounts, thereby affecting the total inventory emissions. Finally, if a different process is required in order for a source to use the different compound, the SCC for that source may change.</para>

<para>The scale of the reactivity assessment is important; it could be local, statewide, or national. A local case could involve investigating reactivity for one source. A statewide case could be implementing a change in compound based on reactivity considerations for a State Implementation Plan (SIP), and this would affect sources across the state. A national case could involve an EPA investigation of the formulation of nationally distributed consumer products.</para>

<para>In addition, exemptions from controls for certain sources must be permitted as part of an emissions control strategy. These exemptions can occur when a reactivity assessment determines that certain compounds and/or processes do not significantly affect pollution formation.</para>

<para>To address these issues, SMOKE is able to target changes in a VOC for specific classes of VOC emissions, and address the spatial and temporal considerations implied by market penetration issues. Furthermore, when replacement options are being investigated, the correct replacement operations are facilitated by SMOKE. These operations include selecting sources, changing underlying pollutant emissions, changing SCCs, correctly projecting future-year emissions based in part on market penetration issues, and appropriately speciating emissions for the new compound.</para>

<para>For a single run of Cntlmat, reactivity controls can be applied to only one pollutant, typically a VOC pollutant. Therefore, if you have more than one VOC pollutant in the inventory (e.g., a toxics VOC and a particulate pollutant), then separate reactivity matrices will need to be created for each pollutant that receives reactivity controls, and these controls will need to be applied in separate SMOKE runs - combining all model-ready emissions together using the Mrggrid program instead of the Smkmerge program. Use of Mrggrid is required because the Smkmerge program, which is used to apply the reactivity matrices <remark>(as described in Section 2.13.7)</remark>, can apply only one matrix for each run, and the outputs of Smkmerge cannot be used to apply another reactivity control matrix.</para>

</section>

<section>

<title>Using Grwinven to apply the multiplicative control matrices to the inventory</title>

<para>The Grwinven program applies the multiplicative control matrices to the inventory pollutants by multiplying the control factors for the pollutants with the annual and average-day emission values. (Reactivity matrices cannot be applied by Grwinven; only the Smkmerge program can apply those<remark>, as discussed in Section 2.13.7</remark>.) Grwinven reads in the SMOKE intermediate inventory file and up to 80 control matrices and then applies the control factors from all matrices to the appropriate pollutants.</para>

<para><remark>As discussed in Section 2.12.4, </remark>the Grwinven program can also apply growth matrices at the same time it applies control matrices, and the total number of growth and control matrices that can be applied in one run is 80. If desired, the control processing features of Grwinven can be used on a SMOKE intermediate file that has been created by Grwinven with grown and/or controlled emissions, as long as no <emphasis>growth</emphasis> processing features are included in that second pass. <remark>(See Section 2.12.4 for discussion of this restriction on applying growth matrices, caused by Grwinven's addition of the /FYEAR/ header element.)</remark></para>

</section>

<section>

<title>Creating a controlled intermediate inventory file</title>

<para>After applying the control factors to the SMOKE intermediate inventory file, the Grwinven program writes a new SMOKE intermediate inventory file that contains the new, controlled emissions. Grwinven writes only the I/O API part of the inventory and not the ASCII part, because the ASCII part that contains the state/county codes, SCCs, and other character strings does not change between the base and future or past year. All of the sources in the base and controlled inventory files are the same; the difference is in their emissions values.</para>

<para>Grwinven can also output the IDA inventory format (in addition to I/O API format), which is also a SMOKE input format. This is possible only for inventories imported in EMS-95, IDA, or the nonroad SMOKE toxics format. Because the point and nonpoint toxics inventories contain additional fields that are not supported by the IDA format, Grwinven cannot output IDA format when these formats were used to create the SMOKE intermediate inventory file.</para>

</section>

<section>

<title>Using Smkmerge to apply the multiplicative and/or reactivity control matrices to the inventory to create model-ready inputs</title>

<para>The Smkmerge program is a second option for applying control matrices. Smkmerge can apply both multiplicative control matrices and reactivity control matrices; it is the only program that can do the latter. Because the overall purpose of Smkmerge is to create the model-ready input files for an AQM, the result of using Smkmerge to apply control matrices is a controlled, model-ready file, as opposed to the controlled intermediate inventory file output by Grwinven.</para>

<para>Smkmerge is limited to applying one control matrix and one reactivity matrix for each SMOKE source category (area, mobile, or point). Therefore, if multiple reactivity control matrices need to be applied to create a single set of model-ready emission inputs, then the processing must be done as multiple SMOKE runs. This includes separating the sources that need different controls into separate inventory files and performing all SMOKE processing steps separately on the runs, using different reactivity controls for each. The resulting two or more sets of model-ready emissions should not have duplicate sources if the inventories were separated correctly at the start, and the model-ready files are combined using the Mrggrid program<remark>, as discussed in Section 2.13.4</remark>.</para>

</section>

</section>

<section>

<title>Elevated-source processing</title>

<para><remark>As introduced in Section 0, </remark>there are two major approaches to processing elevated point sources for air quality modeling. The first approach is to have SMOKE compute the layer assignments for the point sources; this method is used for the CMAQ and MAQSIP models. The second approach, which is used for the UAM models, REMSAD, and CAMX, is to select specific sources as elevated and then create a special elevated-point-source file that contains the information needed so that the AQM can compute the plume rise. In both cases, users can select elevated sources specifically (in the second approach, that selection is mandatory). Also, PinG sources can be selected in both cases.</para>

<para>The two approaches have some steps that are the same and some that are different. The rest of this section is split into the following two subsections, one for each elevated-point-source processing approach:</para>

<orderedlist>
<listitem>
<para>Computing layer fractions for CMAQ and MAQSIP</para>
</listitem>
<listitem>
<para>Creating an elevated-source file for UAM, REMSAD, and CAM<subscript>X</subscript></para>
</listitem>
</orderedlist>

<para>Each subsection first overviews the steps in the approach, then gives more details one some of them.</para>

<section>

<title>Computing layer fractions for CMAQ and MAQSIP</title>

<para>The MAQSIP and CMAQ models require the layer fractions for elevated point sources to be computed by SMOKE. To do this, SMOKE performs the following steps:</para>

<itemizedlist>
<listitem>
<para>Uses the Smkinven program to import the annual, average-day, day-specific, and/or hour-specific emissions.</para>
</listitem>
<listitem>
<para>Optionally uses the Temporal program to calculate hourly emissions if emissions will be used as a criterion for selecting elevated sources or PinG sources. For example, you may wish to select facilities with NO<subscript>x</subscript> emissions greater than 100 tons/day.</para>
</listitem>
<listitem>
<para>Uses the Elevpoint program to select elevated and/or PinG sources. This step is required if modeling with PinG sources, but optional otherwise.</para>
</listitem>
<listitem>
<para>Uses the Elevpoint program to create the STACK_GROUPS file, which is needed for processing PinG sources with CMAQ.</para>
</listitem>
<listitem>
<para>Uses the Laypoint program to compute elevated plume rise for all elevated sources, and store the layer fractions for each source. This step can optionally read the output file from Elevpoint to identify the elevated sources, but otherwise will compute plume rise for all sources.</para>
</listitem>
<listitem>
<para>Uses the Smkmerge program to combine the layer fractions with the hourly emissions and optionally generate the PinG hourly emissions file for CMAQ.</para>
</listitem>
</itemizedlist>

<para><emphasis>More details on the Elevpoint steps:</emphasis> Elevpoint can select elevated and PinG sources using multiple criteria based on emissions values, emissions rank, stack parameters, plant numbers, and an analytical plume rise calculation. The elevated criteria and PinG criteria are provided to Elevpoint using a file called PELVCONFIG. You must configure this file to contain the criteria needed to select elevated and PinG source (if these selection are needed at all). If emissions values is one of the criteria, the Elevpoint program reads all of the hourly point-source files using the PTMPLIST file. This file is a list of all PTMP files that will be evaluated to determine which sources have maximum daily emissions that exceed the specified selection criteria or to determine the emissions rank. Only the maximum daily facility-total emissions can be used by Elevpoint to select sources based on emissions.</para>

<para>The elevated sources and PinG sources can each be selected using different criteria. In general, there are many more elevated sources than PinG sources for typical applications of SMOKE and AQMs. Elevpoint also permits you to group PinG sources so that they are treated as a single source in the PinG rise calculation by CMAQ. Grouping is useful to reduce the total number of PinG stacks processed by CMAQ (PinG processing is a computationally expensive calculation). Using grouping makes sense when several stacks at the same plant have the same, or nearly the same, stack parameters. When that is true, the emissions from the multiple stacks can be grouped and treated as a single PinG stack. Finally, there are two SMOKE settings (SMK_ELEV_METHOD and SMK_PING_METHOD) that instruct Elevpoint and other SMOKE programs to actually use these settings to select the sources. If these settings are not set to "1" the elevated and PinG selections will not be made, and so will not affect any downstream processing steps.</para>

<para><emphasis>More details on the Laypoint step:</emphasis> In this CMAQ/MAQSIP approach, Laypoint uses gridded, hourly meteorological data and stack parameters to calculate the plume rise for all point-source emissions. The program's approach is based on the Briggs algorithm, as explained in detail in Chapter 6, and provides the top and bottom heights of the plume. Laypoint uses these heights to compute the plumes' distributions into the vertical layers that the plumes intersect, using the pressure difference across each layer over the pressure difference across the entire plume as a weighting factor to make this calculation. This approach gives plume fractions by layer and source. Only these fractions are stored in the output file (PLAY) from the Laypoint program (not the emissions in each layer).</para>

<para>If explicit plume rise sources (e.g., wildfires with precomputed hourly plume rise) are included in the inventory, Laypoint will skip the plume rise calculation for these sources. Instead, it will use the hourly data from the SMOKE PHOUR intermediate file, which describe the fraction of emissions in layer 1 and the top and bottom of the plume. Laypoint will combine these data with the pressure weights used for all elevated point sources to compute the fraction of emissions to go into each layer.</para>

<para><emphasis>More details on the Smkmerge step:</emphasis> Smkmerge applies the layer fractions from Laypoint to the elevated sources to compute the emissions in each layer. This approach has the advantage of allowing you to avoid repeating the plume rise calculations for each control strategy or grid. If the SMK_PING_METHOD setting (discussed above) indicates that the special CMAQ PinG file should be created, the Smkmerge program will also output this special file, called the PINGTS_L file. It contains the hourly, speciated emissions for each PinG source (which could be a stack group, as explained above).</para>

<para><emphasis>Optional use of Smkreport:</emphasis> Smkreport can apply the layer fractions and elevated or PinG statuses to the inventory to generate reports that include layer information and/or the elevated status. This reporting could be used, for example, to create a list of all PinG sources in the inventory, or to determine the elevated versus layer-1 emissions by state or SCC.</para>

</section>

<section>

<title>Creating an elevated-source file for UAM, REMSAD, and CAM<subscript>X</subscript></title>

<para>The other approach to modeling elevated sources is to create an elevated-point-source input file for one of the UAM models, REMSAD, or CAM<subscript>X</subscript>. To do this, SMOKE performs the following steps:</para>

<itemizedlist>
<listitem>
<para>Uses the Smkinven program to import the annual, average-day, day-specific, and/or hour-specific emissions.</para>
</listitem>
<listitem>
<para>Optionally uses the Temporal program to calculate hourly emissions if emissions will be used as a criterion for selecting elevated sources or PinG sources. For example, you may wish to select facilities with NOx emissions greater than 100 tons/day.</para>
</listitem>
<listitem>
<para>Uses the Elevpoint program to select elevated and optionally PinG sources. Unlike processing for CMAQ or MAQSIP, this step is always required.</para>
</listitem>
<listitem>
<para>Uses the Elevpoint program to create the STACK_GROUPS file, which is needed for creating the elevated-point-source file with Smkmerge.</para>
</listitem>
<listitem>
<para>Uses the Laypoint program to compute elevated plume rise for explicit plume rise sources, and store the layer fractions for the explicit sources only.</para>
</listitem>
<listitem>
<para>Uses the Smkmerge program to combine the STACK_GROUPS information, optional explicit plume rise information, and the hourly emissions to generate an ASCII elevated-point-source file with optional PinG flags.</para>
</listitem>
</itemizedlist>

<para><emphasis>More details on the Elevpoint steps:</emphasis> The primary difference between this approach and that for the CMAQ and MAQSIP models is that the Elevpoint processing step is required. Traditionally, elevated point sources have been selected for the UAM, REMSAD, or CAM<subscript>X</subscript> models using the analytical plume rise calculation. While Elevpoint can perform this calculation and use it exclusively to determine the elevated sources, you can also use the other selection criteria if desired: emissions values, emissions rank, stack parameters, and plant codes. <remark>As described in Section 0, </remark>if the selection criteria include emissions, then the PTMPLIST file will be used to input all hourly emissions files for the entire modeling episode.</para>

<para><emphasis>More details on the Laypoint step:</emphasis> If explicit plume rise sources (e.g., wildfires with precomputed hourly plume rise) are included in the inventory, you must run the Laypoint program to compute the layer fractions for these sources only. This is the only reason Laypoint would be run in the UAM/REMSAD/CAM<subscript>X</subscript> processing approach, and it requires that the EXPLICIT_PLUME_YN and the HOUR_PLUMEDATA_YN settings be set to Y. These settings causes Laypoint to write the layer fractions to the PLAY_EX file instead of to the usual PLAY file. For these explicit sources, Laypoint will skip the plume rise calculation. Instead, it will use the hourly data from the SMOKE PHOUR intermediate file containing the fraction of emissions in layer 1 and the top and bottom of the plume. Laypoint will combine these data with the pressure weights used for all elevated point sources to compute the fraction of emissions to go into each layer.</para>

<para><emphasis>More details on the Smkmerge step:</emphasis> The Smkmerge program looks for the SMK_ASCIIELEV_YN setting to determine whether the ASCII output file should be created. When this is set to Y, the output files from Elevpoint (PELV and STACK_GROUPS) are read to determine which sources should not be included in the 2-D emissions output file for point sources. The emissions from these sources are instead output to an ASCII elevated file along with stack parameters and locations so that the AQM can compute the plume rise.</para>

<para>If EXPLICIT_PLUME_YN is also set to Y, Smkmerge will read the PLAY_EX file for the explicit plume sources. Since the UAM-based approach assumes that the AQM will compute the plume rise, SMOKE must manipulate the input file to trick the model into using precomputed plume rise. This is done by inserting fake stacks into the ASCII elevated file that extend to the center of each of the model layers and setting the stack parameters so that the plume rise calculation will keep the emissions associated with the fake stacks in the layer of the stack. As the emissions move from layer to layer, Smkmerge moves the reported emissions in the ASCII elevated file from fake stack to fake stack to represent the same behavior.</para>

</section>

</section>

<section>

<title>On-road mobile-source processing with MOBILE6</title>

<para>There are three extra processing steps needed when processing on-road mobile sources as compared to other sources. This processing is performed using the Mbsetup, Premobl, and Emisfac programs, which prepare the meteorology data and other SMOKE inputs for using the inventory with the MOBILE6 program, and compute emission factors that are needed when the on-road inventory includes VMT instead of, or in addition to, emissions.</para>

<para>The major steps needed for computing on-road mobile emissions using MOBILE6 are:</para>

<orderedlist>
<listitem>
<para>Group reference counties</para>
</listitem>
<listitem>
<para>Set up for the user-defined spatial and temporal averaging approach for temperatures</para>
</listitem>
<listitem>
<para>Assign the speed profiles to the sources</para>
</listitem>
<listitem>
<para>Create the speed summary file</para>
</listitem>
<listitem>
<para>Preprocess the temperatures for use by MOBILE6</para>
</listitem>
<listitem>
<para>Create a concatenated MOBILE6 input file</para>
</listitem>
<listitem>
<para>Compute the criteria and toxics emission factors using MOBILE6</para>
</listitem>
<listitem>
<para>Write the MOBILE6 emission factor intermediate files</para>
</listitem>
</orderedlist>

<para>The next eight subsections explain the concepts involved with these processing steps in more detail.</para>

<section>

<title>Group reference counties</title>

<para>The first major task for the Mbsetup program is to check and prepare the input files for use by the Premobl program. Its first major task is to set the reference counties. To do this, it reads the user-defined county cross-reference file (MCREF). This file assigns a reference county to each county in the inventory. When reading MCREF, SMOKE checks that all state and county FIPS codes in the file are integer values (no nonnumeric characters). Next, it looks for any duplicate inventory counties and gives an error message if any are found. Mbsetup will ignore any inventory counties that are not inside the grid or do not have any VMT data. Mbsetup also makes sure that all valid inventory counties (i.e., those that are inside the grid and have VMT data) have been assigned a reference county.</para>

</section>

<section>

<title>Set up for the user-defined spatial and temporal averaging approach for temperatures</title>

<para>The Mbsetup program's second major task is to preprocess the information about the spatial and temporal averaging approach for temperatures. Using the county settings input file (MVREF), Mbsetup determines both the spatial and temporal averaging for each county. All assignments are made by reference county, so that all counties assigned the same reference county must use the same approaches.</para>

<itemizedlist>
<listitem>
<para>The spatial averaging can be either (1) averaging within a county, or (2) averaging over all counties assigned to a given reference county.</para>
</listitem>
<listitem>
<para>The temporal averaging creates 24-hour temperature profiles to represent one of the following time periods: (1) a day (no averaging), (2) a week (weekly averaging), (3) a month (monthly averaging), and/or (4) an episode (episodic averaging).</para>
</listitem>
</itemizedlist>

<para>MVREF also allows you to set how to handle local roads, and you have the choice of using MOBILE6 local roads or using arterial roads with your local road speeds. When reading the file, Mbsetup checks to be sure that the reference county FIPS code and the three settings are all integers. The program gives an error for any duplicate reference counties in the file. Any lines with reference counties that are not in the MCREF file are ignored. Finally, Mbsetup checks that all reference counties have been assigned settings.</para>

<para>Mbsetup creates the time period group files (DAILYGROUP, WEEKLYGROUP, MONTHLYGROUP, and/or EPISODEGROUP) based on the settings in the MVREF file. These SMOKE intermediate files are used by Premobl to determine what type of temperature averaging the processing case used for each inventory county. Each file contains a list of the inventory counties using that type of averaging (e.g., counties in the DAILYGROUP file will use daily temperature data), along with the reference county for that inventory county and the local-to-arterial flag (this flag is not related to temperature averaging, but needs to be read by Premobl as well). If no counties use a particular type of averaging, the corresponding *GROUP file will not be created by Mbsetup.</para>

</section>

<section>

<title>Assign the speed profiles to the sources</title>

<para>The third major Mbsetup task is to preprocess speed profiles, if they are provided. Speed profiles, which can be used instead of the average-speed values in the inventory, permit hourly speeds to be assigned and used in computing the emission factors. Mbsetup first checks if the USE_SPEED_PROFILES option is set to Y, and if it is, reads and uses a user-defined speed profiles input file. Speed profiles must be used if the on-road mobile inventory does not contain any speed information.</para>

<para>If speed profiles are being used, Mbsetup reads the speed profile cross-reference file and assigns a speed profile to each source. Each line of this cross-reference file requires a FIPS code, an SCC, and a speed profile code; SMOKE verifies that the FIPS code is an integer, the SCC is 10 digits long, and the speed profile code is also an integer and is greater than zero. Note that Mbsetup does not read or process the actual speed profiles; that is handled later by Emisfac, so any inconsistencies in profile numbering will not be discovered until then. After reading the speed profile cross-reference file, SMOKE assigns the appropriate speed profile code to each source in the inventory by matching different combinations of FIPS codes and SCCs.</para>

</section>

<section>

<title>Create the speed summary file</title>

<para>The final major task for Mbsetup is to create the speed summary SMOKE intermediate file (SPDSUM), which is needed by both Premobl and Emisfac. The file lists all the sources in the inventory that need speeds, and the speed value to use for the source or the speed profile code for that source; the source's MOBILE6 facility type (freeway, arterial, local, or ramp); and the reference county to be used for that source. This file is created in such a way that sources in the same reference county that share the same speeds will be grouped together, so that the MOBILE6 calculation of their emission factors will need to be done only once in the Emisfac step.</para>

</section>

<section>

<title>Preprocess the temperatures for use by MOBILE6</title>

<para>The Premobl program preprocesses the hourly, gridded temperature data to get them ready for use by MOBILE6 in the Emisfac program. The major purposes of the preprocessing are to spatially and temporally aggregate the temperatures and to align the data's time steps with the local 6 AM to 5 AM hour range needed by MOBILE6.</para>

<para>The Premobl program must first determine whether the available meteorology data are sufficient for the calculations being requested. It compares the list of meteorology data files given in the METLIST file with the episode start date (EPI_STDATE) and episode duration (EPI_RUNLEN), calculating the required coverage period for the meteorology data. Since MOBILE6 expects hourly temperatures to be provided from 6 AM to 5 AM local time, Premobl considers this in its assessment of the available meteorology data. The earliest time needed will be 6 AM in the time zone closest to GMT (assuming that the meteorology data are in GMT). If this earliest time is earlier than the user-defined episode starting time, then the episode start date must be moved back one day. Correspondingly, the latest time needed will be 5 AM in the time zone farthest from GMT (again assuming that the meteorology data are in GMT). If this latest time is later than the episode end time, the episode ending date is moved forward one day. Using these adjusted start and end dates and times, Premobl can then determine the total number of time periods that the meteorology data must cover.</para>

<para>Before computing the averaged temperatures, Premobl checks several aspects of the input files to ensure that the averaging will be able to work properly. It verifies that the meteorology files are valid by ensuring that the user-defined temperature (TVARNAME) to use in processing is actually in the files. Premobl also ensures that the grids of the meteorology files are the same and that the time span covered by all of the files is contiguous and that the files have the proper start and ends dates and times. If there are missing meteorology data files (missing days), Premobl generates an error message. Premobl also verifies that the ungridding matrix is consistent with the inventory (i.e., the number of sources match between the two) and that the grid matches the meteorology grid.</para>

<para>To compute the averaged temperatures, Premobl first finds the *GROUP files created by Mbsetup to see which types of temperature averaging are needed. Using the information from these files, Premobl assigns the correct type of temperature averaging to each county in the domain and inventory. The program then reads the hourly temperature data and applies the ungridding matrix to calculate source-based temperatures, checking that the temperatures are within the minimum and maximum range allowed by MOBILE6. As each hour of temperature data is read, Premobl shifts the data for each source to the appropriate local time based on the time zone of the source. This shifting accounts for Daylight Savings Time; however, the current version of Premobl does not check to see if some counties are exempt from Daylight Savings Time. For averaging types other than daily averaging, temperatures corresponding to the same source and hour of the day (1-24) are summed across the days in the episode and a count is kept of the total days. Once all hours for the averaging period (week, month, or episode) have been processed, the summed temperature value is divided by the total number of days in the averaging period. Additionally, the temperatures for each hour are summed for all sources assigned to a county or reference county (depending on the spatial averaging used), then divided by the total number of sources summed.</para>

<para>After computing the average 24-hour temperature profiles, Premobl outputs the temperatures to the appropriate file depending on averaging type. For daily temperature profiles (no temporal averaging), each day is written to a separate file. Weekly temperature profiles are written by week starting on Sunday and ending on Saturday. Monthly temperature profiles follow the calendar dates, so a separate file is written for each month using the date for the first of the month in the file. The weekly or monthly files will never begin before the adjusted episode start date or end after the adjusted episode end date; for example, if the episode starts on a Tuesday, the first weekly file will also start on Tuesday (not the previous Sunday) and the subsequent files will start on a Sunday. Finally, for episode-based averaging, a single file is written that covers the entire episode.</para>

</section>

<section>

<title>Compute the criteria and toxics emission factors using MOBILE6</title>

<para>After Premobl has been run, the Emisfac program runs MOBILE6 and creates the emission factor files needed for on-road mobile-source processing by the Temporal program. Emisfac performs a number of input file and other checks, then creates a concatenated MOBILE6 input file; it concludes by running MOBILE6 and writing an emission factors file. These steps are described in more detail in the following paragraphs. Emisfac must be run once for each temperature averaging group (daily, weekly, monthly, and episodic), and it outputs emission factors at the same temporal resolution as the temperature data that are input.</para>

<para>First, Emisfac performs setup and internal checks. It opens and reads the inventory file, speed summary file (SPDSUM), list of MOBILE6 scenarios (M6LIST), emission processes file (MEPROC), inventory table (INVTABLE), speed profiles file (SPDPRO), and first hourly temperature file. It also opens a *GROUP file, depending on what setting is given to the GROUP_TYPE environment variable, which sets the temperature averaging group. Using the emission processes file (MEPROC), Emisfac sets up a list of the process-pollutant combinations that will be generated by the program's run and ensures that this list is valid in MOBILE6. It also checks to see which hydrocarbon type it should create, using the MB_HC_TYPE setting.</para>

<para>Emisfac also uses the inventory table (INVTABLE) to create a list of pollutants to be subtracted from VOC or TOG to calculate NONHAPVOC or NONHAPTOG. If the output hydrocarbon type is not TOG or VOC, this step is skipped. Otherwise, any pollutants listed as part of VOC or TOG in the inventory table and also listed in the MEPROC file (i.e., actually calculated by MOBILE6) are subtracted from TOG to create NONHAPTOG. Pollutants listed only as part of VOC in the inventory table and listed in the MEPROC file will be subtracted from VOC to create NONHAPVOC--hence, these two files must be consistent. Emisfac also prints these listed pollutants to the log file.</para>

<para>Emisfac next creates a concatenated MOBILE6 input file by taking the following steps:</para>

<itemizedlist>
<listitem>
<para>First, Emisfac creates the header for the MOBILE6 input file; this header indicates what type of output to create and which pollutants should be calculated, based on the MEPROC file. Pollutants that are in the MEPROC file but are not intrinsic to MOBILE6 are assumed to be user-defined toxics and a warning is written to that effect in the log file. This section of the MOBILE6 input is concluded by writing the RUN DATA command.</para>
</listitem>
<listitem>
<para>Next, Emisfac loops through the reference counties and opens the appropriate MOBILE6 input scenario (as set by the M6LIST file) for a given county. The user must provide separate MOBILE6 input scenarios for each reference county. SMOKE chooses the correct scenario by comparing the state and county FIPS code for the reference county with the scenario file names. After reading the data from the scenario file, SMOKE checks the scenario for various commands, and comments out the commands that it overrides--for example, SCENARIO RECORD, PARTICLE SIZE, and AVERAGE SPEED. SMOKE also overrides the CALENDAR YEAR command to use the EF_YEAR environment variable setting. If the temperatures in the MOBILE6 scenario are to be replaced with values calculated by Premobl, SMOKE will find the MIN/MAX TEMPERATURE or HOURLY TEMPERATURES command in the scenario and replace it with the appropriate hourly temperatures from the average-temperature input file for the temperature group being processed.</para>
</listitem>
<listitem>
<para>Any run-level commands, such as I/M or anti-tampering program commands in the MOBILE6 inputs, are then passed through to the concatenated input file. Run-level commands are any commands that appear before the SCENARIO RECORD command in the user-provided scenario files. Emisfac also inserts the appropriate EXPRESS HC AS * command, depending on the desired hydrocarbon output type.</para>
</listitem>
<listitem>
<para>Emisfac next uses data from the speed summary file to determine which speeds are needed for the current county. A new external data file to be used with the SPEED VMT command is created for each combination of freeway and arterial speeds. The location of the speed VMT files is determined by the SMK_SPDPATH environment variable. If speed profiles are being used, the speed profile number has been stored in the speed summary file, and SMOKE will look for the corresponding speed profile in the speed profiles file. Otherwise, SMOKE will use the single speed from the speed summary file as the speed for each hour. The hourly speeds are then converted to the format required by the SPEED VMT command, the ramp component of the speeds is optionally removed, and the values are written to the external data file. Whether or not the ramp component is removed is controlled by the ADJUST_INV_SPEED and ADJUST_HR_SPEED environment variables for inventory speeds and speed profiles respectively.</para>
</listitem>
<listitem>
<para>Each speed combination corresponds to a new scenario in the concatenated MOBILE6 file. SMOKE writes the SCENARIO RECORD command with a new scenario number, and then writes the remaining lines of the original scenario file to the concatenated input file. Finally, the SPEED VMT command is written; it includes the name of the external data file created in the previous step.</para>
</listitem>
<listitem>
<para>After all speed combinations have been accounted for, SMOKE writes the END OF RUN command to the concatenated input file. It then goes on to the next reference county and repeats the process.</para>
</listitem>
</itemizedlist>

<para>The last major processing step for Emisfac is to compute the emission factors. Before running MOBILE6, Emisfac opens the output file, so that if there is any problem opening the file (e.g., the directory assigned to contain the file does not exist), this problem is discovered before time is invested in running the MOBILE6 program. The emission factor files are stored using an internally defined name in the user-defined directory (set with the SMK_EMISPATH setting).</para>

<para>Emisfac runs MOBILE6 as a function call. MOBILE6 reads the concatenated input file created by Emisfac and calculates the appropriate emission factors. The version of MOBILE6 used by SMOKE has been modified to aggregate the emission factors to the eight vehicle types needed by SMOKE, because these are the vehicle types for which VMT data are currently available. Any warnings or errors generated by MOBILE6 are written to the Emisfac log file and the standard output (e.g., the screen). When particulate emission factors are computed, Emisfac runs MOBILE6 twice to calculate emission factors for both particle sizes (2.5 and 10 microns), since MOBILE6 can generate emission factors for only one particle size at a time. Emisfac calculates a coarse PM value (PMC) from PM<subscript>2.5</subscript> and PM<subscript>10</subscript> using the formula PMC = PM<subscript>10</subscript> - PM<subscript>2.5</subscript>. For each hour and source, Emisfac locates the correct emission factors based on vehicle type, road type, and speed. For freeway sources, Emisfac computes a composite emission factor that includes the effects of ramps. Emisfac will also compute NONHAPVOC or NONHAPTOG if needed, by subtracting the appropriate toxics emission factors from the VOC or TOG emission factors. Last, Emisfac writes the hourly emission factors.</para>

<para>If additional days of temperature files are available, Emisfac regenerates the concatenated MOBILE6 input file and performs the processing steps again. All 24-hour emission factor sets for each temperature averaging group are written to separate files. When there are no more averaged temperature files available (no more days, weeks, months, or episodes to process), the program completes.</para>

</section>

</section>

<section>

<title>Biogenic processing</title>

<para>The SMOKE system uses a more advanced emissions modeling approach for biogenic processing than it uses for the other source types. For biogenic emissions, the temporal processing is a true simulation model driven by ambient meteorology and other data. SMOKE currently supports two methods for computing biogenic land use: BEIS2 and BEIS version 3.09 (hereafter referred to as BEIS3). BEIS3.10 and 3.11 are also available outside of the SMOKE system from the EPA Office of Research and Development. The overall processing performed by both these models is quite different from the processing done for anthropogenic source categories. BEIS2 and BEIS3 start with spatial allocation of land use data as the first processing step (which is the same as importing the raw inventory data for anthropogenic sources). They next compute normalized emissions for each grid cell and land use category. The final step is adjusting the normalized emissions based on gridded, hourly meteorology data and assigning the chemical species to output a model-ready biogenic emissions file. The following two subsections provide more detail about the two biogenic models in SMOKE and give references to additional detail elsewhere.</para>

<section>

<title>BEIS2 processing</title>

<para>SMOKE/BEIS2 can use either county land use or gridded land use data to generate the normalized emissions values. The land use types that must be provided are specific to BEIS2 and can be created from either the BELD2 or BELD3 land coverage datasets. The SMOKE Beld3to2 program can take the BELD3 data used in BEIS3 modeling and convert them for use in BEIS2 modeling. The Rawbio program uses either a county land use file (BCUSE) or gridded land use file (BGUSE), and it also uses BEIS2 normalized emission factors for either summer or winter. If the county land use data are used, Rawbio requires a spatial surrogates file (BGPRO) for spatially distributing the emissions to the grid cells. It combines these data and outputs normalized biogenic emissions. If both summer and winter emission estimates will be included in the temporal allocation step, then Rawbio must be run twice--once for summer and once for winter.</para>

<para>The next step in creating biogenic emissions is making hour-specific adjustments to the normalized emissions based on the hourly gridded meteorology. The Tmpbio program reads the MCIP meteorology data and makes these adjustments; these include the effects of temperature and solar radiation. The winter emission factors are to be used during the winter period, which is defined as being after the first date of freezing ground temperature and before the last date of freezing ground temperature. The SMOKE Bioseason program can determine this time period and create a gridded file that indicates whether each grid cell is in a winter or summer period for each day of the year. Using this file, which is optional, will cause Tmpbio to read and use both the winter and summer normalized emissions files from Rawbio. Whether the winter or summer normalized emissions are used for a given grid cell and hour is set by the output from the Bioseason preprocessor.</para>

<para>Users can define the chemical species that are output from Tmpbio. Tmpbio reads the speciation profiles file, GSPRO. In this file you can set an environment variable (BIOG_SPRO) that indicates which speciation profile code should be used for biogenic emissions. Tmpbio looks for the "inventory pollutants" OVOC, NO, and TERP in the GSPRO file and splits and/or aggregates these data as specified by the chosen speciation profile. Tmpbio can then output two files with hourly, gridded, and speciated data, one file in moles/hour and a second file in grams/hour. The moles/hour file must be combined with the anthropogenic files to create model-ready emissions and perhaps convert its units to moles/second for CMAQ<remark>, which is explained in Section 2.18</remark>.</para>

</section>

<section>

<title>BEIS3 processing</title>

<para>SMOKE also includes the BEIS3 prototype, BEIS v3.09. Newer versions of BEIS3 are also available on EPA's web site at <ulink url="http://www.epa.gov/asmdnerl/biogen.html" />. The concepts in BEIS3 are similar to those in BEIS2, except the program Normbeis3 (instead of Rawbio) reads gridded land use data from three files in I/O API input format (BELD3_A, BELD3_B, and BELD3_TOT). Only the BELD3 database can be used to generate these gridded land use files. This database consists of high-resolution (1-km horizontal resolution) land use data for 230 land use types. Instead of the Tmpbio program, the Tmpbeis3 program must be used to create the hourly emissions. For this program, the speciation profile that should be used is different from the profile used in Tmpbio. More information on Normbeis3 and Tmpbeis3 is provided in the Chapter 6 descriptions of these programs.</para>

</section>

</section>

<section>

<title>Creating model-ready emissions</title>

<para>Creating emissions with SMOKE that are ready for input to an AQM must always include merging the hourly emissions created during temporal processing with the gridding matrices and the speciation matrices. In addition, for point sources for CMAQ or MAQSIP, creating the model-ready emissions must also include merging with the layer fractions, and for UAM-based models it must include creating the ASCII elevated file. The Smkmerge program performs these processing steps using vector-matrix multiplication to combine the matrices and layer fractions with the hourly emissions vectors from the Temporal program.</para>

<para>If the overall SMOKE processing setup includes running the nonroad mobile category (or other source categories) as separate runs, then Smkmerge cannot be used to combine all source categories into a single output file. Instead, the Mrggrid program would combine the model-ready files from the individual source categories; for example, from separate SMOKE (including Smkmerge) runs for stationary area/nonpoint, nonroad mobile, windblown dust, wildfire, on-road mobile, and point sources. There is no limit to the number of model-ready files that Mrggrid can combine into a single model-ready file, and the input files can be 2-D or 3-D.</para>

<para>Smkmerge can be run for any or all SMOKE source categories, but it can use only one of each SMOKE inventory type (area, biogenic, mobile, and point source) per run. You can run it to create model-ready files for only one SMOKE source category (area, mobile, or point), or you can run it to create both the individual and combined model-ready files. The following list indicates the modes in which Smkmerge can be run:</para>

<itemizedlist>
<listitem>
<para>Run for SMOKE area sources to create gridded, hourly, speciated emissions in moles/hour or moles/second. Can be used for all area sources and/or nonroad mobile sources.</para>
</listitem>
<listitem>
<para>Run for SMOKE mobile sources to create gridded, hourly, speciated emissions in moles/hour or moles/ second.</para>
</listitem>
<listitem>
<para>Run for SMOKE point sources to create 3-D gridded, hourly, speciated emissions in moles/hour for MAQSIP and moles/ second for CMAQ, or run to create 2-D gridded, hourly, speciated emissions in moles/hour for UAM, REMSAD, or CAMX and an ASCII elevated-point-source file.</para>
</listitem>
<listitem>
<para>Run to convert the units and calculate state and county totals of biogenic emissions output by the Tmpbio or Beis3 programs.</para>
</listitem>
<listitem>
<para>Run to perform any combination of the previously listed steps simultaneously and create a combined model-ready file that includes multiple source categories. In this mode, only one each of SMOKE area, mobile, point, and biogenic sources can be included. The same output units must be used for all source categories in a single run.</para>
</listitem>
</itemizedlist>

<para>When creating model-ready emissions for any of the anthropogenic source categories, you may choose to apply one or more control matrices to the emissions to create controlled model-ready emissions. For each source category (area, mobile, or point), you can apply one multiplicative control matrix and one reactivity control matrix per run per source category. Smkmerge is the only way you can apply the reactivity control matrix to the inventory, while the multiplicative control matrix can be applied by either Smkmerge or the Grwinven program.</para>

<para>Many processing steps in SMOKE are independent of one another; for example, chemical speciation and temporal allocation can change without affecting one another. This independence means that when one step changes, another step does not need to be rerun in many cases. However, because Smkmerge combines the data from all of these processing steps to create the model-ready emissions, if one of the upstream steps changes, then the merging step must also be rerun. This includes rerunning Smkmerge to generate model-ready files, and if the Mrggrid program was used, also rerunning that to merge data from multiple source categories together.</para>

<para>Smkmerge also has the ability to input hourly emissions by day of the week and reuse days that are the same. For example, it can input separate hourly emissions files for Monday, a weekday, Saturday, and Sunday, and use these four files to generate model-ready emissions for every day in an entire month. This is accomplished using the MRG_BYDAY SMOKE option, described further in Chapter 6 within the Smkmerge description. Special treatment can also be give to holidays in this case, since users generally wish to model holidays differently than other days. Chapter 4 explains more about how to configure scripts for processing with a Monday, weekday, Saturday, and Sunday approach.</para>

</section>

<section>

<title>Quality assurance</title>

<para>Quality assuring SMOKE emissions includes a combination of (1) steps performed by SMOKE programs and (2) postprocessing steps performed by the user.</para>

<para>The SMOKE components that play a role in quality assurance consist of the following:</para>

<orderedlist>
<listitem>
<para>The various SMOKE programs perform file format checks of all input files to ensure that the files can be read. The programs write errors and warnings if files cannot be read properly.</para>
</listitem>
<listitem>
<para>SMOKE gives error and warning messages about inventory data that are not complete or are invalid, and about problems or possible problems combining the inventory data with the ancillary files.</para>
</listitem>
<listitem>
<para>Core SMOKE programs create reports, such as the area-to-point report provided by Smkinven and the control reports provided by Cntlmat.</para>
</listitem>
<listitem>
<para>The Smkreport program reports emissions totals at various levels of data aggregation. This reporting capability currently allows you to generate reports of emissions by source, SCC, region (e.g., state, county, or user-defined region), road class, layer, hour, grid cell, speciation profile, gridding surrogate code, temporal profile, and elevated status. The most powerful reporting feature is that you can combine these reporting resolutions in <emphasis>any</emphasis> combination. In addition, reports can be created at each stage of processing (import, gridding, speciation, temporal allocation, layer assignment) or any combination of stages.</para>
</listitem>
</orderedlist>

<para>Smkreport can combine information from any SMOKE intermediate files (e.g., intermediate inventory file, speciation matrix, gridding matrix) to create emissions reports. One input file to Smkreport, called the REPCONFIG file, instructs Smkreport on how many and which reports to create. The REPCONFIG file contains a series of instructions that can be set by the user to control the contents of the reports.</para>

<para>The second major component of quality assuring the SMOKE emissions processing involves users taking steps to evaluate the information/reports provided by SMOKE. If users do not take such steps, important aspects of quality assurance will be missed. Users must take at least the following steps:</para>

<orderedlist>
<listitem>
<para>Check that the correct settings have been selected in the run scripts, including the settings that control which SMOKE programs are run.</para>
</listitem>
<listitem>
<para>Check the log files from all SMOKE programs for errors and warnings. Errors will keep the programs from running successfully, so the source of the error must be repaired. Warnings may indicate that a problem exists that needs to be addressed, or warnings can be ignored if they are not something that will impact the results for the particular inventory of interest.</para>
</listitem>
<listitem>
<para>Compare the emissions totals provided by Smkreport (e.g., by state and county) to totals of the emissions inventories computed outside of SMOKE. Also, compare the emissions totals from SMOKE between each of the processing stages. For example, for area sources, compare the emissions after inventory import, gridding, chemical speciation, temporal allocation, and final merge to ensure that the emissions are consistent from step to step. This involves some subjectivity because the emissions do in fact change from step to step, and the magnitude of those changes depends on the ancillary input files SMOKE uses with the inventory.</para>
</listitem>
<listitem>
<para>Check that the correct chemical speciation profiles, temporal profiles, and gridding surrogates were applied, using reports that provide this information from Smkreport.</para>
</listitem>
<listitem>
<para>Perform other specific checks of Smkreport outputs, such as ensuring that the correct major point sources are in the inventory, comparing population-normalized emissions among the counties, and checking stack parameters from point sources.</para>
</listitem>
<listitem>
<para>Ensure that the emissions data look reasonable by viewing them in the Package for Analysis and Visualization of Environmental data (PAVE).</para>
</listitem>
</orderedlist>

<para>Chapter 7 provides much additional detail about how to proceed with quality assuring your inventories and emissions processing.</para>

</section>

</chapter>
