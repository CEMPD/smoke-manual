<?xml version="1.0" encoding="UTF-8"?>

<chapter id="ch_installation">

<title>Downloading, Installing, and Compiling SMOKE</title>

<section>

<title>Introduction</title>

<para>Instructions on how to download and install SMOKE are provided in <xref linkend="sect_install_download" /> and <xref linkend="sect_install_install" />. <xref linkend="sect_install_compile" /> describes how to compile SMOKE for UNIX platforms other than those supported by CMAS. The SMOKE compile scripts are configured to use a UNIX C-shell environment, so they are not useful for creating Windows-based SMOKE files; using SMOKE with any version of the Windows operating system is not supported. If your operating system is one of the types supported by CMAS, you need only to download the SMOKE executables available from the <ulink url="http://www.cmascenter.org/html/models.html">CMAS Model Clearinghouse</ulink>.</para>

</section>

<section id="sect_install_download">

<title>Downloading SMOKE</title>

<para>Steps for downloading SMOKE:</para>

<orderedlist>
<listitem>
<para>Go to the <ulink url="http://www.cmascenter.org/html/models.html">CMAS Model Clearinghouse</ulink>.</para>
</listitem>
<listitem>
<para>Click on the SMOKE link in the list of CMAS-supported products.</para>
</listitem>
<listitem>
<para>If you have already registered with CMAS, enter your email address and password. Otherwise, click the "Register now" link and complete the registration form.</para>
</listitem>
<listitem>
<para>You will be sent to the CMAS Download Center. Select SMOKE as the product you wish to download and select your computer and compiler type.</para>
</listitem>
<listitem>
<para>Download the installation script (<filename>smoke_install.csh</filename>), the source code, scripts, and executables archive (<filename>smoke_${version}.Linux2_x86_64pg.tar.gz</filename>), and the test case data files (<filename>smoke_${version}.nctox.MOVES.data.tar.gz</filename>). Save these files in the same directory on your machine.</para>
</listitem>
</orderedlist>

</section>

<section id="sect_install_install">

<title>Installing SMOKE</title>

<para>Steps for installing SMOKE:</para>

<orderedlist>
<listitem>
<para>Make sure that the three files you downloaded from the CMAS website are in the same directory.</para>
</listitem>
<listitem>
<para>Choose the directory where you want to install SMOKE and the data files. This directory will be known as your <filename class="directory"><envar>SMK_HOME</envar></filename> directory.</para>
</listitem>
<listitem>
<para>At the command line, type:</para>

<para><userinput><command>setenv</command> <envar>SMK_HOME</envar> <replaceable>&lt;your selected directory for SMOKE installation&gt;</replaceable></userinput></para>

<para><emphasis role="bold">NOTE:</emphasis> the SMOKE scripts are designed to run under the UNIX C-shell (either <command>csh</command> or <command>tcsh</command>); the scripts will not work with other shells such as <command>bash</command>.</para>
</listitem>
<listitem>
<para>Make sure your <filename class="directory"><envar>SMK_HOME</envar></filename> directory exists by typing the following command on the command line:</para>

<para><userinput><command>mkdir -p</command> <filename class="directory"><envar>$SMK_HOME</envar></filename></userinput></para>

</listitem>
<listitem>
<para>Go to the directory when you have saved the SMOKE installation files.</para>
</listitem>
<listitem>
<para>Type the following at the command line:</para>

<para><userinput><command>source</command> <filename>smoke_install.csh</filename></userinput></para>

<para>This command will unzip and install the SMOKE files in your <filename class="directory"><envar>SMK_HOME</envar></filename> directory. If the script encounters any problems, it will print an error message to point you to the problem.</para>
</listitem>
</orderedlist>

<para>The <envar>SMK_HOME</envar> setting is needed by the SMOKE scripts. Therefore, it is best to always have this setting defined when you log into your computer. To do this, perform the following additional steps before proceeding:</para>

<orderedlist continuation="continues">
<listitem>
<para>Go to your home directory, then use a text editor to view the <filename>.cshrc</filename> file (note that this file is a hidden file, which can be listed in UNIX using the <command>ls -a</command> command at the prompt).</para>
</listitem>
<listitem>
<para>In the <filename>.cshrc</filename> file, add the following line:</para>

<para><userinput><command>setenv</command> <envar>SMK_HOME</envar> <replaceable>&lt;your selected directory for SMOKE installation&gt;</replaceable></userinput></para>
</listitem>
<listitem>
<para>Save and close the <filename>.cshrc</filename> file. Your <filename class="directory"><envar>SMK_HOME</envar></filename> directory will now be defined automatically when you log into the computer or when you open a new <command>xterm</command> window.</para>
</listitem>
</orderedlist>

<para>Now you are ready to run the SMOKE nctox case. Running SMOKE is described in <xref linkend="ch_scripts" />, which discusses using the SMOKE scripts. Please refer to <xref linkend="sect_scripts_run_example" /> for instructions on running the example scripts for the nctox case. The current SMOKE documentation can be found online at <ulink url="http://www.smoke-model.org" />.</para>

</section>

<section id="sect_install_compile">

<title>Compiling SMOKE for UNIX</title>

<para>If the executables for your platform are not available from the CMAS web site, you will need to compile SMOKE for your system. You may also need to compile SMOKE if you would like to modify the source code. The following steps will help get you set up to compile SMOKE.</para>

<itemizedlist>
<listitem>
<para>Install SMOKE as described in <xref linkend="sect_install_install" />. You may receive an error message indicating that the Assigns file could not be sourced when you run the <filename>smoke_install.csh</filename> script.</para>
</listitem>
<listitem>
<para>The <filename><envar>$SMK_HOME</envar>/scripts/setup_edss</filename> script sets the <envar>$EDSS_OS</envar> environment variable based on the results of the <command>uname</command> command. The <filename><envar>$SMK_HOME</envar>/scripts/platform</filename> uses <envar>$EDSS_OS</envar> to determine the appropriate compiler command and options for your system. The <filename>platform</filename> script has compiler options for several UNIX systems and you will either need to review these settings for your compiler or add settings if your system is not included.</para>

<itemizedlist>
<listitem>
<para>Source the <filename>platform</filename> script as follows:</para>

<para><userinput><command>cd</command> <filename><envar>$SMK_HOME</envar>/scripts</filename></userinput></para>

<para><userinput><command>source</command> <filename>platform</filename></userinput></para>

</listitem>


<listitem>

<para>If your system is not recognized by the script, you will get an error message and you will need to add your system to the <filename>platform</filename> script. Check the value of the <envar>$EDSS_OS</envar> environment variable and set it to the switch statement. This switch statement sets the <envar>SMOKE_EXE</envar> environment variable which is then used in the switch statement.</para>

<para>The compiler and its options are set by the switch statement. The default Linux Portland Group compiler options for the optimized executable are:</para>

<itemizedlist spacing="compact">
<listitem>-O2: default optimization level</listitem>
<listitem>-Msave: save all local variables</listitem>
<listitem>-Mbackslash: treat backslash as a normal (non-escape) character in strings</listitem>
<listitem>-Mbyteswapio: swap bytes from big-endian to little-endian or vice versa on input/output of unformatted Fortran data. This option is needed when reading or writing binary files for CAMx, REMSAD, or UAM on Linux.</listitem>
<listitem>-Kieee: perform real and double precision divides in conformance with the IEEE 754 standard. This option improves floating-point precision.</listitem>
<listitem>-Mextend: allow 132-column source lines</listitem>
<listitem>-Bstatic: use static binding of libraries</listitem>
</itemizedlist>

<para>if you are not using the default Linux2_x86_64pg settings, you will need to check (or add) your Fortran compiler (using the environment variable <envar>FC</envar>) and the compiler options. The environment variable <envar>FFLAGS</envar> sets the Fortran compiler options for the optimized executables and the <envar>DBGFLAGS</envar> variable sets the options for the debug executables. You should set your options to match the options used for the Linux compile of SMOKE as closely as possible. First of all, set the environment variables listed below at the command line prior to invoking the SMOKE Assigns files.</para>

<para><command>Linux2_x86_64ifort with Intel Fortran</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE Linux2_x86_x86ifort</envar></listitem>
<listitem><envar>setenv FC ifort</envar></listitem>
<listitem><envar>setenv FFLAG "-O3 -cm -132 -zero -save -common-args -i-static -convert big_endian"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g -cm -132 -zero -save -common-args -i-static -convert big_endian"</envar></listitem>
</itemizedlist>

<para><command>Linux2_x86 with Intel Fortran</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE Linux2_x86ifc</envar></listitem>
<listitem><envar>setenv FC ifort</envar></listitem>
<listitem><envar>setenv FFLAG "-O2 -save -zero -extend_source -nbs -W0"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g -CB -CS -CU -extend_source -save -zero â€“nbs"</envar></listitem>
</itemizedlist>

<para><command>32-bit SGI IRIX6</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE IRIXn32f90-O2</envar></listitem>
<listitem><envar>setenv FC f90</envar></listitem>
<listitem><envar>setenv FFLAG "-static â€“n32 â€“col80 -align64 -O3"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-static -n32 â€“col80 -align64 -g -C \</envar></listitem>
<listitem><envar>-DEBUG:conform_check=on:div_check=3:trap_uninitialized=on"</envar></listitem>
</itemizedlist>

<para><command>64-bit SGI IRIX6</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE IRIXn64f90Y</envar></listitem>
<listitem><envar>setenv FC f90</envar></listitem>
<listitem><envar>setenv FFLAG "-static â€“n64 â€“col80 -align64 -O3"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-static -n32 â€“col80 -align64 -g -C \</envar></listitem>
<listitem><envar>-DEBUG:conform_check=on:div_check=3:trap_uninitialized=on"</envar></listitem>
</itemizedlist>

<para><command>SunOS5</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE SunOS5f90</envar></listitem>
<listitem><envar>setenv FC f90</envar></listitem>
<listitem><envar>setenv FFLAG "-O3 -Bstatic"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g â€“C"</envar></listitem>
</itemizedlist>

<para><command>HP UX11</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE HP_UX11f90</envar></listitem>
<listitem><envar>setenv FC f90</envar></listitem>
<listitem><envar>setenv FFLAG "+O3"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g â€“C"</envar></listitem>
</itemizedlist>

<para><command>64-bit AIX5</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE AIX5f90</envar></listitem>
<listitem><envar>setenv FC xlf</envar></listitem>
<listitem><envar>setenv FFLAG "-WF,-D_AIX -O3 -q64 -qfixed=132"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g -C -b64 -qfixed=132 -bmaxdata:0X20000000"</envar></listitem>
</itemizedlist>

<para><command>64-bit AIX4</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE AIX4n64f90</envar></listitem>
<listitem><envar>setenv FC xlf</envar></listitem>
<listitem><envar>setenv FFLAG "-O3 -bmaxdata:0X20000000"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g -C -b64 -bmaxdata:0X20000000"</envar></listitem>
</itemizedlist>

<para><command>32-bit AIX4</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE AIX4f90</envar></listitem>
<listitem><envar>setenv FC xlf</envar></listitem>
<listitem><envar>setenv FFLAG "-O3 -bmaxdata:0X20000000"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g -C -bmaxdata:0X20000000"</envar></listitem>
</itemizedlist>

<para><command>Alpha Linux</command></para>
<itemizedlist spacing="compact">
<listitem><envar>setenv SMOKE_EXE Linux2_Alpha</envar></listitem>
<listitem><envar>setenv FC fort</envar></listitem>
<listitem><envar>setenv FFLAG "-O5 -fast -automatic -assume no2underscores"</envar></listitem>
<listitem><envar>setenv DBGFLAG "-g -C"</envar></listitem>
</itemizedlist>

</listitem>

</itemizedlist>
</listitem>

<comment>
<listitem>
<para>If you are using default settings, enter the following commands from the UNIX prompt. Otherwise skip this step:</para>

<para><userinput><command>cd</command> <filename><envar>$SMK_HOME</envar>/scripts</filename></userinput></para>

<para><userinput><command>source</command> <filename>platform</filename></userinput></para>

<para>This sets the <envar>SMOKE_EXE</envar> environment variable needed in the next steps.</para>
</listitem>
</comment>

<listitem>
<para>Download the I/O API library from the <ulink url="http://www.baronams.com/products/ioapi/">I/O API home page</ulink> and compile with <filename>Makeinclude.Linux2_x86_64pg</filename>. The I/O API can be installed in <filename><envar>$SMK_HOME</envar>/subsys/ioapi</filename> or you can place symbolic links to the <filename>libioapi.a</filename> library file and <filename>datshift</filename> utility program in the <filename><envar>$SMK_HOME</envar>/subsys/ioapi/Linux2_x86_64pg/</filename> directory.</para>
</listitem>
<listitem>
<para>Create the directory <filename><envar>$SMK_HOME</envar>/subsys/ioapi_includes/</filename> and then copy the <filename>*.EXT</filename> files from the <filename>fixed_src</filename> directory of your I/O API installation to this new directory.</para>
</listitem>
<listitem>
<para>Note: If the user wants to see interactive screen outputs while running SMOKE, follow these steps; 1) Add <filename>IOAPIDEFS = -DIOAPI_STDOUT</filename> to <filename>Makefile</filename> and 2) Add <filename> DEFINEFLAGS = IOAPI__DEFS &dollar;(ARCHFLAGS) &dollar;(PARFLAGS)</filename> to the <filename>Makefile.nocpl.sed</filename> for a proper IOAPI compilation for the SMOKE model.</para>
</listitem>
<listitem>
<para>Note: If there are any error messages during compilation regarding <filename>CONST3.EXT</filename>, go to the <filename>fixed_src</filename> directory, edit <filename>CONST3.EXT</filename> and delete the second <command>&amp;</command> at the end of line 42.</para>
</listitem>
<listitem>
<para>Collect or create the NetCDF library for your platform and create a symbolic link to the <filename>libnetcdf.a</filename> library file in the <filename><envar>$SMK_HOME</envar>/subsys/netcdf/<envar>$SMOKE_EXE</envar>/</filename> directory.</para>
</listitem>
<listitem>
<para>If needed, update the files</para>

<itemizedlist>
<listitem><filename><envar>$SMK_HOME</envar>/subsys/edss_tools/setup/sysflags</filename></listitem> <listitem><filename><envar>$SMK_HOME</envar>/subsys/filesetapi/sysflags</filename></listitem>
<listitem><filename><envar>$SMK_HOME</envar>/subsys/smoke/assigns/sysflags</filename></listitem>
</itemizedlist>

<para>to have the compiler options for your operating system. See the instructions above for the <filename>platform</filename> file updates to determine whether you need to do this. All of the same cases available in the <filename>platform</filename> file are also available in these three files.</para>
</listitem>

<listitem><para>After the appropriate libraries and compile options have been installed, you can source an Assigns file to ensure that your system is configured properly.</para>

<para><userinput><command>cd</command> <filename class="directory"><envar>$SMK_HOME</envar>/subsys/smoke/assigns</filename></userinput></para>

<para><userinput><command>source</command> <filename>ASSIGNS.nctox.cmaq.cb05_soa.us12-nc</filename></userinput></para>
</listitem>

<listitem><para>At this point, you may need to create some symbolic links that are normally created by the <filename>smoke_install.csh</filename> script. If your system was not in the <filename>platform</filename> script, then these links would not have been created. You can use the following shell script to create the symbolic links.</para>

<programlisting>#!/bin/csh

cd $SMKROOT/src
foreach dir ( biog cntlmat emmod emqa emutil grdmat inc lib \
              movesmrg point smkinven smkmerge spcmat temporal )
    cd $dir
    ln -s ../../scripts/make/Makeit ./
    cd ..
end

cd $ARDAT
echo "#LIST" > arinv.stationary.lst
ls $ARDAT/arinv.nonpoint.nti99_NC.new.txt >> arinv.stationary.lst
ls $ARDAT/arinv.stationary.nei96_NC.ida.txt >> arinv.stationary.lst

cd $INVDIR/nonroad
echo "#LIST" > arinv.nonroad.lst
ls $INVDIR/nonroad/arinv.nonroad.n* >> arinv.nonroad.lst

cd $PTDAT
echo "#LIST" > ptinv.lst
ls $PTDAT/ptinv.n* >> ptinv.lst

.....

</programlisting>
</listitem>

<listitem>
<para>You should now be ready to compile the SMOKE programs. Change directories to <filename class="directory"><envar>$SCRIPTS</envar>/make/</filename>.</para>
</listitem>
<listitem>
<para>Optionally edit the header of the <filename>Makeall</filename> file to turn off building one or more libraries needed for SMOKE (libfileset, libedsstools, libsmoke, or libmo6). You can turn off these options only if these libraries have been previously compiled for your system.</para>
</listitem>
<listitem>
<para>At the UNIX prompt, type:</para>

<para><userinput><command>Makeall</command></userinput></para>

<para>The only errors that are acceptable when you use this script are errors after the <command>/bin/rm</command> commands. The <command>/bin/rm</command> commands will fail if there are no object files (<filename>*.o</filename> files) in your SMOKE source code directories. This will be the case if you have not previously compiled SMOKE.</para>
</listitem>

<listitem>
<para>After running the <filename>Makeall</filename> script, you should have the following executables in the <envar>$SMK_BIN</envar> directory:</para>

<para><filename>aggwndw</filename>, <filename>beld3to2</filename>, <filename>bluesky2inv</filename>, <filename>cemscan</filename>, <filename>cntlmat</filename>, <filename>elevpoint</filename>,  <filename>extractida</filename>, <filename>geofac</filename>, <filename>grdmat</filename>, <filename>grwinven</filename>, <filename>invsplit</filename>, <filename>layalloc</filename>, <filename>laypoint</filename>, <filename>met4moves</filename>, <filename>metcombine</filename>, <filename>metscan</filename>, <filename>movesmrg</filename>, <filename>mrgelev</filename>, <filename>mrggrid</filename>, <filename>normbeis3</filename>, <filename>pktreduc</filename>,  <filename>rawbio</filename>, <filename>smk2emis</filename>, <filename>smkinven</filename>, <filename>smkmerge</filename>, <filename>smkreport</filename>, <filename>spcmat</filename>, <filename>surgtool</filename>, <filename>temporal</filename>, <filename>tmpbeis3</filename>, <filename>tmpbio</filename>, <filename>uam2ncf</filename></para>
</listitem>

<listitem>
<para>If you would like to compile individual programs, you can do so using the <command>Makeit</command> command in the appropriate source code directory. For example, to make the <command>Smkinven</command> program, type the following:</para>

<para><userinput><command>cd</command> <envar>$IV_SRC</envar></userinput></para>

<para><userinput><command>Makeit</command> smkinven</userinput></para>
</listitem>

<listitem>
<para>Once you have compiled the SMOKE programs, you can run the SMOKE example scripts following the instructions in <xref linkend="sect_scripts_run_example" />.</para>
</listitem>
</itemizedlist>

</section>

</chapter>
